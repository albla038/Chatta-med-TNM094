2025-05-07 10:20:12,911 - INFO - Last Question: Vad kan du hjälpa till med?
2025-05-07 10:20:12,912 - INFO - Conversation: [ConversationData(id='b22d8bac-dc80-445d-8254-055a04dc146b', role='user', content='Vad kan du hjälpa till med?')]
2025-05-07 10:20:12,912 - INFO - Number of Found Documents: 0
2025-05-07 10:20:12,912 - INFO - Found Documents: []
2025-05-07 10:20:12,912 - INFO - -----------------------------

client_session: <aiohttp.client.ClientSession object at 0x000001C8BE420650>
2025-05-07 10:22:13,812 - INFO - Last Question: Vad ska ingå i den individuella rapporten?
2025-05-07 10:22:13,812 - INFO - Conversation: [ConversationData(id='b22d8bac-dc80-445d-8254-055a04dc146b', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-8b120edc-2de6-4819-827f-6ad8ef06c964', role='assistant', content='Jag kan hjälpa till med frågor relaterade till kursen TNM094, som exempelvis kursinnehåll, studietekniker, projektarbete, tentor och liknande ämnen. Om du har specifika frågor, ställ gärna dem!'), ConversationData(id='0d03bcee-c79e-4229-8b21-157c19c7060b', role='user', content='Vad ska ingå i den individuella rapporten?')]
2025-05-07 10:22:13,813 - INFO - Number of Found Documents: 10
2025-05-07 10:22:13,813 - INFO - Found Documents: [(Document(id='instruktioner-individuell_rapport-x.pdf-p0-c0-35006afc-cece-4fea-803b-d9f178b1bf5d', metadata={'relative_path': 'Induviduell rapport\\instruktioner-individuell_rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpdoosd9p6\\instruktioner-individuell_rapport-x.pdf', 'start_index': 0.0}, page_content='Individuell rapport\n\nSyfte\n\nDet finns flera syften med denna examinationsform. Främsta syftet är att locka fram reflektion över hur teorierna appliceras i ett verkligt projekt och omvandlas till praktik samt lägga en kunskaps- mässig grund inför projektarbetet och den gemensamma utformningen av projektplanen. Dessutom används den som individuell kunskapskontroll för att säkerställa att varje individ uppnått kravet för godkänt i kursen och att de uppnått en förståelse nödvändig för projektet.\n\nObservera att kursledningen förbehåller sig rätten att vidta åtgärder utifrån resultatet på den individuella rapporten för att säkerställa kvalitén på projekten.\n\nUppgiften\n\nUppgiften är att individuellt utifrån sin egen uppfattning av det tilldelade projektet göra en välmotiverad teknisk utredning för ett problem relaterat utförandet av projektet samt skapa en genomarbetad plan för hur projektet skulle kunna genomföras. Du har frihet att ta in egna visioner och införa premisser som inte finns i det egna teamet. Planen och motiveringen till alla beslut beskrivs i en regelrätt rapport. Eftersom det gemensamma planen ännu inte har sammanställts, så baseras förslaget till stor del på den egna uppfattningen av projektet, egna val och beslut samt egen efterforskning, eventuellt efter diskussion med kund eller teammedlemmar.'), 0.844430566), (Document(id='mall_projekt-rapport.pdf-p0-c10-3b76e8f3-6230-4b0f-9fa5-c49dda4184b6', metadata={'relative_path': 'Utvecklingsprojekt\\mall_projekt-rapport.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp4idvcegs\\mall_projekt-rapport.pdf', 'start_index': 13159.0}, page_content='Här ska också arbetets konsekvenser för berörd målgrupp och eventuellt för forskare och praktiker beskrivas. Man kan också ha ett stycke eller avsnitt om framtida arbete där man beskriver vad man skulle vilja göra om man hade mer tid eller som rekommendationer för framtida studier eller exjobb. Om man har ett sådant stycke är det dock viktigt att det är konkreta och väl genomtänkta förslag som presenteras, snarare än vaga idéer.\n\nI det slutliga förslaget på projektrapport kan ni här kortfattat beskriva vad som mer är planerat att göra som möjligen kommer att komma med i slutrapporten.\n\n8\n\nLitteraturförteckning\n\n[1] Shari Lawrence Pﬂeeger och Joanne M. Atlee, Software Engineering, Fourth Edition, Interna-\n\ntional Edition, Pearson 2010\n\n[2] Författare, Titel, Organisation, yyyy-mm-dd, hämtad: yyyy-mm-dd\n\nhttp://länk/till/sidan\n\n9\n\nBilaga A\n\nReﬂektion över systemutvecklingsprocessen\n\nMax 2 sidor exklusive bilder (1000 ord).\n\nReﬂektera gemensamt över hur er faktiska arbetsprocess gick till i jämförelse med hur ni planerat att arbeta. Reﬂektera över hur väl eller ej fungerande de rutiner, processer samt projekterings- och utvecklingsverktyg som planerats och använts var. Reﬂektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från de individuella rapporterna.\n\nA.1 Person A\n\nMax 1 sida per person.'), 0.8400395515), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c1-b07a8e34-8f5a-4f84-8dbc-d28c75c2d337', metadata={'relative_path': 'Utvecklingsprojekt\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpcn5atle1\\instruktioner-projekt-rapport-x.pdf', 'start_index': 1236.0}, page_content='algoritmer, formler och ekvationer som systemet bygger på.\n\nBeskrivning av metoden, den praktiska lösningen, som ligger till grund för utredningen. Här kan systemarkitektur, programdesign och dynamiska modeller användas för att ge en bra beskrivning av hur systemet fungerar och därmed främja reproducerbarhet av resultatet.\n\nResultat kopplade till era frågeställningar. Resultaten kan komma från användarstudier, prestandamätningar, jämförelser mellan lösningar och annat som gör att ni senare kan besvara frågeställningarna.\n\n(Endast i versionen för opponering: kortfattat, i bilaga eller eget avsnitt under slutsatser-\n\nkapitel, vad planerat arbete som också kommer att vara med i slutrapporten.)\n\nI bilagor:\n\nEn gemensam reflektion, på max två sidor, över hur det faktiska genomförandet av arbetet gick jämfört med planeringen av utvecklingsprocessen. Reflektera över hur väl eller ej fungerande de rutiner, processer samt projekterings och utvecklingsverktyg som planerats och använts var. Reflektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från er gemensamma och individuella rapporter.\n\nEn individuell reflektion, på max en sida, över varje persons roll i projektet.'), 0.8331543505), (Document(id='TNM094_sprakaterkoppling_vt24.pdf-p0-c0-b8a20848-64cd-4c2c-8fe0-554fc53d48b9', metadata={'relative_path': 'Språkstrimma\\TNM094 språkåterkoppling vt24.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmph5m2ny2z\\TNM094 språkåterkoppling vt24.pdf', 'start_index': 0.0}, page_content='Återkoppling på individuella rapporter TNM094\n\nSpråk och formalia som vi kommenterat:\n\nVictoria, Britta, Ulrika, Maria, Per-Olof\n\nVT24\n\nInformationsflödet\n\nInledningen kräver ofta mer kontext kring projekten: När, var, hur, vad, vem/vilka och varför?\n\nSammanfattningen får inte syfta på något som sägs inne i rapporten. Självständig text. Förklara begrepp och förkortningar redan här. Avslöja ”slutet”, dvs slutsatsen\n\nInledningen får heller inte bygga vidare på sammanfattningen. Börja om med informationen. Plantera viktig information här (obestämd form: ett projekt planeras…)som sedan kan byggas vidare på i bestämd form (i projektet…)\n\nInformationsflödet\n\nSammanhangsord saknas i hög grad- leder till ensamma öar av information. Uppgiften är att visa hur de olika delarna hänger ihop, dvs att det ena leder till det andra eller står i något slags förhållande till vad som redan sagts eller ska sägas:\n\n… som nämnts i kap. 2.3… Däremot kan inte… En annan etisk aspekt är… Slutligen redogörs för…\n\nAvsluta inte rapporten i ett hörn: Avrunda helheten genom en slutsats.\n\nEtisk diskussion\n\nSvårt att få bra sammanhang och substans i detta kapitel.\n\nIntroducera först ämnet som ska diskuteras: Ett etiskt dilemma som kan uppstå är… Kommentera sedan: Det behöver övervägas om… Effekten kan bli att.. För att undvika detta kan en lösning vara…\n\nAnvänd ett inkluderande och etablerat språkbruk: funktionsnedsatta/varierade, synnedsättning, hörselnedsättning, …'), 0.828071445), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c2-25041be3-d7c3-4f63-8292-e4cea52964a0', metadata={'relative_path': 'Utvecklingsprojekt\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpcn5atle1\\instruktioner-projekt-rapport-x.pdf', 'start_index': 2585.0}, page_content='Reflektera över vad som fungerade väl och vad som skulle kunna förbättras. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter.\n\nEn lista över vilka som varit involverade i projektet, inom teamet och utanför, med en beskrivning av någonting som de, genom individuellt, självständigt arbete, bidragit med. Detta bör inte vara en lista över vilka rader kod eller dokument man skrivit utan kan bestå av en beskrivning av egna ansvarsområden, moduler man på egen hand arbetat med, eller andra beskrivningar som gruppen anser rättvist visar på varje medlems individuella bidrag. De flesta grupper arbetar både i grupp och individuellt, så en fungerande struktur är att beskriva både vilka gemensamma bidrag man varit delaktig i och vad man bidragit med självständigt arbete.\n\nMålgrupp Rapporten ska rikta sig till kollegerna i kursen; räkna med viss förståelse för utvecklingsprinciper och medietekniska ämnen; beskriv mer tydligt mindre kända detaljer som är viktiga för förståelsen för rapporten. Till exempel behövs ingen genomgång av Scrums alla olika principer eller vad ett designmönster är. Däremot kan man hänvisa till Scrum-roller vid reflektionen av hur gruppen har arbetat och ett designmönster kan behöva beskrivas ifall detaljer i systemets programdesign grundar sig på det.'), 0.8250947595), (Document(id='mall_projekt-rapport.pdf-p0-c11-a1d7c3c7-0cfd-4413-8029-272446d6828a', metadata={'relative_path': 'Utvecklingsprojekt\\mall_projekt-rapport.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp4idvcegs\\mall_projekt-rapport.pdf', 'start_index': 14603.0}, page_content='A.1 Person A\n\nMax 1 sida per person.\n\nIndividuell reﬂektion där varje person i projektet reﬂekterar över dess roll(er) i projektet. Vad funge- rade väl och vad skulle kunna förbättras? Gjordes några förändringar under projektet och vad blev utfallet i så fall? Ange referenser till litteratur som instämmer med eller motsäger erfarenheterna. Förslag på upplägg: En paragraf som beskriver din roll och vad du gjort, en paragraf som beskriver hur det bör ha fungerat i teorin (ange referenser till böcker/artiklar), och en paragraf som beskriver förändringar och vad som skiljde sig från teorin.\n\nA.2 Person B\n\n10\n\nBilaga B\n\nIndividuella bidrag\n\nEn lista över vilka som varit involverade i projektet, inom teamet och utanför, med en beskrivning av någonting som de, genom individuellt, självständigt arbete, bidragit med.\n\n11\n\nBilaga C\n\nBilaga\n\nEfter \\appendix placeras kapitel som ska behandlas som appendix. Dessa innehåller delar av rapporten som inte är viktiga för att kunna ta till sig innehållet, men som ändå är kopplade till arbetet. Exempel är diagram över hur systemet är uppbyggt, site-karta och skärmdumpar från ett webbsystem som utvecklades inom projektet.\n\n12\n\nBilaga D\n\nAllmänt om språkbruk\n\nDet ﬁnns många guider för språkbruket i rapporter, artiklar och konferensbidrag. Några exempel\n\nEnkla språkregler, Studieverkstan, Högskolan i Skövde, 2014-11-03, hämtad 2014-12-10 http://www.his.se/Ar-student/Studievagledning/studieverkstan/Enkla-sprakregler/'), 0.8235170545), (Document(id='Granska_ditt_eget_skrivande.pdf-p0-c0-6e679a7c-7065-4414-b54b-04e7f8bf0902', metadata={'relative_path': 'Språkstrimma\\Granska ditt eget skrivande.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp11sfnbi\\Granska ditt eget skrivande.pdf', 'start_index': 0.0}, page_content='Granska ditt eget skrivande\n\nED, KTS, MT\n\nIndividuella rapporter, planeringsrapporter inför kandidatarbete\n\nFörutsättningar:\n\n1. Rapporten har en bestämd struktur eller utgår från en mall som skribenten inte kan ändra.\n\nExempel: Innehållsförteckning, kapitelindelning, ”tomma” rubriker. 2. Rapporterna kan ha olika krav på referenser och referenssystem. Exempel: Referatmarkeringar, användning av litteratur och referenslista\n\nAllmänna kommentarer:\n\nSammanfattningen ska innehålla tre stycken: Syfte, Metod och Resultat. Omfattning : ca 1/2 sida. Det är bra med kapitelpresentationer i rapporter; använd tomma rubriker till att presentera helheten i kapitlet. Använd också kärnmeningar för att inleda stycken.\n\nAllmänna kommentarer:\n\nBestäm hur ni ska göra med engelska begreppen i texten och gör på samma sätt hela vägen Bra med en tydlig punktlista. Språket fungerar med halva meningar, just för att det är en punktlista. Bestäm tempus (presens, preteritum, futurum) i olika avsnitt. Prata med handledaren!\n\nFråga: Behövs en referens till varenda begrepp? Svar: Det är svårt att avgöra om ett begrepp behöver en referens, men viktiga frågor att ställa till skribenten är: Är det allmänt känt och vedertaget och upplevs som enkelt av alla som läser rapporten? (Ingen referens krävs) Används begreppet som det brukar användas? (Ingen referens krävs)'), 0.8222432735), (Document(id='lecture-00_Kursinformation.pdf-p0-c3-8f9cb440-c9e4-432d-9231-9a9fc803f713', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 4280.0}, page_content='Viktiga milstolpar för projektet\n\nKundkontakt Projektplan Avstämningar Färdig projektrapport (2x) Slutseminarium\n\nViktiga personliga hållpunkter\n\nIndividuell rapport (2x) – lärt er inför andra inlämningen\n\nOpponeringsrapport\n\nFörsta två veckorna i projektet\n\nUppstartsmöte för gruppen\n\nKundkontakt Fördela ansvarsområden för undersökning av lösningar Sätt upp versionshantering och bjud in mig\n\nSe till att ni kan rivstarta efter individuell rapport\n\nIndividuell rapport\n\n1,5 hp = 40 h arbetstid Två delar • Teknisk utredning\n\nUtred olika tekniska lösningar eller hur gruppen bör arbeta Använd resultatet av utredningen i projektplanen\n\nProjektplan\n\nPlanera utvecklingsprojektet med frihet att inkludera egna visioner Utnyttja teorier för att skapa en bra plan\n\nEn rapport\n\n…som i detalj beskriver den personliga planen och motiverar val utifrån teorier och praxis\n\nIndividuell rapport\n\nExamination\n\n‒ Språklig bedömning av ISV/Språkverkstaden\n\nBra stavning, grammatik, flöde och struktur krävs\n\nSpråkligt godkänt krävs för godkänt på uppgiften\n\n‒ Teknisk bedömning av tekniskt lärarlag\n\nRättas enligt mall som ni har tillgång till och ska använda\n\n‒ Komplettering\n\nEn andra rättning av komplettering sker under HT1\n\nIndividuella rapporter -> Gemensam plan\n\nInnan ett projekt påbörjas behövs en plan… • Skapa en gemensam projektplan\n\nKom överens utifrån era individuella planer\n\nUtnyttja teorier för att skapa en bra plan\n\nViktigt att tänka på'), 0.8206956089999999), (Document(id='mall_individuell_rapport_(1).pdf-p0-c0-57eaf1f7-3199-42ac-a5b1-c84910e3c22c', metadata={'relative_path': 'Induviduell rapport\\mall_individuell_rapport (1).pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpug74q4x9\\mall_individuell_rapport (1).pdf', 'start_index': 0.0}, page_content='Individuell projektplan, TNM094\n\nFörnamn Efternamn Projekt-titel\n\n19 januari 2025\n\nSammanfattning\n\nEn sammanfattning ska kort och koncist beskriva och motivera det studerade problemet, metoden samt resultat och slutsatser. Arbetets bidrag till huvudområdet ska tydligt framgå. Vad är det rappor- ten säger om huvudområdet som vi inte visste tidigare? Även om sammanfattningen ligger först i rapporten så behöver ni alltid gå tillbaka och justera den när ni är klara med analys och slutsatser.\n\nSammanfattningens längd växer med längden på rapporten. I en rapport av denna typ kan den vara tre stycken lång: ett inledande motiverar arbetet och beskriver bakgrund och utmaningar, ett samman- fattar de viktigaste delarna i metoden och ett beskriver diskussion och slutsatser. Sammanfattningen innehåller inga referenser eller ekvationer. I den här rapporten kan ni lägga upp det enligt nedan\n\nFörsta stycket: Beskriv bakgrunden och vilka utmaningar som utreds i rapporten.\n\nAndra stycket: Sammanfatta de utredningar/jämförelser som har gjorts och kopplar till frågeställning- arna. Har du till exempel en frågeställning som handlar om hur en viss typ av kvalité kan säkerställas så du sammanfatta vilka olika alternativ som beaktats och deras för- och nackdelar.'), 0.8203157485), (Document(id='instruktioner-individuell_rapport-x.pdf-p0-c2-31c4dab5-2080-4116-a730-f5b8e4ec89be', metadata={'relative_path': 'Induviduell rapport\\instruktioner-individuell_rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpdoosd9p6\\instruktioner-individuell_rapport-x.pdf', 'start_index': 2695.0}, page_content='det som inte planerats för kommer inte att genomföras\n\nen plan kan användas av alla intressenter för att svara på frågor såsom ”hur arbetar gruppen med kvalitet?”, ”vem ansvarar för systemets struktur” eller ”hur ska jag som utvecklare hantera koden?”\n\nAtt skriva Inledning\n\nInledningen på en rapport inleder läsaren till rapporten och beskriver den på ett sätt så att läsaren kan få svar på frågor som exempelvis ”Vad är det rapporten handlar om?” och ”Vilka frågor kan jag förvänta mig att få svar på om jag läser rapporten?”. Därmed bör man kort beskriva själva projektet och vad som är dess bakgrund, för att läsaren ska förstå vad rapporten handlar om, men inte inkludera detaljer ur redogörelse för arbetet. Det som besvarar inledningens frågeställningar och syfte ska istället redogöras för i efterföljande kapitel.\n\nExamination\n\nExaminationen sker genom rättning både språkligt och tekniskt och för godkänt på rapporten krävs godkänt på båda rättningarna. Den tekniska rättningen sker enligt bedömningsmallen i kursdokumenten (Individuell rapport/bedömningsmall-individuell_rapport) medan den språkliga rättningen sker av personal på ISV/Språkverkstaden.'), 0.813406676)]
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\ufb02' in position 2675: character maps to <undefined>
Call stack:
  File "<string>", line 1, in <module>
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 135, in _main
    return self._bootstrap(parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 314, in _bootstrap
    self.run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\_subprocess.py", line 80, in subprocess_started
    target(sockets=sockets)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\server.py", line 66, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 641, in run_until_complete
    self.run_forever()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 608, in run_forever
    self._run_once()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1936, in _run_once
    handle._run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 84, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\protocols\websockets\websockets_impl.py", line 243, in run_asgi
    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)  # type: ignore[func-returns-value]
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\middleware\proxy_headers.py", line 60, in __call__        
    return await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\errors.py", line 152, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\cors.py", line 77, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 362, in handle
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 95, in app
    await wrap_app_handling_exceptions(app, session)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 93, in app
    await func(session)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\routing.py", line 383, in app
    await dependant.call(**solved_result.values)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\main.py", line 229, in ws_llm_conversation
    async for chunk in handle_conversation_stream(data):
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\services.py", line 109, in handle_conversation_stream
    logger.info(f"Found Documents: {found_documents}")
Message: "Found Documents: [(Document(id='instruktioner-individuell_rapport-x.pdf-p0-c0-35006afc-cece-4fea-803b-d9f178b1bf5d', metadata={'relative_path': 'Induviduell rapport\\\\instruktioner-individuell_rapport-x.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpdoosd9p6\\\\instruktioner-individuell_rapport-x.pdf', 'start_index': 0.0}, page_content='Individuell rapport\\n\\nSyfte\\n\\nDet finns flera syften med denna examinationsform. Främsta syftet är att locka fram reflektion över hur teorierna appliceras i ett verkligt projekt och omvandlas till praktik samt lägga en kunskaps- mässig grund inför projektarbetet och den gemensamma utformningen av projektplanen. Dessutom används den som individuell kunskapskontroll för att säkerställa att varje individ uppnått kravet för godkänt i kursen och att de uppnått en förståelse nödvändig för projektet.\\n\\nObservera att kursledningen förbehåller sig rätten att vidta åtgärder utifrån resultatet på den individuella rapporten för att säkerställa kvalitén på projekten.\\n\\nUppgiften\\n\\nUppgiften är att individuellt utifrån sin egen uppfattning av det tilldelade projektet göra en välmotiverad teknisk utredning för ett problem relaterat utförandet av projektet samt skapa en genomarbetad plan för hur projektet skulle kunna genomföras. Du har frihet att ta in egna visioner och införa premisser som inte finns i det egna teamet. Planen och motiveringen till alla beslut beskrivs i en regelrätt rapport. Eftersom det gemensamma planen ännu inte har sammanställts, så baseras förslaget till stor del på den egna uppfattningen av projektet, egna val och beslut samt egen efterforskning, eventuellt efter diskussion med kund eller teammedlemmar.'), 0.844430566), (Document(id='mall_projekt-rapport.pdf-p0-c10-3b76e8f3-6230-4b0f-9fa5-c49dda4184b6', metadata={'relative_path': 'Utvecklingsprojekt\\\\mall_projekt-rapport.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp4idvcegs\\\\mall_projekt-rapport.pdf', 'start_index': 13159.0}, page_content='Här ska också arbetets konsekvenser för berörd målgrupp och eventuellt för forskare och praktiker beskrivas. Man kan också ha ett stycke eller avsnitt om framtida arbete där man beskriver vad man skulle vilja göra om man hade mer tid eller som rekommendationer för framtida studier eller exjobb. Om man har ett sådant stycke är det dock viktigt att det är konkreta och väl genomtänkta förslag som presenteras, snarare än vaga idéer.\\n\\nI det slutliga förslaget på projektrapport kan ni här kortfattat beskriva vad som mer är planerat att göra som möjligen kommer att komma med i slutrapporten.\\n\\n8\\n\\nLitteraturförteckning\\n\\n[1] Shari Lawrence Pﬂeeger och Joanne M. Atlee, Software Engineering, Fourth Edition, Interna-\\n\\ntional Edition, Pearson 2010\\n\\n[2] Författare, Titel, Organisation, yyyy-mm-dd, hämtad: yyyy-mm-dd\\n\\nhttp://länk/till/sidan\\n\\n9\\n\\nBilaga A\\n\\nReﬂektion över systemutvecklingsprocessen\\n\\nMax 2 sidor exklusive bilder (1000 ord).\\n\\nReﬂektera gemensamt över hur er faktiska arbetsprocess gick till i jämförelse med hur ni planerat att arbeta. Reﬂektera över hur väl eller ej fungerande de rutiner, processer samt projekterings- och utvecklingsverktyg som planerats och använts var. Reﬂektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från de individuella rapporterna.\\n\\nA.1 Person A\\n\\nMax 1 sida per person.'), 0.8400395515), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c1-b07a8e34-8f5a-4f84-8dbc-d28c75c2d337', metadata={'relative_path': 'Utvecklingsprojekt\\\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpcn5atle1\\\\instruktioner-projekt-rapport-x.pdf', 'start_index': 1236.0}, page_content='algoritmer, formler och ekvationer som systemet bygger på.\\n\\nBeskrivning av metoden, den praktiska lösningen, som ligger till grund för utredningen. Här kan systemarkitektur, programdesign och dynamiska modeller användas för att ge en bra beskrivning av hur systemet fungerar och därmed främja reproducerbarhet av resultatet.\\n\\nResultat kopplade till era frågeställningar. Resultaten kan komma från användarstudier, prestandamätningar, jämförelser mellan lösningar och annat som gör att ni senare kan besvara frågeställningarna.\\n\\n(Endast i versionen för opponering: kortfattat, i bilaga eller eget avsnitt under slutsatser-\\n\\nkapitel, vad planerat arbete som också kommer att vara med i slutrapporten.)\\n\\nI bilagor:\\n\\nEn gemensam reflektion, på max två sidor, över hur det faktiska genomförandet av arbetet gick jämfört med planeringen av utvecklingsprocessen. Reflektera över hur väl eller ej fungerande de rutiner, processer samt projekterings och utvecklingsverktyg som planerats och använts var. Reflektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från er gemensamma och individuella rapporter.\\n\\nEn individuell reflektion, på max en sida, över varje persons roll i projektet.'), 0.8331543505), (Document(id='TNM094_sprakaterkoppling_vt24.pdf-p0-c0-b8a20848-64cd-4c2c-8fe0-554fc53d48b9', metadata={'relative_path': 'Språkstrimma\\\\TNM094 språkåterkoppling vt24.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmph5m2ny2z\\\\TNM094 språkåterkoppling vt24.pdf', 'start_index': 0.0}, page_content='Återkoppling på individuella rapporter TNM094\\n\\nSpråk och formalia som vi kommenterat:\\n\\nVictoria, Britta, Ulrika, Maria, Per-Olof\\n\\nVT24\\n\\nInformationsflödet\\n\\nInledningen kräver ofta mer kontext kring projekten: När, var, hur, vad, vem/vilka och varför?\\n\\nSammanfattningen får inte syfta på något som sägs inne i rapporten. Självständig text. Förklara begrepp och förkortningar redan här. Avslöja ”slutet”, dvs slutsatsen\\n\\nInledningen får heller inte bygga vidare på sammanfattningen. Börja om med informationen. Plantera viktig information här (obestämd form: ett projekt planeras…)som sedan kan byggas vidare på i bestämd form (i projektet…)\\n\\nInformationsflödet\\n\\nSammanhangsord saknas i hög grad- leder till ensamma öar av information. Uppgiften är att visa hur de olika delarna hänger ihop, dvs att det ena leder till det andra eller står i något slags förhållande till vad som redan sagts eller ska sägas:\\n\\n… som nämnts i kap. 2.3… Däremot kan inte… En annan etisk aspekt är… Slutligen redogörs för…\\n\\nAvsluta inte rapporten i ett hörn: Avrunda helheten genom en slutsats.\\n\\nEtisk diskussion\\n\\nSvårt att få bra sammanhang och substans i detta kapitel.\\n\\nIntroducera först ämnet som ska diskuteras: Ett etiskt dilemma som kan uppstå är… Kommentera sedan: Det behöver övervägas om… Effekten kan bli att.. För att undvika detta kan en lösning vara…\\n\\nAnvänd ett inkluderande och etablerat språkbruk: funktionsnedsatta/varierade, synnedsättning, hörselnedsättning, …'), 0.828071445), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c2-25041be3-d7c3-4f63-8292-e4cea52964a0', metadata={'relative_path': 'Utvecklingsprojekt\\\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpcn5atle1\\\\instruktioner-projekt-rapport-x.pdf', 'start_index': 2585.0}, page_content='Reflektera över vad som fungerade väl och vad som skulle kunna förbättras. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter.\\n\\nEn lista över vilka som varit involverade i projektet, inom teamet och utanför, med en beskrivning av någonting som de, genom individuellt, självständigt arbete, bidragit med. Detta bör inte vara en lista över vilka rader kod eller dokument man skrivit utan kan bestå av en beskrivning av egna ansvarsområden, moduler man på egen hand arbetat med, eller andra beskrivningar som gruppen anser rättvist visar på varje medlems individuella bidrag. De flesta grupper arbetar både i grupp och individuellt, så en fungerande struktur är att beskriva både vilka gemensamma bidrag man varit delaktig i och vad man bidragit med självständigt arbete.\\n\\nMålgrupp Rapporten ska rikta sig till kollegerna i kursen; räkna med viss förståelse för utvecklingsprinciper och medietekniska ämnen; beskriv mer tydligt mindre kända detaljer som är viktiga för förståelsen för rapporten. Till exempel behövs ingen genomgång av Scrums alla olika principer eller vad ett designmönster är. Däremot kan man hänvisa till Scrum-roller vid reflektionen av hur gruppen har arbetat och ett designmönster kan behöva beskrivas ifall detaljer i systemets programdesign grundar sig på det.'), 0.8250947595), (Document(id='mall_projekt-rapport.pdf-p0-c11-a1d7c3c7-0cfd-4413-8029-272446d6828a', metadata={'relative_path': 'Utvecklingsprojekt\\\\mall_projekt-rapport.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp4idvcegs\\\\mall_projekt-rapport.pdf', 'start_index': 14603.0}, page_content='A.1 Person A\\n\\nMax 1 sida per person.\\n\\nIndividuell reﬂektion där varje person i projektet reﬂekterar över dess roll(er) i projektet. Vad funge- rade väl och vad skulle kunna förbättras? Gjordes några förändringar under projektet och vad blev utfallet i så fall? Ange referenser till litteratur som instämmer med eller motsäger erfarenheterna. Förslag på upplägg: En paragraf som beskriver din roll och vad du gjort, en paragraf som beskriver hur det bör ha fungerat i teorin (ange referenser till böcker/artiklar), och en paragraf som beskriver förändringar och vad som skiljde sig från teorin.\\n\\nA.2 Person B\\n\\n10\\n\\nBilaga B\\n\\nIndividuella bidrag\\n\\nEn lista över vilka som varit involverade i projektet, inom teamet och utanför, med en beskrivning av någonting som de, genom individuellt, självständigt arbete, bidragit med.\\n\\n11\\n\\nBilaga C\\n\\nBilaga\\n\\nEfter \\\\appendix placeras kapitel som ska behandlas som appendix. Dessa innehåller delar av rapporten som inte är viktiga för att kunna ta till sig innehållet, men som ändå är kopplade till arbetet. Exempel är diagram över hur systemet är uppbyggt, site-karta och skärmdumpar från ett webbsystem som utvecklades inom projektet.\\n\\n12\\n\\nBilaga D\\n\\nAllmänt om språkbruk\\n\\nDet ﬁnns många guider för språkbruket i rapporter, artiklar och konferensbidrag. Några exempel\\n\\nEnkla språkregler, Studieverkstan, Högskolan i Skövde, 2014-11-03, hämtad 2014-12-10 http://www.his.se/Ar-student/Studievagledning/studieverkstan/Enkla-sprakregler/'), 0.8235170545), (Document(id='Granska_ditt_eget_skrivande.pdf-p0-c0-6e679a7c-7065-4414-b54b-04e7f8bf0902', metadata={'relative_path': 'Språkstrimma\\\\Granska ditt eget skrivande.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp11sfnbi\\\\Granska ditt eget skrivande.pdf', 'start_index': 0.0}, page_content='Granska ditt eget skrivande\\n\\nED, KTS, MT\\n\\nIndividuella rapporter, planeringsrapporter inför kandidatarbete\\n\\nFörutsättningar:\\n\\n1. Rapporten har en bestämd struktur eller utgår från en mall som skribenten inte kan ändra.\\n\\nExempel: Innehållsförteckning, kapitelindelning, ”tomma” rubriker. 2. Rapporterna kan ha olika krav på referenser och referenssystem. Exempel: Referatmarkeringar, användning av litteratur och referenslista\\n\\nAllmänna kommentarer:\\n\\nSammanfattningen ska innehålla tre stycken: Syfte, Metod och Resultat. Omfattning : ca 1/2 sida. Det är bra med kapitelpresentationer i rapporter; använd tomma rubriker till att presentera helheten i kapitlet. Använd också kärnmeningar för att inleda stycken.\\n\\nAllmänna kommentarer:\\n\\nBestäm hur ni ska göra med engelska begreppen i texten och gör på samma sätt hela vägen Bra med en tydlig punktlista. Språket fungerar med halva meningar, just för att det är en punktlista. Bestäm tempus (presens, preteritum, futurum) i olika avsnitt. Prata med handledaren!\\n\\nFråga: Behövs en referens till varenda begrepp? Svar: Det är svårt att avgöra om ett begrepp behöver en referens, men viktiga frågor att ställa till skribenten är: Är det allmänt känt och vedertaget och upplevs som enkelt av alla som läser rapporten? (Ingen referens krävs) Används begreppet som det brukar användas? (Ingen referens krävs)'), 0.8222432735), (Document(id='lecture-00_Kursinformation.pdf-p0-c3-8f9cb440-c9e4-432d-9231-9a9fc803f713', metadata={'relative_path': 'Fö1\\\\lecture-00_Kursinformation.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf', 'start_index': 4280.0}, page_content='Viktiga milstolpar för projektet\\n\\nKundkontakt Projektplan Avstämningar Färdig projektrapport (2x) Slutseminarium\\n\\nViktiga personliga hållpunkter\\n\\nIndividuell rapport (2x) – lärt er inför andra inlämningen\\n\\nOpponeringsrapport\\n\\nFörsta två veckorna i projektet\\n\\nUppstartsmöte för gruppen\\n\\nKundkontakt Fördela ansvarsområden för undersökning av lösningar Sätt upp versionshantering och bjud in mig\\n\\nSe till att ni kan rivstarta efter individuell rapport\\n\\nIndividuell rapport\\n\\n1,5 hp = 40 h arbetstid Två delar • Teknisk utredning\\n\\nUtred olika tekniska lösningar eller hur gruppen bör arbeta Använd resultatet av utredningen i projektplanen\\n\\nProjektplan\\n\\nPlanera utvecklingsprojektet med frihet att inkludera egna visioner Utnyttja teorier för att skapa en bra plan\\n\\nEn rapport\\n\\n…som i detalj beskriver den personliga planen och motiverar val utifrån teorier och praxis\\n\\nIndividuell rapport\\n\\nExamination\\n\\n‒ Språklig bedömning av ISV/Språkverkstaden\\n\\nBra stavning, grammatik, flöde och struktur krävs\\n\\nSpråkligt godkänt krävs för godkänt på uppgiften\\n\\n‒ Teknisk bedömning av tekniskt lärarlag\\n\\nRättas enligt mall som ni har tillgång till och ska använda\\n\\n‒ Komplettering\\n\\nEn andra rättning av komplettering sker under HT1\\n\\nIndividuella rapporter -> Gemensam plan\\n\\nInnan ett projekt påbörjas behövs en plan… • Skapa en gemensam projektplan\\n\\nKom överens utifrån era individuella planer\\n\\nUtnyttja teorier för att skapa en bra plan\\n\\nViktigt att tänka på'), 0.8206956089999999), (Document(id='mall_individuell_rapport_(1).pdf-p0-c0-57eaf1f7-3199-42ac-a5b1-c84910e3c22c', metadata={'relative_path': 'Induviduell rapport\\\\mall_individuell_rapport (1).pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpug74q4x9\\\\mall_individuell_rapport (1).pdf', 'start_index': 0.0}, page_content='Individuell projektplan, TNM094\\n\\nFörnamn Efternamn Projekt-titel\\n\\n19 januari 2025\\n\\nSammanfattning\\n\\nEn sammanfattning ska kort och koncist beskriva och motivera det studerade problemet, metoden samt resultat och slutsatser. Arbetets bidrag till huvudområdet ska tydligt framgå. Vad är det rappor- ten säger om huvudområdet som vi inte visste tidigare? Även om sammanfattningen ligger först i rapporten så behöver ni alltid gå tillbaka och justera den när ni är klara med analys och slutsatser.\\n\\nSammanfattningens längd växer med längden på rapporten. I en rapport av denna typ kan den vara tre stycken lång: ett inledande motiverar arbetet och beskriver bakgrund och utmaningar, ett samman- fattar de viktigaste delarna i metoden och ett beskriver diskussion och slutsatser. Sammanfattningen innehåller inga referenser eller ekvationer. I den här rapporten kan ni lägga upp det enligt nedan\\n\\nFörsta stycket: Beskriv bakgrunden och vilka utmaningar som utreds i rapporten.\\n\\nAndra stycket: Sammanfatta de utredningar/jämförelser som har gjorts och kopplar till frågeställning- arna. Har du till exempel en frågeställning som handlar om hur en viss typ av kvalité kan säkerställas så du sammanfatta vilka olika alternativ som beaktats och deras för- och nackdelar.'), 0.8203157485), (Document(id='instruktioner-individuell_rapport-x.pdf-p0-c2-31c4dab5-2080-4116-a730-f5b8e4ec89be', metadata={'relative_path': 'Induviduell rapport\\\\instruktioner-individuell_rapport-x.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpdoosd9p6\\\\instruktioner-individuell_rapport-x.pdf', 'start_index': 2695.0}, page_content='det som inte planerats för kommer inte att genomföras\\n\\nen plan kan användas av alla intressenter för att svara på frågor såsom ”hur arbetar gruppen med kvalitet?”, ”vem ansvarar för systemets struktur” eller ”hur ska jag som utvecklare hantera koden?”\\n\\nAtt skriva Inledning\\n\\nInledningen på en rapport inleder läsaren till rapporten och beskriver den på ett sätt så att läsaren kan få svar på frågor som exempelvis ”Vad är det rapporten handlar om?” och ”Vilka frågor kan jag förvänta mig att få svar på om jag läser rapporten?”. Därmed bör man kort beskriva själva projektet och vad som är dess bakgrund, för att läsaren ska förstå vad rapporten handlar om, men inte inkludera detaljer ur redogörelse för arbetet. Det som besvarar inledningens frågeställningar och syfte ska istället redogöras för i efterföljande kapitel.\\n\\nExamination\\n\\nExaminationen sker genom rättning både språkligt och tekniskt och för godkänt på rapporten krävs godkänt på båda rättningarna. Den tekniska rättningen sker enligt bedömningsmallen i kursdokumenten (Individuell rapport/bedömningsmall-individuell_rapport) medan den språkliga rättningen sker av personal på ISV/Språkverkstaden.'), 0.813406676)]"
Arguments: ()
2025-05-07 10:22:13,822 - INFO - -----------------------------

2025-05-07 10:09:27,754 - INFO - -----------------------------
Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C8BE0A7990>
2025-05-07 10:11:29,040 - INFO - Last Question: Hur ska jag lägga upp kodstrukturen för lab2?
2025-05-07 10:11:29,041 - INFO - Conversation: [ConversationData(id='cd080f7e-191c-42ff-ad12-a49e6ea73bef', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-dbc23668-1bb9-42b7-a961-7be19bac021d', role='assistant', content='Jag kan hjälpa dig med frågor och information relaterad till kursen TNM094 på Linköpings universitet. Det kan inkludera ämnen som tentamina, kursmaterial, studietips och annat som rör din utbildning. Om du har specifika frågor, tveka inte att ställa dem!'), ConversationData(id='edcd060f-4ca4-4f68-863c-dd7f704216ef', role='user', content='Vad ska ingå i den individuella rapporten?'), ConversationData(id='run-72a7ae12-4c18-4d5c-b044-11d7d12515e2', role='assistant', content='Den individuella rapporten för TNM094 ska innehålla följande delar:\n\n1. **Teknisk utredning**: En välmotiverad utredning av ett problem relaterat till projektet, där du diskuterar olika tekniska lösningar eller arbetssätt.\n\n2. **Projektplan**: En genomarbetad plan för hur projektet ska genomföras, där du kan inkludera egna visioner och premisser.\n\n3. **Reflektion**: En individuell reflektion över din roll i projektet, vad som fungerade väl och vad som kan förbättras, samt eventuella förändringar som gjorts under projektet.\n\n4. **Konsekvenser**: Beskriv arbetets konsekvenser för berörd målgrupp och eventuellt för forskare och praktiker.\n\n5. **Framtida arbete**: Konkreta och väl genomtänkta förslag för framtida studier eller arbete om det skulle finnas mer tid.\n\n6. **Litteraturförteckning**: Referenser som använts i rapporten.\n\n7. **Bilagor**: Eventuella bilagor som gör rapporten mer komplett, exempelvis diagram eller systembeskrivningar.\n\nKom ihåg att beakta strukturen och språkliga krav för rapporten!'), ConversationData(id='f4065578-e8ca-4875-84b7-4d807cb61c95', role='user', content='Hur ska jag lägga upp kodstrukturen för lab2?')]
2025-05-07 10:11:29,041 - INFO - Number of Found Documents: 10
2025-05-07 10:11:29,042 - INFO - Found Documents: [(Document(id='lecture-00_Kursinformation.pdf-p0-c2-865b88b2-1e27-450f-8102-1a8c3e5303f5', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 2844.0}, page_content='Victoria Pihlgren\n\nBiblioteket (Tatiana Liljeström) Informationssökning\n\n• Antiplagiering/referenshantering\n\nLitteratur\n\nPrimär kurslitteratur\n\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\n\nKomplement\n\nStudieguide, videos, PDF:er och webbsidor\n\nReferenslitteratur\n\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\n\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\n\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\n\nLaborationer - Partikelsystem\n\nÖvningar\n\n1. Versionshantering (git)\n\nVar klara efter första tillfället\n\n2. Hur designar man system?\n\nFyra-fem tillfällen\n\n3. Kodanalys och testning\n\nTvå-tre tillfällen\n\nLaboratoriearbete\n\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\n\nLaborationer\n\nVald programvara\n\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\n\nHur kan vi få en jämn fördelning?\n\nUtvecklingsprojekt\n\nMål och syfte\n\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\n\nSteg\n\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\n\nViktiga milstolpar för projektet'), 0.778687954), (Document(id='Laborationsprotokoll2025.xlsx-p0-c2-cf2f7b13-5461-4e58-819b-86a998e87494', metadata={'relative_path': 'Laborationer\\Laborationsprotokoll2025.xlsx', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpxid_4z92\\Laborationsprotokoll2025.xlsx', 'start_index': 0.0}, page_content='Vecka Veckodag Startdatum Starttid Sluttid Lokal Studentgrupp Lab Redovisnig Peter Rickard Elin Tobias v 4 Tisdag 2025-01-21 00:00:00 10:15:00 12:00:00 K4504 MT3.a 1 lab1 x x 2.0 Markera de pass där ni inte kan vara med, med röd bakgrund. Set ett X för de pass där ni ska vara med.\\nJag har initialt lagt till Mig och Elin på alla a-guppens pass och Rickard och Tobias på alla b-gruppens pass.\\n\\njustera så att det passar er, huvudsaken är att vi försöker vara iaf 2 på varje pass. v 4 Onsdag 2025-01-22 00:00:00 08:15:00 10:00:00 K4504 MT3.b 1 lab1 x x 2.0 v 5 Onsdag 2025-01-29 00:00:00 08:15:00 10:00:00 K4504 MT3.b 2 lab1 x x 2.0 v 5 Onsdag 2025-01-29 00:00:00 15:15:00 17:00:00 K4504 MT3.a 2 lab1 x x 2.0 v 6 Måndag 2025-02-03 00:00:00 13:15:00 15:00:00 K4504 MT3.a 3 x x 2.0 v 6 Tisdag 2025-02-04 00:00:00 13:15:00 15:00:00 K4504 MT3.b 3 x x 2.0 v 7 Onsdag 2025-02-12 00:00:00 08:15:00 10:00:00 K4504 MT3.a 4 x x 2.0 v 7 Onsdag 2025-02-12 00:00:00 15:15:00 17:00:00 K4504 MT3.b 4 x x 2.0 v 8 Måndag 2025-02-17 00:00:00 13:15:00 15:00:00 K4504 MT3.a 5 lab2 x x 2.0 v 8 Tisdag 2025-02-18 00:00:00 13:15:00 15:00:00 K4504 MT3.b 5 lab2 x x 2.0 v 9 Tisdag 2025-02-25 00:00:00 13:15:00 15:00:00 K4504 MT3.a 6 lab2 x x 2.0 v 9 Onsdag 2025-02-26 00:00:00 13:15:00 15:00:00 K4504 MT3.b 6 lab2 x x 2.0 v 11 Tisdag 2025-03-11 00:00:00 13:15:00 15:00:00 K4504 MT3.a 7 x 1.0 v 11 Onsdag 2025-03-12 00:00:00 13:15:00 15:00:00 K4504 MT3.b 7 x x 2.0 v 14 Måndag 2025-03-31 00:00:00 13:15:00 15:00:00 K4504'), 0.775937), (Document(id='lecture-00_Kursinformation.pdf-p0-c11-7e59442e-d78d-4080-be15-e0a45c545ed6', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 12948.0}, page_content='Urval av ändringar\n\nLagt till bedömningskriterier (se kursinformation) Individuell rapport\n\n‒\n\nDelat upp rapporten i två delar för att bättre efterlikna en projektplan i ett företag. Mer instruktioner i mallen.\n\n‒\n\nUppdaterat bedömningsmall för att bättre reflektera bedömningskriterierna.\n\nLaborationer\n\n‒\n\nArbetat igenom instruktionerna för laboration 2 – förkortat ett moment.\n\n‒\n\nLagt till förberedelseinstruktioner i studieguiden.\n\n‒\n\nTydligare instruktioner när varje labb förväntas vara klar (se kursöversikt).\n\n‒\n\nTänk på att arbeta utanför schemalagd tid\n\nLisam\n\nDemo och genomgång.\n\nEfter pausen\n\nÖversikt över systemutveckling'), 0.770794481), (Document(id='Eklund_2020_KomplementTillTypografiskPrimer.pdf-p0-c6-a14764e4-eac9-4ca6-828b-50e78279fde9', metadata={'relative_path': 'Språkstrimma\\Eklund_2020_KomplementTillTypografiskPrimer.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpt1_jo2z8\\Eklund_2020_KomplementTillTypografiskPrimer.pdf', 'start_index': 7660.0}, page_content='Indraget ska ha samma marginal för varje ”nivå”; se Bild 1.\n\nBild 1: Illustration över indrag i innehållsförteckningar. Varje ny nivå ska ha samma vänstermarginal som texten på nivån över (de röda strecken).\n\n4\n\n14 Formelnumrering\n\nFormler ska numreras i löpande ordning (vissa av er har en väldig skum numreringsordning), med siffran högerställd, som i:\n\n< Formel 1 här > (1)\n\n< Formel 2 här > (2)\n\n15 Punktlistor\n\nDet är till stor hjälp för läsaren om man använder punktlistor (med eller utan nummer) för (t ex) hypoteser. Dessa kan sedan ”matchas” i slutsatserna på ett väldigt överskådlig sätt, som:\n\nStudiebeskrivning 1. Hypotes 1: Att X 2. Hypotes 3: Att Y\n\nResultat 1. Hypotes 1: Att X = bekräftad 2. Hypotes 3: Att Y = inte bekräftad\n\n15 Slutord\n\nJag kommer säkert att lägga till saker till detta dokument i framtiden. Stay tuned!\n\nRobert\n\n\uf097 \uf096\n\n5'), 0.7686384319999999), (Document(id='Eklund_EnTypografiskPrimer_v2-0-4.pdf-p0-c38-1b428370-b1cf-4c5e-b00a-f18122054a0c', metadata={'relative_path': 'Språkstrimma\\Eklund_EnTypografiskPrimer_v2-0-4.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp1vw69bui\\Eklund_EnTypografiskPrimer_v2-0-4.pdf', 'start_index': 47638.0}, page_content='18\n\nEn typografisk ”primer” – Några Grundläggande Konventioner, 2.0.0\n\nPersoner som producerar särskrivningar hävdar ofta (som tidigare nämnt) att de helt enkelt inte ”hajar” skillnaden rörande detta, vilket är helt fel: ingen gör fel på ”sjuk syster” och ”sjuksyster” i uttalet (prosodin/språkmelodin), så skillnaden är visst solklar för talare av svenska. Det som fallerar är att återge skillnaden i skrift, helt enkelt.\n\nEn mycket vanligt förekommande särskrivning är när olika enheter blandas, som i:\n\n”57 åringen” skall vara: ”57-åringen” ”SAS strejken” skall vara: ”SAS-strejken”\n\n... och framför allt:\n\n”57 och 58-åringar” skall vara: ”57- och 58-åringar” ”SAS och Lufthansa-strejken” skall vara: ”SAS- och Lufthansastrejken”\n\n23 Styckeindelningar\n\nStycken kan indelas olika sätt:\n\n1. Med tomrad mellan styckena (som i detta dokument).\n\n2. Med indrag av första raden.\n\n3. En kombination av 1 och 2, där 1 anger större brott, och 2 mindre brott.\n\nStrömqvist (2014: 100–103) redogör i detalj för detta, men tänk på två saker:\n\n(a) Styckesindelning hjälper läsaren att få struktur\n\n(b) Vid alla slags indrag skall indraget vara ”en fyrkant/kvadrat” stort, dvs indraget skall vara lika brett (horisontellt) som textraden är hög (vertikalt). Vissa förinställda mallar har andra värden, så se till att ändra detta innan du sätter igång.'), 0.7672048805), (Document(id='lecture-00_Kursinformation.pdf-p0-c7-198e435b-d473-4925-ae99-fb3d76fcec1f', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 9848.0}, page_content='relatera sitt arbete till relevanta samhälleliga och etiska aspekter\n\nL7\n\nBeskriver hur ett givet problem och/eller lösningar relaterar till samhälleliga och etiska aspekter.\n\ntillämpa etablerade protokoll för utvecklingsprojekt (projektstyrning, kravhantering, systemarkitektur, programdesign, implementation, dokumentation, test, underhåll)\n\nL8\n\nBeskriver hur etablerade protokoll kan appliceras i ett utvecklingsprojekt\n\nBeskriver översiktligt systemarkitektur visuellt med etablerade diagram.\n\nKan göra programdesign för ett enkelt system.\n\nAnvänder grundläggande principer från testdriven utveckling för att införa ny funktionalitet.\n\nKan grundläggande arbetsflöde för att arbeta med versionshantering av kod\n\nutnyttja relevanta verktyg för programvaruutveckling för att utveckla lösningar på ett givet problem.\n\nL9\n\n- Beskriver hur relevanta programvaruutecklingsmetoder använts för att genomföra ett utvecklingsprojekt. - Beskriver och motiverar vilka programvarutvecklingsverktyg som använts för att lösa ett problem - Kan använda stödverktyg för programvaruutveckling, så som kodformatering, versionshantering.\n\nModul UPG1\n\nLAB1\n\nPRA1\n\nUPG1\n\nPRA1\n\nUPG1\n\nPRA1\n\nPRA1\n\nUPG1\n\nPRA1\n\nUPG2\n\nUPG1\n\nUPG1\n\nLAB1\n\nPRA1\n\nPRA1\n\nLAB1\n\nAktivt lärande\n\nMål • • Mer engagerande ”föreläsningar” Befästa teorin\n\nViktigt för er skull att ni kommer förberedda\n\nSe studieguide på kurssidan\n\nKan vara mycket förberedelser, men'), 0.7668556275), (Document(id='lecture-05_AnalysDesign_uppgifter.pdf-p0-c3-97161183-ac51-464c-a108-53774aa3c2f1', metadata={'relative_path': 'Fö5\\lecture-05_AnalysDesign_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmplezba62h\\lecture-05_AnalysDesign_uppgifter.pdf', 'start_index': 4261.0}, page_content='Komponentdiagram\n\nSyfte\n\n– Strukturera systemet på abstrakt nivå\n\nViktiga delar\n\n– Aktörer och komponenter\n\n– Gränssnitt\n\n– Beroenden\n\nKomponentdiagram\n\nDivide and Conquer\n\ngå ner i nivå och utveckla komponenter och deras delar (med Klass-diagram)\n\ngå upp i nivå och resonera kring hela system\n\nKomplettera med andra diagram där det underlättar förståelsen för systemet\n\nKlassdiagram\n\nSyfte\n\n– Strukturell vy – beskriva systemet struktur – Viktigast i programdesign – Användbar för modellering av systemarkitekturer\n\nViktiga delar\n\n– Klasser, variabler och metoder – Beroenden och arv\n\nmen också\n\n– Paket – strukturera på en abstrakt nivå\n\n– Objekt – visa på samarbeten vid körning\n\nKlassdiagram - Hämta bilder\n\nNotation\n\n= komposition\n\n= Generalisering (arv)\n\n= känner till\n\n= publik funktion\n\nKlassdiagram\n\nNästa steg\n\nStudieguide: Ca 2 timmars arbete att gå igenom\n\ninför föreläsning 6, men ni har 4-6 timmar på er.\n\nLabb imorgon: Utnyttja att ni har gått igenom\n\nmaterialet och exemplen från idag\n\nImorgon: Ett steg närmre själva kodandet'), 0.7661924065), (Document(id='lecture-04_Systemarkitektur.pdf-p0-c0-f2787104-1468-406e-a337-a7dbdbbfe7b1', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp0h_noo3k\\lecture-04_Systemarkitektur.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\n\nSystemarkitektur\n\nSystemarkitektur\n\nBygger upp systemets generella form\n\n– vilka datorer, program, processer\n\nDelar upp systemets kodbas\n\n– vilka kodmoduler, ramverk, APIer\n\nArkitekturell modellering\n\nFör att...\n\n...förstå systemet\n\n...skapa en ritning för konstruktion\n\n...analysera beroenden\n\n...hitta återanvändning av delar\n\n...resonera kring framtida förändringar\n\n...stödja ledningsbeslut och riskhantering\n\n[Pfleeger]\n\nVyer\n\nEtt system, flera modeller, olika vyer\n\nVarje vy visar en specifik aspekt av systemet\n\n– kodstruktur (paket och moduler)\n\n– körnings-struktur (server, klient, nätverk,\n\nshm, etc)\n\n– etc.\n\n[Pfleeger]\n\nKörnings-struktur\n\nHur ser systemet ut internt under körning\n\n– Flera vyer om det kan se olika ut\n\n– Instanser, processer, datastrukturer, anropsvägar\n\n[Pfleeger]\n\nViktiga element\n\nVad finns där?\n\nNoder\n\n– datorer, servrar, processer, program, etc.\n\nGränssnitt\n\n– process-anrop, abstraktion, nätverkskommunikation, etc.\n\nProgramvaruenheter\n\n– oftast moduler och submoduler\n\nVad finns inte med?\n\n– implementations-specifika algoritmer – variabler, klasser, objekt, funktioner\n\n[Pfleeger]\n\nKodstruktur\n\nVilka moduler har systemet (systemets kodbas)\n\n– Hur förhåller sig dessa till varandra\n\n– Paket, bibliotek, filer, enheter, komponenter\n\n[Pfleeger]\n\nNågra viktiga termer'), 0.76567176), (Document(id='TNM094_-_Exempel_individuell_rapport.pdf-p0-c1-02e94384-7fe9-4177-9593-4ff85d3d2de8', metadata={'relative_path': 'Induviduell rapport\\TNM094 - Exempel individuell rapport.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp1xq0gua3\\TNM094 - Exempel individuell rapport.pdf', 'start_index': 1418.0}, page_content='2 System och tekniska lösningar\n\n2.1 Grundläggande, initiala krav och systembegränsningar\n\n. . . . . . . . . . . . . . . .\n\n2.2 Målplattform .\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n2.3 Grundläggande systemarkitektur . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n2.4 Standarder .\n\n. .\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n2.5 Utvecklingsmiljö .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n3 Projekthantering\n\n3.1 Utvecklingsmetodik .\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n3.2 Organisation . .\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n3.3 Tidsplan .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n3.4 Milstolpar och leverabler .\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4 Rutiner och principer\n\n4.1 Rutiner\n\n. .\n\n. .\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.2 Mötesprinciper\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.3 Versionshantering, -system och rutiner . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.4 Kravhantering och -spårning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.5 Dokumentationsprinciper och rutiner . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.6 Kvalitetssäkring .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.'), 0.7646535335), (Document(id='lecture-07_ImplementationDesignmonster_uppgifter.pdf-p0-c0-2d71584e-32cd-4970-af78-5df9b0f7c3f1', metadata={'relative_path': 'Fö7\\lecture-07_ImplementationDesignmönster_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpzegua28h\\lecture-07_ImplementationDesignmönster_uppgifter.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\n\nImplementation och designmönster\n\nKonvertera design till programkod\n\nDetta är icke-trivialt\n\n– allt är inte löst med arkitektur och design – diagram, tabeller och strukturer måste omvandlas till kod – koden måste vara lätt att läsa och förstå – dra nytta av styrkan hos både språk och design\n\nKodningsstandard\n\n– konventioner för namn, mellanrum, radbryt, kommentarer, etc. – organisations-specifik standard som underlättar delad kod – (e.g. Google style guide, K&R, KNF, Gnu style, etc.)\n\n[Pfleeger]\n\nGenerella programmerings-tips\n\nGör koden så generell som är praktiskt\n\nIsolera input och output\n\nSäkerställ att förutsättningar är uppfyllda\n\n– använd assert(...) (vid körtid, debug) – kasta exception (vid körtid, debug+release)\n\nRevidera din kod\n\n– Kontrollera läsbarhet – Kontrollera implementation – Skriv om på ett bättre sätt\n\n[Pfleeger]\n\nKontrollstrukturer och algoritmer\n\nKeep-It-Simple-Stupid (KISS)\n\n– Det finns ingen prestige i att skriva svårläst kod – Offra inte läsbarhet och struktur för prestanda\n\nLäsbarhet – uppifrån och ned\n\n– Beslut → handling undvik att bryta ett naturligt flöde – Undvik långa eller djupa block (if, for, while, …) – Samla kod som hör ihop – Göm detaljer i subrutiner\n\nvoid RegisterUser(User user) {\n\nif(user.name == null) { throw new Exception("Invalid User Name"); } if(user.password == null || user.password.length() < 5) {\n\nvoid RegisterUser(User user) {\n\nvalidateUser(user);'), 0.763401419)]
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\u2248' in position 1203: character maps to <undefined>
Call stack:
  File "<string>", line 1, in <module>
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 135, in _main
    return self._bootstrap(parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 314, in _bootstrap
    self.run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\_subprocess.py", line 80, in subprocess_started
    target(sockets=sockets)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\server.py", line 66, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 641, in run_until_complete
    self.run_forever()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 608, in run_forever
    self._run_once()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1936, in _run_once
    handle._run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 84, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\protocols\websockets\websockets_impl.py", line 243, in run_asgi
    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)  # type: ignore[func-returns-value]
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\middleware\proxy_headers.py", line 60, in __call__        
    return await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\errors.py", line 152, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\cors.py", line 77, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 362, in handle
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 95, in app
    await wrap_app_handling_exceptions(app, session)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 93, in app
    await func(session)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\routing.py", line 383, in app
    await dependant.call(**solved_result.values)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\main.py", line 229, in ws_llm_conversation
    async for chunk in handle_conversation_stream(data):
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\services.py", line 109, in handle_conversation_stream
    logger.info(f"Found Documents: {found_documents}")
Message: 'Found Documents: [(Document(id=\'lecture-00_Kursinformation.pdf-p0-c2-865b88b2-1e27-450f-8102-1a8c3e5303f5\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 2844.0}, page_content=\'Victoria Pihlgren\\n\\nBiblioteket (Tatiana Liljeström) Informationssökning\\n\\n• Antiplagiering/referenshantering\\n\\nLitteratur\\n\\nPrimär kurslitteratur\\n\\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\\n\\nKomplement\\n\\nStudieguide, videos, PDF:er och webbsidor\\n\\nReferenslitteratur\\n\\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\\n\\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\\n\\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\\n\\nLaborationer - Partikelsystem\\n\\nÖvningar\\n\\n1. Versionshantering (git)\\n\\nVar klara efter första tillfället\\n\\n2. Hur designar man system?\\n\\nFyra-fem tillfällen\\n\\n3. Kodanalys och testning\\n\\nTvå-tre tillfällen\\n\\nLaboratoriearbete\\n\\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\\n\\nLaborationer\\n\\nVald programvara\\n\\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\\n\\nHur kan vi få en jämn fördelning?\\n\\nUtvecklingsprojekt\\n\\nMål och syfte\\n\\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\\n\\nSteg\\n\\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\\n\\nViktiga milstolpar för projektet\'), 0.778687954), (Document(id=\'Laborationsprotokoll2025.xlsx-p0-c2-cf2f7b13-5461-4e58-819b-86a998e87494\', metadata={\'relative_path\': \'Laborationer\\\\Laborationsprotokoll2025.xlsx\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpxid_4z92\\\\Laborationsprotokoll2025.xlsx\', \'start_index\': 0.0}, page_content=\'Vecka Veckodag Startdatum Starttid Sluttid Lokal Studentgrupp Lab Redovisnig Peter Rickard Elin Tobias v 4 Tisdag 2025-01-21 00:00:00 10:15:00 12:00:00 K4504 MT3.a 1 lab1 x x 2.0 Markera de pass där ni inte kan vara med, med röd bakgrund. Set ett X för de pass där ni ska vara med.\\\\nJag har initialt lagt till Mig och Elin på alla a-guppens pass och Rickard och Tobias på alla b-gruppens pass.\\\\n\\\\njustera så att det passar er, huvudsaken är att vi försöker vara iaf 2 på varje pass. v 4 Onsdag 2025-01-22 00:00:00 08:15:00 10:00:00 K4504 MT3.b 1 lab1 x x 2.0 v 5 Onsdag 2025-01-29 00:00:00 08:15:00 10:00:00 K4504 MT3.b 2 lab1 x x 2.0 v 5 Onsdag 2025-01-29 00:00:00 15:15:00 17:00:00 K4504 MT3.a 2 lab1 x x 2.0 v 6 Måndag 2025-02-03 00:00:00 13:15:00 15:00:00 K4504 MT3.a 3 x x 2.0 v 6 Tisdag 2025-02-04 00:00:00 13:15:00 15:00:00 K4504 MT3.b 3 x x 2.0 v 7 Onsdag 2025-02-12 00:00:00 08:15:00 10:00:00 K4504 MT3.a 4 x x 2.0 v 7 Onsdag 2025-02-12 00:00:00 15:15:00 17:00:00 K4504 MT3.b 4 x x 2.0 v 8 Måndag 2025-02-17 00:00:00 13:15:00 15:00:00 K4504 MT3.a 5 lab2 x x 2.0 v 8 Tisdag 2025-02-18 00:00:00 13:15:00 15:00:00 K4504 MT3.b 5 lab2 x x 2.0 v 9 Tisdag 2025-02-25 00:00:00 13:15:00 15:00:00 K4504 MT3.a 6 lab2 x x 2.0 v 9 Onsdag 2025-02-26 00:00:00 13:15:00 15:00:00 K4504 MT3.b 6 lab2 x x 2.0 v 11 Tisdag 2025-03-11 00:00:00 13:15:00 15:00:00 K4504 MT3.a 7 x 1.0 v 11 Onsdag 2025-03-12 00:00:00 13:15:00 15:00:00 K4504 MT3.b 7 x x 2.0 v 14 Måndag 2025-03-31 00:00:00 13:15:00 15:00:00 K4504\'), 0.775937), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c11-7e59442e-d78d-4080-be15-e0a45c545ed6\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 12948.0}, page_content=\'Urval av ändringar\\n\\nLagt till bedömningskriterier (se kursinformation) Individuell rapport\\n\\n‒\\n\\nDelat upp rapporten i två delar för att bättre efterlikna en projektplan i ett företag. Mer instruktioner i mallen.\\n\\n‒\\n\\nUppdaterat bedömningsmall för att bättre reflektera bedömningskriterierna.\\n\\nLaborationer\\n\\n‒\\n\\nArbetat igenom instruktionerna för laboration 2 – förkortat ett moment.\\n\\n‒\\n\\nLagt till förberedelseinstruktioner i studieguiden.\\n\\n‒\\n\\nTydligare instruktioner när varje labb förväntas vara klar (se kursöversikt).\\n\\n‒\\n\\nTänk på att arbeta utanför schemalagd tid\\n\\nLisam\\n\\nDemo och genomgång.\\n\\nEfter pausen\\n\\nÖversikt över systemutveckling\'), 0.770794481), (Document(id=\'Eklund_2020_KomplementTillTypografiskPrimer.pdf-p0-c6-a14764e4-eac9-4ca6-828b-50e78279fde9\', metadata={\'relative_path\': \'Språkstrimma\\\\Eklund_2020_KomplementTillTypografiskPrimer.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpt1_jo2z8\\\\Eklund_2020_KomplementTillTypografiskPrimer.pdf\', \'start_index\': 7660.0}, page_content=\'Indraget ska ha samma marginal för varje ”nivå”; se Bild 1.\\n\\nBild 1: Illustration över indrag i innehållsförteckningar. Varje ny nivå ska ha samma vänstermarginal som texten på nivån över (de röda strecken).\\n\\n4\\n\\n14 Formelnumrering\\n\\nFormler ska numreras i löpande ordning (vissa av er har en väldig skum numreringsordning), med siffran högerställd, som i:\\n\\n< Formel 1 här > (1)\\n\\n< Formel 2 här > (2)\\n\\n15 Punktlistor\\n\\nDet är till stor hjälp för läsaren om man använder punktlistor (med eller utan nummer) för (t ex) hypoteser. Dessa kan sedan ”matchas” i slutsatserna på ett väldigt överskådlig sätt, som:\\n\\nStudiebeskrivning 1. Hypotes 1: Att X 2. Hypotes 3: Att Y\\n\\nResultat 1. Hypotes 1: Att X = bekräftad 2. Hypotes 3: Att Y = inte bekräftad\\n\\n15 Slutord\\n\\nJag kommer säkert att lägga till saker till detta dokument i framtiden. Stay tuned!\\n\\nRobert\\n\\n\\uf097 \\uf096\\n\\n5\'), 0.7686384319999999), (Document(id=\'Eklund_EnTypografiskPrimer_v2-0-4.pdf-p0-c38-1b428370-b1cf-4c5e-b00a-f18122054a0c\', metadata={\'relative_path\': \'Språkstrimma\\\\Eklund_EnTypografiskPrimer_v2-0-4.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp1vw69bui\\\\Eklund_EnTypografiskPrimer_v2-0-4.pdf\', \'start_index\': 47638.0}, page_content=\'18\\n\\nEn typografisk ”primer” – Några Grundläggande Konventioner, 2.0.0\\n\\nPersoner som producerar särskrivningar hävdar ofta (som tidigare nämnt) att de helt enkelt inte ”hajar” skillnaden rörande detta, vilket är helt fel: ingen gör fel på ”sjuk syster” och ”sjuksyster” i uttalet (prosodin/språkmelodin), så skillnaden är visst solklar för talare av svenska. Det som fallerar är att återge skillnaden i skrift, helt enkelt.\\n\\nEn mycket vanligt förekommande särskrivning är när olika enheter blandas, som i:\\n\\n”57 åringen” skall vara: ”57-åringen” ”SAS strejken” skall vara: ”SAS-strejken”\\n\\n... och framför allt:\\n\\n”57 och 58-åringar” skall vara: ”57- och 58-åringar” ”SAS och Lufthansa-strejken” skall vara: ”SAS- och Lufthansastrejken”\\n\\n23 Styckeindelningar\\n\\nStycken kan indelas olika sätt:\\n\\n1. Med tomrad mellan styckena (som i detta dokument).\\n\\n2. Med indrag av första raden.\\n\\n3. En kombination av 1 och 2, där 1 anger större brott, och 2 mindre brott.\\n\\nStrömqvist (2014: 100–103) redogör i detalj för detta, men tänk på två saker:\\n\\n(a) Styckesindelning hjälper läsaren att få struktur\\n\\n(b) Vid alla slags indrag skall indraget vara ”en fyrkant/kvadrat” stort, dvs indraget skall vara lika brett (horisontellt) som textraden är hög (vertikalt). Vissa förinställda mallar har andra värden, så se till att ändra detta innan du sätter igång.\'), 0.7672048805), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c7-198e435b-d473-4925-ae99-fb3d76fcec1f\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 9848.0}, page_content=\'relatera sitt arbete till relevanta samhälleliga och etiska aspekter\\n\\nL7\\n\\nBeskriver hur ett givet problem och/eller lösningar relaterar till samhälleliga och etiska aspekter.\\n\\ntillämpa etablerade protokoll för utvecklingsprojekt (projektstyrning, kravhantering, systemarkitektur, programdesign, implementation, dokumentation, test, underhåll)\\n\\nL8\\n\\nBeskriver hur etablerade protokoll kan appliceras i ett utvecklingsprojekt\\n\\nBeskriver översiktligt systemarkitektur visuellt med etablerade diagram.\\n\\nKan göra programdesign för ett enkelt system.\\n\\nAnvänder grundläggande principer från testdriven utveckling för att införa ny funktionalitet.\\n\\nKan grundläggande arbetsflöde för att arbeta med versionshantering av kod\\n\\nutnyttja relevanta verktyg för programvaruutveckling för att utveckla lösningar på ett givet problem.\\n\\nL9\\n\\n- Beskriver hur relevanta programvaruutecklingsmetoder använts för att genomföra ett utvecklingsprojekt. - Beskriver och motiverar vilka programvarutvecklingsverktyg som använts för att lösa ett problem - Kan använda stödverktyg för programvaruutveckling, så som kodformatering, versionshantering.\\n\\nModul UPG1\\n\\nLAB1\\n\\nPRA1\\n\\nUPG1\\n\\nPRA1\\n\\nUPG1\\n\\nPRA1\\n\\nPRA1\\n\\nUPG1\\n\\nPRA1\\n\\nUPG2\\n\\nUPG1\\n\\nUPG1\\n\\nLAB1\\n\\nPRA1\\n\\nPRA1\\n\\nLAB1\\n\\nAktivt lärande\\n\\nMål • • Mer engagerande ”föreläsningar” Befästa teorin\\n\\nViktigt för er skull att ni kommer förberedda\\n\\nSe studieguide på kurssidan\\n\\nKan vara mycket förberedelser, men\'), 0.7668556275), (Document(id=\'lecture-05_AnalysDesign_uppgifter.pdf-p0-c3-97161183-ac51-464c-a108-53774aa3c2f1\', metadata={\'relative_path\': \'Fö5\\\\lecture-05_AnalysDesign_uppgifter.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmplezba62h\\\\lecture-05_AnalysDesign_uppgifter.pdf\', \'start_index\': 4261.0}, page_content=\'Komponentdiagram\\n\\nSyfte\\n\\n– Strukturera systemet på abstrakt nivå\\n\\nViktiga delar\\n\\n– Aktörer och komponenter\\n\\n– Gränssnitt\\n\\n– Beroenden\\n\\nKomponentdiagram\\n\\nDivide and Conquer\\n\\ngå ner i nivå och utveckla komponenter och deras delar (med Klass-diagram)\\n\\ngå upp i nivå och resonera kring hela system\\n\\nKomplettera med andra diagram där det underlättar förståelsen för systemet\\n\\nKlassdiagram\\n\\nSyfte\\n\\n– Strukturell vy – beskriva systemet struktur – Viktigast i programdesign – Användbar för modellering av systemarkitekturer\\n\\nViktiga delar\\n\\n– Klasser, variabler och metoder – Beroenden och arv\\n\\nmen också\\n\\n– Paket – strukturera på en abstrakt nivå\\n\\n– Objekt – visa på samarbeten vid körning\\n\\nKlassdiagram - Hämta bilder\\n\\nNotation\\n\\n= komposition\\n\\n= Generalisering (arv)\\n\\n= känner till\\n\\n= publik funktion\\n\\nKlassdiagram\\n\\nNästa steg\\n\\nStudieguide: Ca 2 timmars arbete att gå igenom\\n\\ninför föreläsning 6, men ni har 4-6 timmar på er.\\n\\nLabb imorgon: Utnyttja att ni har gått igenom\\n\\nmaterialet och exemplen från idag\\n\\nImorgon: Ett steg närmre själva kodandet\'), 0.7661924065), (Document(id=\'lecture-04_Systemarkitektur.pdf-p0-c0-f2787104-1468-406e-a337-a7dbdbbfe7b1\', metadata={\'relative_path\': \'Fö4\\\\lecture-04_Systemarkitektur.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp0h_noo3k\\\\lecture-04_Systemarkitektur.pdf\', \'start_index\': 0.0}, page_content=\'TNM094 – Medietekniskt kandidatprojekt\\n\\nSystemarkitektur\\n\\nSystemarkitektur\\n\\nBygger upp systemets generella form\\n\\n– vilka datorer, program, processer\\n\\nDelar upp systemets kodbas\\n\\n– vilka kodmoduler, ramverk, APIer\\n\\nArkitekturell modellering\\n\\nFör att...\\n\\n...förstå systemet\\n\\n...skapa en ritning för konstruktion\\n\\n...analysera beroenden\\n\\n...hitta återanvändning av delar\\n\\n...resonera kring framtida förändringar\\n\\n...stödja ledningsbeslut och riskhantering\\n\\n[Pfleeger]\\n\\nVyer\\n\\nEtt system, flera modeller, olika vyer\\n\\nVarje vy visar en specifik aspekt av systemet\\n\\n– kodstruktur (paket och moduler)\\n\\n– körnings-struktur (server, klient, nätverk,\\n\\nshm, etc)\\n\\n– etc.\\n\\n[Pfleeger]\\n\\nKörnings-struktur\\n\\nHur ser systemet ut internt under körning\\n\\n– Flera vyer om det kan se olika ut\\n\\n– Instanser, processer, datastrukturer, anropsvägar\\n\\n[Pfleeger]\\n\\nViktiga element\\n\\nVad finns där?\\n\\nNoder\\n\\n– datorer, servrar, processer, program, etc.\\n\\nGränssnitt\\n\\n– process-anrop, abstraktion, nätverkskommunikation, etc.\\n\\nProgramvaruenheter\\n\\n– oftast moduler och submoduler\\n\\nVad finns inte med?\\n\\n– implementations-specifika algoritmer – variabler, klasser, objekt, funktioner\\n\\n[Pfleeger]\\n\\nKodstruktur\\n\\nVilka moduler har systemet (systemets kodbas)\\n\\n– Hur förhåller sig dessa till varandra\\n\\n– Paket, bibliotek, filer, enheter, komponenter\\n\\n[Pfleeger]\\n\\nNågra viktiga termer\'), 0.76567176), (Document(id=\'TNM094_-_Exempel_individuell_rapport.pdf-p0-c1-02e94384-7fe9-4177-9593-4ff85d3d2de8\', metadata={\'relative_path\': \'Induviduell rapport\\\\TNM094 - Exempel individuell rapport.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp1xq0gua3\\\\TNM094 - Exempel individuell rapport.pdf\', \'start_index\': 1418.0}, page_content=\'2 System och tekniska lösningar\\n\\n2.1 Grundläggande, initiala krav och systembegränsningar\\n\\n. . . . . . . . . . . . . . . .\\n\\n2.2 Målplattform .\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n2.3 Grundläggande systemarkitektur . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n2.4 Standarder .\\n\\n. .\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n2.5 Utvecklingsmiljö .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n3 Projekthantering\\n\\n3.1 Utvecklingsmetodik .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n3.2 Organisation . .\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n3.3 Tidsplan .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n3.4 Milstolpar och leverabler .\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4 Rutiner och principer\\n\\n4.1 Rutiner\\n\\n. .\\n\\n. .\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.2 Mötesprinciper\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.3 Versionshantering, -system och rutiner . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.4 Kravhantering och -spårning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.5 Dokumentationsprinciper och rutiner . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.6 Kvalitetssäkring .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\'), 0.7646535335), (Document(id=\'lecture-07_ImplementationDesignmonster_uppgifter.pdf-p0-c0-2d71584e-32cd-4970-af78-5df9b0f7c3f1\', metadata={\'relative_path\': \'Fö7\\\\lecture-07_ImplementationDesignmönster_uppgifter.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpzegua28h\\\\lecture-07_ImplementationDesignmönster_uppgifter.pdf\', \'start_index\': 0.0}, page_content=\'TNM094 – Medietekniskt kandidatprojekt\\n\\nImplementation och designmönster\\n\\nKonvertera design till programkod\\n\\nDetta är icke-trivialt\\n\\n– allt är inte löst med arkitektur och design – diagram, tabeller och strukturer måste omvandlas till kod – koden måste vara lätt att läsa och förstå – dra nytta av styrkan hos både språk och design\\n\\nKodningsstandard\\n\\n– konventioner för namn, mellanrum, radbryt, kommentarer, etc. – organisations-specifik standard som underlättar delad kod – (e.g. Google style guide, K&R, KNF, Gnu style, etc.)\\n\\n[Pfleeger]\\n\\nGenerella programmerings-tips\\n\\nGör koden så generell som är praktiskt\\n\\nIsolera input och output\\n\\nSäkerställ att förutsättningar är uppfyllda\\n\\n– använd assert(...) (vid körtid, debug) – kasta exception (vid körtid, debug+release)\\n\\nRevidera din kod\\n\\n– Kontrollera läsbarhet – Kontrollera implementation – Skriv om på ett bättre sätt\\n\\n[Pfleeger]\\n\\nKontrollstrukturer och algoritmer\\n\\nKeep-It-Simple-Stupid (KISS)\\n\\n– Det finns ingen prestige i att skriva svårläst kod – Offra inte läsbarhet och struktur för prestanda\\n\\nLäsbarhet – uppifrån och ned\\n\\n– Beslut → handling undvik att bryta ett naturligt flöde – Undvik långa eller djupa block (if, for, while, …) – Samla kod som hör ihop – Göm detaljer i subrutiner\\n\\nvoid RegisterUser(User user) {\\n\\nif(user.name == null) { throw new Exception("Invalid User Name"); } if(user.password == null || user.password.length() < 5) {\\n\\nvoid RegisterUser(User user) {\\n\\nvalidateUser(user);\'), 0.763401419)]'
Arguments: ()
2025-05-07 10:11:29,055 - INFO - -----------------------------

Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x000001C8BED81AD0>
2025-05-07 10:12:00,326 - INFO - Last Question: Vem är examinator i kursen?
2025-05-07 10:12:00,326 - INFO - Conversation: [ConversationData(id='cd080f7e-191c-42ff-ad12-a49e6ea73bef', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-dbc23668-1bb9-42b7-a961-7be19bac021d', role='assistant', content='Jag kan hjälpa dig med frågor och information relaterad till kursen TNM094 på Linköpings universitet. Det kan inkludera ämnen som tentamina, kursmaterial, studietips och annat som rör din utbildning. Om du har specifika frågor, tveka inte att ställa dem!'), ConversationData(id='edcd060f-4ca4-4f68-863c-dd7f704216ef', role='user', content='Vad ska ingå i den individuella rapporten?'), ConversationData(id='run-72a7ae12-4c18-4d5c-b044-11d7d12515e2', role='assistant', content='Den individuella rapporten för TNM094 ska innehålla följande delar:\n\n1. **Teknisk utredning**: En välmotiverad utredning av ett problem relaterat till projektet, där du diskuterar olika tekniska lösningar eller arbetssätt.\n\n2. **Projektplan**: En genomarbetad plan för hur projektet ska genomföras, där du kan inkludera egna visioner och premisser.\n\n3. **Reflektion**: En individuell reflektion över din roll i projektet, vad som fungerade väl och vad som kan förbättras, samt eventuella förändringar som gjorts under projektet.\n\n4. **Konsekvenser**: Beskriv arbetets konsekvenser för berörd målgrupp och eventuellt för forskare och praktiker.\n\n5. **Framtida arbete**: Konkreta och väl genomtänkta förslag för framtida studier eller arbete om det skulle finnas mer tid.\n\n6. **Litteraturförteckning**: Referenser som använts i rapporten.\n\n7. **Bilagor**: Eventuella bilagor som gör rapporten mer komplett, exempelvis diagram eller systembeskrivningar.\n\nKom ihåg att beakta strukturen och språkliga krav för rapporten!'), ConversationData(id='f4065578-e8ca-4875-84b7-4d807cb61c95', role='user', content='Hur ska jag lägga upp kodstrukturen för lab2?'), ConversationData(id='run-772e71ef-a93b-4210-bcd9-4594a3c71323', role='assistant', content='Kodstrukturen för laboration 2 (lab2) i TNM094 bör följa en logisk och organiserad uppdelning för att underlätta både läsbarhet och underhåll. Här är några förslag på hur du kan lägga upp kodstrukturen:\n\n1. **Moduler och paket**: Dela upp din kod i olika moduler eller paket för att gruppera relaterade funktioner. T.ex. kan du ha moduler för användargränssnitt, databehandling och affärslogik.\n\n2. **Klass- och metodstruktur**: Använd klassbaserad programmering när det är lämpligt. Definiera klasser för olika entiteter i ditt system, och se till att varje klass har tydligt avgränsade metoder som utför specifika uppgifter.\n\n3. **Namngivning**: Använd en konsekvent och beskrivande namngivning för klasser, metoder och variabler. Detta gör koden enklare att förstå.\n\n4. **Kommentarer**: Kommentera viktig kod och komplexa delar för att förklara dess syfte och logik. Det underlättar för andra (och för dig själv) att läsa och förstå koden senare.\n\n5. **Strukturera enligt funktionalitet**: Se till att koden är organiserad efter funktionaliteten. Till exempel: \n   - Inmatning och hantering av användarinformation (input-modul)\n   - Behandling av data och affärslogik (logic-modul)\n   - Utmatning och presentation av resultat (output-modul)\n\n6. **Versionshantering**: Genomför regelbundna commits om du använder git. Detta gör att du kan hålla koll på ändringar, och underlätta samarbete om ni är flera som arbetar på samma projekt.\n\n7. **Testning**: Om möjligt, implementera testfall för dina metoder. Det hjälper till att säkerställa att koden fungerar som den ska och att eventuella förändringar inte bryter funktionaliteten.\n\nGenom att följa dessa riktlinjer kan du skapa en välstrukturerad kodbas som är både lättförståelig och enkel att underhålla.'), ConversationData(id='6afac99c-b476-49cd-a884-c61a90f948a0', role='user', content='Vem är examinator i kursen?')]
2025-05-07 10:12:00,326 - INFO - Number of Found Documents: 9
2025-05-07 10:12:00,326 - INFO - Found Documents: [(Document(id='LIPs._Latt_Interaktiv_Projektstyrning_pa_Linkopings_universitet.pdf-p0-c44-db1441b6-ce6b-47cf-a9c8-dc4f9fae2960', metadata={'relative_path': 'Fö2\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpyrdvdckm\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'start_index': 53144.0}, page_content='18\n\nutbildningar är att examinatorer som arbetar genom LIPS ansvarar för en avsevärd del av denna kontroll. De har genom övervakningen möjlighet, och ansvar, att utfärda tillrättavisningar och varningar då tidsmarginalerna blir för snäva eller arbetsbelastningen inom en projektgrupp blir ojämnt fördelad. I normala fall ligger detta på projektledarens bord, och framförallt hos den individuelle projektmedarbetaren. Det egna arbetet svarar den enskilde individen för, såväl på arbetsplatsen som i många utbildningssituationer. Visst lämnas tidsrapporter till överordnade inom projekt i näringslivet, men av ekonomiska skäl, knappast i syfte att jämna ut arbetet mellan gruppmedlemmar. Att en heltidsanställd, eller för den delen en heltidsstudent, drar sitt lass i projektet och arbetar motsvarande en fulltidstjänst bör kunna förutsättas utan minutiös kontroll.'), 0.773457229), (Document(id='lecture-00_Kursinformation.pdf-p0-c1-9d05f3a6-a99a-4943-9d43-c1617b9e58f8', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 1427.0}, page_content='TNM094 - 60 % av schemat\n\n18 hp = 5 timmar och 48 minuter varje dag! Även under ”lov” och tentamens-perioder!\n\nBlockschema VT1\n\nVT1 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM119 TNM094 TNM094 TNM094 TNM119\n\n10-12 TNM094 TNM094 TNM119\n\n13-15 TNM094 TNM094 TNM094 TNM119 TNM094 15-17 TNM094 TNM094 TNM094 TNM119 TNM094\n\nBlockschema VT2\n\nVT2 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM094 TNM094 TND004 TNM094 TNM094\n\n10-12 TND004 TNM094 TNM094\n\n13-15 TNM094 TND004 TNM094 TNM094 TNM094 15-17 TNM094 TND004 TNM094 TNM094 TND004\n\nVäldigt mycket grupparbete i VT2 Upp till er att komma överens om när ni ska sitta i grupp och när det är individuellt arbete (gruppkontrakt)\n\nKursöversikt\n\nFöreläsningar\n\nProjekthantering\n\n1. 2. Utvecklingsmetodik 3. Projektanalys, krav och planering • Principer för systemutveckling\n\nIntroduktion till systemutveckling\n\n4. Systemarkitektur 5. Modellering (analys och visualisering) 6. Modul- och programdesign\n\nStandarder och praxis\n\n7. Implementation och designmönster 8. Refaktorering, testning, underhåll\n\nSpråkstrimman\n\n9. Informationssökning och antiplagiering 10. Föreläsning om språk och rapportskrivande\n\nSvenskastrimman\n\nSpråkligt stöd\n\n– Föreläsning om rapportskrivande – Stöd i rapportskrivande – Rättning av rapporter – Återkoppling och tips – Viktigt: Dyslexi eller dylikt? Be om hjälp om du känner att det behövs och/eller lämna en kommentar i inlämningen.\n\nVictoria Pihlgren\n\nBiblioteket (Tatiana Liljeström) Informationssökning'), 0.7624969185), (Document(id='lecture-00_Kursinformation.pdf-p0-c0-96f31a5b-95f0-4462-a05f-8c6197f9178c', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\n\nKursinformation 2025\n\nDaniel Jönsson\n\nMen först lite om mig\n\nDenna kurs\n\nProjekthantering, processer och rutiner\n\nSkapa system som kunden vill ha, i tid och inom budget • Förstå vidden och betydelsen av systemutveckling\n\nPraxis, erfarenheter och riktlinjer • Fyll din personliga verktygslåda Medietekniskt kandidatarbete\n\nVisa på medietekniskt kunskap och ingenjörsmässighet\n\nKräver stort personligt ansvar!\n\nKommunicera med examinatorn om något känns oklart • Läs instruktioner, lisam-uppdatering och e-brev\n\nVad är Medietekniskt?\n\nNi har läst\n\n25 kurser på 60 hp + 60 hp + 30 hp = 150 hp Varav minst 60 hp inom medietekniska ämnen (Datorgrafik, visualisering, VR-teknik, elektronisk publicering, ljud, bildbehandling, etc.)\n\nDags att ta fram\n\nGömd kunskap och outnyttjade förmågor • Glömd kurslitteratur, länkar och kompendier\n\nForsknings- och utforskningslustan\n\nDenna kurs\n\nTNM094, 18 hp = 9 hp / termin = 60 % fart\n\nUPG1 Uppsats (1,5 hp U,G)\n\nIndividuell rapport över en egen plan för ett tilldelat projekt. LAB1 Laborationer (2 hp U,G) Övningar genomförs i grupper om två alternativt individuellt. PRA1 Projekt (14 hp U,G) Genomförs i grupper om 4–8. • UPG2 Opponering (0,5 hp U,G)\n\nIndividuell, skriftlig opponering baserad på projektrapporten.\n\nDenna kurs\n\nParallell med\n\nTNM119 Introduktion till Arificiell Intelligens, 6 hp = 40 % fart TND004 Datastrukturer, 6 hp = 40 % fart\n\nTNM094 - 60 % av schemat'), 0.7579497694999999), (Document(id='lecture-00_Kursinformation.pdf-p0-c2-865b88b2-1e27-450f-8102-1a8c3e5303f5', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 2844.0}, page_content='Victoria Pihlgren\n\nBiblioteket (Tatiana Liljeström) Informationssökning\n\n• Antiplagiering/referenshantering\n\nLitteratur\n\nPrimär kurslitteratur\n\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\n\nKomplement\n\nStudieguide, videos, PDF:er och webbsidor\n\nReferenslitteratur\n\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\n\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\n\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\n\nLaborationer - Partikelsystem\n\nÖvningar\n\n1. Versionshantering (git)\n\nVar klara efter första tillfället\n\n2. Hur designar man system?\n\nFyra-fem tillfällen\n\n3. Kodanalys och testning\n\nTvå-tre tillfällen\n\nLaboratoriearbete\n\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\n\nLaborationer\n\nVald programvara\n\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\n\nHur kan vi få en jämn fördelning?\n\nUtvecklingsprojekt\n\nMål och syfte\n\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\n\nSteg\n\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\n\nViktiga milstolpar för projektet'), 0.757748604), (Document(id='lecture-00_Kursinformation.pdf-p0-c11-7e59442e-d78d-4080-be15-e0a45c545ed6', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 12948.0}, page_content='Urval av ändringar\n\nLagt till bedömningskriterier (se kursinformation) Individuell rapport\n\n‒\n\nDelat upp rapporten i två delar för att bättre efterlikna en projektplan i ett företag. Mer instruktioner i mallen.\n\n‒\n\nUppdaterat bedömningsmall för att bättre reflektera bedömningskriterierna.\n\nLaborationer\n\n‒\n\nArbetat igenom instruktionerna för laboration 2 – förkortat ett moment.\n\n‒\n\nLagt till förberedelseinstruktioner i studieguiden.\n\n‒\n\nTydligare instruktioner när varje labb förväntas vara klar (se kursöversikt).\n\n‒\n\nTänk på att arbeta utanför schemalagd tid\n\nLisam\n\nDemo och genomgång.\n\nEfter pausen\n\nÖversikt över systemutveckling'), 0.756851375), (Document(id='LIPs._Latt_Interaktiv_Projektstyrning_pa_Linkopings_universitet.pdf-p0-c30-6f20351a-3098-4c33-979a-312f20b8cdf9', metadata={'relative_path': 'Fö2\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpyrdvdckm\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'start_index': 37818.0}, page_content='Inom kurserna finns två kontrollerande funktioner, dels examinatorn och dels den egna projektgruppen, vilket resulterar i att utrymmet för felaktigheter reduceras. Jämfört med näringslivet bedöms individer i högskolesammanhang på ett helt annat sätt, vilket kan få negativa konsekvenser för projektet i den bemärkelsen att tilliten till varandra kan minska. Att medlemmarna i en projektgrupp belönas på ett eller annat sätt vid gott utfört arbete skulle kunna liknas med de betyg som ges i projektkurserna.'), 0.756755024), (Document(id='instruktioner-projekt.pdf-p0-c0-aa36802c-4867-4c3a-a65d-4f857a409a58', metadata={'relative_path': 'Utvecklingsprojekt\\instruktioner-projekt.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp8u5pts0x\\instruktioner-projekt.pdf', 'start_index': 0.0}, page_content='Projekt\n\nSyfte Efter kursen kan studenten ta ut kandidatexamen och för det måste man ha uppvisat ämneskunskaper, individuella och yrkesmässiga färdigheter, att kunna arbeta i grupp och kommunicera och tillämpa medietekniska kunskaper, exempelvis publicering, ljud- och bildteknik, datorgrafik och visualisering. Detta demonstreras genom projektarbetet, tillsammans med övning och den uppvisning av kursspecifika färdigheter som behövs för godkänt i kursen.\n\nUppgiften Ett utvecklingsprojekt inom ämnet medieteknik kommer att genomföras i grupper om 4–8 studenter. Det ger projekt på ca 1500 till 3000 arbetstimmar. Varje student anger vilket projekt de helst vill jobba med, men tyvärr kan inte allas önskan uppfyllas.\n\nProjektet ska vara ett kandidatarbete, d v s tillämpa de kunskaper som förvärvats genom tidigare kurser. För godkänt ska teamet visa på förmåga att tillämpa tidigare förvärvade kunskaper (inom medieteknik och teknik i allmänhet), ingenjörsmässighet och tekniker för systemutveckling.\n\nIndelning i team En lista över möjliga projekt har innan kursstart distribuerats till alla som är anmälda till kursen. Efter första föreläsningen fyller varje student i ett formulär där de dels gör en självvärdering och dels anger hur gärna de önskar arbeta i varje projekt. Självvärdering och önskemål används sedan av kursledningen för att dela upp studenterna i lagom grupper. Många av förslagen kommer inte att bli av och i vissa fall kan mer än ett team få samma uppgift.'), 0.756121576), (Document(id='lecture-00_Kursinformation.pdf-p0-c9-83624c32-cdf3-4b90-9582-bd35821ce270', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 11391.0}, page_content='Antal studenter: 52 | Antal svar: 44 | Medel: 3,4 ”de olika examinationsmomenten var viktiga och bra” ”kommunikation mellan projektgrupper och kunder kunde vara problematisk” , –Tänk på att detta förekommer i verkligheten. ”Föreläsningarna var bra enligt studenterna men förberedelserna inför dem var för stora.” –Omvänt klassrum blir det lite så. I regel är förberedelserna 30-60 minuter långa och ni har ca 6 timmar per dag. ”Många studenter tyckte inte om den individuella rapporten då kompletteringar som kom senare fick dem att skriva saker som inte längre var sant.” – Kortat ner tiden mellan komplettering och ändrat upplägget på rapporten. ”Jag hade mycket hellre haft en individuell fördjupningsuppgift (med tekniskt fokus)” – Check, nu är det uppdelat i fördjupning och plan. ”lab2 hade ett för stort fokus på syntax och kodning i c++ när det borde vara mer fokus på diagrammen.” –Tidigare år har vi testat att ta bort kodningen men det har gjort att man inte förstod hur diagrammen kopplade till kod. För att förstå kopplingen mellan diagram och kod så behöver vi ofta koda. Projektet: ”För fritt i vissa gruppers fall. En del kunder tyckte att grupperna skulle börja med att komma med fler idéer medan gruppen ville komma igång med arbetet” – Prata med kunden eller ta kontakt med kursledningen så tidigt som möjligt för att styra ”Det var dessutom inte tydligt att alla behövde pusha till git för att bli godkända” – Notera att vi kommer att titta på era bidrag i projekten. Inga'), 0.7551944555), (Document(id='lecture-00_Kursinformation.pdf-p0-c8-6075eeb4-a405-45e1-a519-57ec475c7f3d', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 11196.0}, page_content='Se studieguide på kurssidan\n\nKan vara mycket förberedelser, men\n\nGör att ni kan arbeta med projekten på föreläsningarna • Bidrar direkt till er individuella rapport\n\nUtvärdering och KURT (2024)'), 0.7532815335)]       
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\u2248' in position 6152: character maps to <undefined>
Call stack:
  File "<string>", line 1, in <module>
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 135, in _main
    return self._bootstrap(parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 314, in _bootstrap
    self.run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\_subprocess.py", line 80, in subprocess_started
    target(sockets=sockets)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\server.py", line 66, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 641, in run_until_complete
    self.run_forever()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 608, in run_forever
    self._run_once()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1936, in _run_once
    handle._run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 84, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\protocols\websockets\websockets_impl.py", line 243, in run_asgi
    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)  # type: ignore[func-returns-value]
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\middleware\proxy_headers.py", line 60, in __call__        
    return await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\errors.py", line 152, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\cors.py", line 77, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 362, in handle
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 95, in app
    await wrap_app_handling_exceptions(app, session)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 93, in app
    await func(session)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\routing.py", line 383, in app
    await dependant.call(**solved_result.values)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\main.py", line 229, in ws_llm_conversation
    async for chunk in handle_conversation_stream(data):
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\services.py", line 109, in handle_conversation_stream
    logger.info(f"Found Documents: {found_documents}")
Message: "Found Documents: [(Document(id='LIPs._Latt_Interaktiv_Projektstyrning_pa_Linkopings_universitet.pdf-p0-c44-db1441b6-ce6b-47cf-a9c8-dc4f9fae2960', metadata={'relative_path': 'Fö2\\\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpyrdvdckm\\\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'start_index': 53144.0}, page_content='18\\n\\nutbildningar är att examinatorer som arbetar genom LIPS ansvarar för en avsevärd del av denna kontroll. De har genom övervakningen möjlighet, och ansvar, att utfärda tillrättavisningar och varningar då tidsmarginalerna blir för snäva eller arbetsbelastningen inom en projektgrupp blir ojämnt fördelad. I normala fall ligger detta på projektledarens bord, och framförallt hos den individuelle projektmedarbetaren. Det egna arbetet svarar den enskilde individen för, såväl på arbetsplatsen som i många utbildningssituationer. Visst lämnas tidsrapporter till överordnade inom projekt i näringslivet, men av ekonomiska skäl, knappast i syfte att jämna ut arbetet mellan gruppmedlemmar. Att en heltidsanställd, eller för den delen en heltidsstudent, drar sitt lass i projektet och arbetar motsvarande en fulltidstjänst bör kunna förutsättas utan minutiös kontroll.'), 0.773457229), (Document(id='lecture-00_Kursinformation.pdf-p0-c1-9d05f3a6-a99a-4943-9d43-c1617b9e58f8', metadata={'relative_path': 'Fö1\\\\lecture-00_Kursinformation.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf', 'start_index': 1427.0}, page_content='TNM094 - 60 % av schemat\\n\\n18 hp = 5 timmar och 48 minuter varje dag! Även under ”lov” och tentamens-perioder!\\n\\nBlockschema VT1\\n\\nVT1 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM119 TNM094 TNM094 TNM094 TNM119\\n\\n10-12 TNM094 TNM094 TNM119\\n\\n13-15 TNM094 TNM094 TNM094 TNM119 TNM094 15-17 TNM094 TNM094 TNM094 TNM119 TNM094\\n\\nBlockschema VT2\\n\\nVT2 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM094 TNM094 TND004 TNM094 TNM094\\n\\n10-12 TND004 TNM094 TNM094\\n\\n13-15 TNM094 TND004 TNM094 TNM094 TNM094 15-17 TNM094 TND004 TNM094 TNM094 TND004\\n\\nVäldigt mycket grupparbete i VT2 Upp till er att komma överens om när ni ska sitta i grupp och när det är individuellt arbete (gruppkontrakt)\\n\\nKursöversikt\\n\\nFöreläsningar\\n\\nProjekthantering\\n\\n1. 2. Utvecklingsmetodik 3. Projektanalys, krav och planering • Principer för systemutveckling\\n\\nIntroduktion till systemutveckling\\n\\n4. Systemarkitektur 5. Modellering (analys och visualisering) 6. Modul- och programdesign\\n\\nStandarder och praxis\\n\\n7. Implementation och designmönster 8. Refaktorering, testning, underhåll\\n\\nSpråkstrimman\\n\\n9. Informationssökning och antiplagiering 10. Föreläsning om språk och rapportskrivande\\n\\nSvenskastrimman\\n\\nSpråkligt stöd\\n\\n– Föreläsning om rapportskrivande – Stöd i rapportskrivande – Rättning av rapporter – Återkoppling och tips – Viktigt: Dyslexi eller dylikt? Be om hjälp om du känner att det behövs och/eller lämna en kommentar i inlämningen.\\n\\nVictoria Pihlgren\\n\\nBiblioteket (Tatiana Liljeström) Informationssökning'), 0.7624969185), (Document(id='lecture-00_Kursinformation.pdf-p0-c0-96f31a5b-95f0-4462-a05f-8c6197f9178c', metadata={'relative_path': 'Fö1\\\\lecture-00_Kursinformation.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\\n\\nKursinformation 2025\\n\\nDaniel Jönsson\\n\\nMen först lite om mig\\n\\nDenna kurs\\n\\nProjekthantering, processer och rutiner\\n\\nSkapa system som kunden vill ha, i tid och inom budget • Förstå vidden och betydelsen av systemutveckling\\n\\nPraxis, erfarenheter och riktlinjer • Fyll din personliga verktygslåda Medietekniskt kandidatarbete\\n\\nVisa på medietekniskt kunskap och ingenjörsmässighet\\n\\nKräver stort personligt ansvar!\\n\\nKommunicera med examinatorn om något känns oklart • Läs instruktioner, lisam-uppdatering och e-brev\\n\\nVad är Medietekniskt?\\n\\nNi har läst\\n\\n25 kurser på 60 hp + 60 hp + 30 hp = 150 hp Varav minst 60 hp inom medietekniska ämnen (Datorgrafik, visualisering, VR-teknik, elektronisk publicering, ljud, bildbehandling, etc.)\\n\\nDags att ta fram\\n\\nGömd kunskap och outnyttjade förmågor • Glömd kurslitteratur, länkar och kompendier\\n\\nForsknings- och utforskningslustan\\n\\nDenna kurs\\n\\nTNM094, 18 hp = 9 hp / termin = 60 % fart\\n\\nUPG1 Uppsats (1,5 hp U,G)\\n\\nIndividuell rapport över en egen plan för ett tilldelat projekt. LAB1 Laborationer (2 hp U,G) Övningar genomförs i grupper om två alternativt individuellt. PRA1 Projekt (14 hp U,G) Genomförs i grupper om 4–8. • UPG2 Opponering (0,5 hp U,G)\\n\\nIndividuell, skriftlig opponering baserad på projektrapporten.\\n\\nDenna kurs\\n\\nParallell med\\n\\nTNM119 Introduktion till Arificiell Intelligens, 6 hp = 40 % fart TND004 Datastrukturer, 6 hp = 40 % fart\\n\\nTNM094 - 60 % av schemat'), 0.7579497694999999), (Document(id='lecture-00_Kursinformation.pdf-p0-c2-865b88b2-1e27-450f-8102-1a8c3e5303f5', metadata={'relative_path': 'Fö1\\\\lecture-00_Kursinformation.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf', 'start_index': 2844.0}, page_content='Victoria Pihlgren\\n\\nBiblioteket (Tatiana Liljeström) Informationssökning\\n\\n• Antiplagiering/referenshantering\\n\\nLitteratur\\n\\nPrimär kurslitteratur\\n\\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\\n\\nKomplement\\n\\nStudieguide, videos, PDF:er och webbsidor\\n\\nReferenslitteratur\\n\\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\\n\\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\\n\\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\\n\\nLaborationer - Partikelsystem\\n\\nÖvningar\\n\\n1. Versionshantering (git)\\n\\nVar klara efter första tillfället\\n\\n2. Hur designar man system?\\n\\nFyra-fem tillfällen\\n\\n3. Kodanalys och testning\\n\\nTvå-tre tillfällen\\n\\nLaboratoriearbete\\n\\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\\n\\nLaborationer\\n\\nVald programvara\\n\\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\\n\\nHur kan vi få en jämn fördelning?\\n\\nUtvecklingsprojekt\\n\\nMål och syfte\\n\\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\\n\\nSteg\\n\\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\\n\\nViktiga milstolpar för projektet'), 0.757748604), (Document(id='lecture-00_Kursinformation.pdf-p0-c11-7e59442e-d78d-4080-be15-e0a45c545ed6', metadata={'relative_path': 'Fö1\\\\lecture-00_Kursinformation.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf', 'start_index': 12948.0}, page_content='Urval av ändringar\\n\\nLagt till bedömningskriterier (se kursinformation) Individuell rapport\\n\\n‒\\n\\nDelat upp rapporten i två delar för att bättre efterlikna en projektplan i ett företag. Mer instruktioner i mallen.\\n\\n‒\\n\\nUppdaterat bedömningsmall för att bättre reflektera bedömningskriterierna.\\n\\nLaborationer\\n\\n‒\\n\\nArbetat igenom instruktionerna för laboration 2 – förkortat ett moment.\\n\\n‒\\n\\nLagt till förberedelseinstruktioner i studieguiden.\\n\\n‒\\n\\nTydligare instruktioner när varje labb förväntas vara klar (se kursöversikt).\\n\\n‒\\n\\nTänk på att arbeta utanför schemalagd tid\\n\\nLisam\\n\\nDemo och genomgång.\\n\\nEfter pausen\\n\\nÖversikt över systemutveckling'), 0.756851375), (Document(id='LIPs._Latt_Interaktiv_Projektstyrning_pa_Linkopings_universitet.pdf-p0-c30-6f20351a-3098-4c33-979a-312f20b8cdf9', metadata={'relative_path': 'Fö2\\\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpyrdvdckm\\\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'start_index': 37818.0}, page_content='Inom kurserna finns två kontrollerande funktioner, dels examinatorn och dels den egna projektgruppen, vilket resulterar i att utrymmet för felaktigheter reduceras. Jämfört med näringslivet bedöms individer i högskolesammanhang på ett helt annat sätt, vilket kan få negativa konsekvenser för projektet i den bemärkelsen att tilliten till varandra kan minska. Att medlemmarna i en projektgrupp belönas på ett eller annat sätt vid gott utfört arbete skulle kunna liknas med de betyg som ges i projektkurserna.'), 0.756755024), (Document(id='instruktioner-projekt.pdf-p0-c0-aa36802c-4867-4c3a-a65d-4f857a409a58', metadata={'relative_path': 'Utvecklingsprojekt\\\\instruktioner-projekt.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp8u5pts0x\\\\instruktioner-projekt.pdf', 'start_index': 0.0}, page_content='Projekt\\n\\nSyfte Efter kursen kan studenten ta ut kandidatexamen och för det måste man ha uppvisat ämneskunskaper, individuella och yrkesmässiga färdigheter, att kunna arbeta i grupp och kommunicera och tillämpa medietekniska kunskaper, exempelvis publicering, ljud- och bildteknik, datorgrafik och visualisering. Detta demonstreras genom projektarbetet, tillsammans med övning och den uppvisning av kursspecifika färdigheter som behövs för godkänt i kursen.\\n\\nUppgiften Ett utvecklingsprojekt inom ämnet medieteknik kommer att genomföras i grupper om 4–8 studenter. Det ger projekt på ca 1500 till 3000 arbetstimmar. Varje student anger vilket projekt de helst vill jobba med, men tyvärr kan inte allas önskan uppfyllas.\\n\\nProjektet ska vara ett kandidatarbete, d v s tillämpa de kunskaper som förvärvats genom tidigare kurser. För godkänt ska teamet visa på förmåga att tillämpa tidigare förvärvade kunskaper (inom medieteknik och teknik i allmänhet), ingenjörsmässighet och tekniker för systemutveckling.\\n\\nIndelning i team En lista över möjliga projekt har innan kursstart distribuerats till alla som är anmälda till kursen. Efter första föreläsningen fyller varje student i ett formulär där de dels gör en självvärdering och dels anger hur gärna de önskar arbeta i varje projekt. Självvärdering och önskemål används sedan av kursledningen för att dela upp studenterna i lagom grupper. Många av förslagen kommer inte att bli av och i vissa fall kan mer än ett team få samma uppgift.'), 0.756121576), (Document(id='lecture-00_Kursinformation.pdf-p0-c9-83624c32-cdf3-4b90-9582-bd35821ce270', metadata={'relative_path': 'Fö1\\\\lecture-00_Kursinformation.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf', 'start_index': 11391.0}, page_content='Antal studenter: 52 | Antal svar: 44 | Medel: 3,4 ”de olika examinationsmomenten var viktiga och bra” ”kommunikation mellan projektgrupper och kunder kunde vara problematisk” , –Tänk på att detta förekommer i verkligheten. ”Föreläsningarna var bra enligt studenterna men förberedelserna inför dem var för stora.” –Omvänt klassrum blir det lite så. I regel är förberedelserna 30-60 minuter långa och ni har ca 6 timmar per dag. ”Många studenter tyckte inte om den individuella rapporten då kompletteringar som kom senare fick dem att skriva saker som inte längre var sant.” – Kortat ner tiden mellan komplettering och ändrat upplägget på rapporten. ”Jag hade mycket hellre haft en individuell fördjupningsuppgift (med tekniskt fokus)” – Check, nu är det uppdelat i fördjupning och plan. ”lab2 hade ett för stort fokus på syntax och kodning i c++ när det borde vara mer fokus på diagrammen.” –Tidigare år har vi testat att ta bort kodningen men det har gjort att man inte förstod hur diagrammen kopplade till kod. För att förstå kopplingen mellan diagram och kod så behöver vi ofta koda. Projektet: ”För fritt i vissa gruppers fall. En del kunder tyckte att grupperna skulle börja med att komma med fler idéer medan gruppen ville komma igång med arbetet” – Prata med kunden eller ta kontakt med kursledningen så tidigt som möjligt för att styra ”Det var dessutom inte tydligt att alla behövde pusha till git för att bli godkända” – Notera att vi kommer att titta på era bidrag i projekten. Inga'), 0.7551944555), (Document(id='lecture-00_Kursinformation.pdf-p0-c8-6075eeb4-a405-45e1-a519-57ec475c7f3d', metadata={'relative_path': 'Fö1\\\\lecture-00_Kursinformation.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpp1jad715\\\\lecture-00_Kursinformation.pdf', 'start_index': 11196.0}, page_content='Se studieguide på kurssidan\\n\\nKan vara mycket förberedelser, men\\n\\nGör att ni kan arbeta med projekten på föreläsningarna • Bidrar direkt till er individuella rapport\\n\\nUtvärdering och KURT (2024)'), 0.7532815335)]"
Arguments: ()
2025-05-07 10:12:00,343 - INFO - -----------------------------

client_session: <aiohttp.client.ClientSession object at 0x000001C8BED8CD90>
2025-05-07 10:12:43,034 - INFO - Last Question: Kan du förklara systemarkitekturen för kaffemaskinen?
2025-05-07 10:12:43,034 - INFO - Conversation: [ConversationData(id='cd080f7e-191c-42ff-ad12-a49e6ea73bef', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-dbc23668-1bb9-42b7-a961-7be19bac021d', role='assistant', content='Jag kan hjälpa dig med frågor och information relaterad till kursen TNM094 på Linköpings universitet. Det kan inkludera ämnen som tentamina, kursmaterial, studietips och annat som rör din utbildning. Om du har specifika frågor, tveka inte att ställa dem!'), ConversationData(id='edcd060f-4ca4-4f68-863c-dd7f704216ef', role='user', content='Vad ska ingå i den individuella rapporten?'), ConversationData(id='run-72a7ae12-4c18-4d5c-b044-11d7d12515e2', role='assistant', content='Den individuella rapporten för TNM094 ska innehålla följande delar:\n\n1. **Teknisk utredning**: En välmotiverad utredning av ett problem relaterat till projektet, där du diskuterar olika tekniska lösningar eller arbetssätt.\n\n2. **Projektplan**: En genomarbetad plan för hur projektet ska genomföras, där du kan inkludera egna visioner och premisser.\n\n3. **Reflektion**: En individuell reflektion över din roll i projektet, vad som fungerade väl och vad som kan förbättras, samt eventuella förändringar som gjorts under projektet.\n\n4. **Konsekvenser**: Beskriv arbetets konsekvenser för berörd målgrupp och eventuellt för forskare och praktiker.\n\n5. **Framtida arbete**: Konkreta och väl genomtänkta förslag för framtida studier eller arbete om det skulle finnas mer tid.\n\n6. **Litteraturförteckning**: Referenser som använts i rapporten.\n\n7. **Bilagor**: Eventuella bilagor som gör rapporten mer komplett, exempelvis diagram eller systembeskrivningar.\n\nKom ihåg att beakta strukturen och språkliga krav för rapporten!'), ConversationData(id='f4065578-e8ca-4875-84b7-4d807cb61c95', role='user', content='Hur ska jag lägga upp kodstrukturen för lab2?'), ConversationData(id='run-772e71ef-a93b-4210-bcd9-4594a3c71323', role='assistant', content='Kodstrukturen för laboration 2 (lab2) i TNM094 bör följa en logisk och organiserad uppdelning för att underlätta både läsbarhet och underhåll. Här är några förslag på hur du kan lägga upp kodstrukturen:\n\n1. **Moduler och paket**: Dela upp din kod i olika moduler eller paket för att gruppera relaterade funktioner. T.ex. kan du ha moduler för användargränssnitt, databehandling och affärslogik.\n\n2. **Klass- och metodstruktur**: Använd klassbaserad programmering när det är lämpligt. Definiera klasser för olika entiteter i ditt system, och se till att varje klass har tydligt avgränsade metoder som utför specifika uppgifter.\n\n3. **Namngivning**: Använd en konsekvent och beskrivande namngivning för klasser, metoder och variabler. Detta gör koden enklare att förstå.\n\n4. **Kommentarer**: Kommentera viktig kod och komplexa delar för att förklara dess syfte och logik. Det underlättar för andra (och för dig själv) att läsa och förstå koden senare.\n\n5. **Strukturera enligt funktionalitet**: Se till att koden är organiserad efter funktionaliteten. Till exempel: \n   - Inmatning och hantering av användarinformation (input-modul)\n   - Behandling av data och affärslogik (logic-modul)\n   - Utmatning och presentation av resultat (output-modul)\n\n6. **Versionshantering**: Genomför regelbundna commits om du använder git. Detta gör att du kan hålla koll på ändringar, och underlätta samarbete om ni är flera som arbetar på samma projekt.\n\n7. **Testning**: Om möjligt, implementera testfall för dina metoder. Det hjälper till att säkerställa att koden fungerar som den ska och att eventuella förändringar inte bryter funktionaliteten.\n\nGenom att följa dessa riktlinjer kan du skapa en välstrukturerad kodbas som är både lättförståelig och enkel att underhålla.'), ConversationData(id='6afac99c-b476-49cd-a884-c61a90f948a0', role='user', content='Vem är examinator i kursen?'), ConversationData(id='run-f92a6d87-f5e2-4e55-92b2-7b0c2649e867', role='assistant', content='Examinatorn i kursen TNM094 är Victoria Pihlgren. Hon är ansvarig för bedömningar och kan kontaktas om du har frågor eller behöver klargöranden angående kursens innehåll och krav.'), ConversationData(id='9157b148-df94-46bb-96b6-2226d389e25d', role='user', content='Kan du förklara systemarkitekturen för kaffemaskinen?')]
2025-05-07 10:12:43,034 - INFO - Number of Found Documents: 10
2025-05-07 10:12:43,034 - INFO - Found Documents: [(Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c2-2c50a1d2-37e5-4dff-96df-34ca90ff6935', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp3z8bu97e\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 2937.0}, page_content='Användbarhet – fokus på snabbhet snarare än enkelhet\n\n2. Vilken inverkan har varje attribut på systemarkitekturen?\n\nModifierbarhet – pipeline- och modulbaserat\n\nPrestanda – OpenGL/OpenCL integration\n\nAnvändbarhet – direkt tillgång till funktionalitet\n\nIdentifiera kvalitetsattribut\n\nIndividuellt eller grupper om 2-3 personer (ca 10 minuter)\n\n1. Vad är viktigt i ditt system, varför? https://en.wikipedia.org/wiki/List_of_system_quality_attributes - Modifierbarhet - Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – … ARKITEKTUR\n\nKOMMUNIKATION\n\n2. Fundera på:\n\nVilken inverkan har varje attribut på systemarkitekturen?\n\nSYSTEMARKITEKTUR\n\nArkitektur\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter\n\nRepresentationer för kod- eller data\n\nNivå 3: Systemkomponenter\n\nKomponenter i ett delsystem\n\nKVALITETSATTRIBUT\n\n(vad är typiskt för systemet?, begränsningar)\n\nARKITEKTUR\n\n(komponent- organisering och ihopsättning)\n\nSYSTEMARKITEKTUR\n\nKOMMUNIKATION\n\nArkitektur - Systemkontext\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nSystemkontext – Bankexempel\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nTips: https://app.diagrams.net/\n\nNotation:\n\nArkitektur - Systemet\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)'), 0.7858798204999999), (Document(id='TNM094_-_Exempel_individuell_rapport.pdf-p0-c6-42eec120-1407-4a67-b32e-954e1e06ef3d', metadata={'relative_path': 'Induviduell rapport\\TNM094 - Exempel individuell rapport.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp1xq0gua3\\TNM094 - Exempel individuell rapport.pdf', 'start_index': 7437.0}, page_content='2.3 Grundläggande systemarkitektur\n\nI stora drag kommer mjukvarusystemet vara uppdelat i en mobilapplikation som slutanvändaren an- vänder, samt en ett trädgårdsinformations-system, som applikationen kommunicerar med. I ﬁgur 2.1 ﬁnns ett kontext-diagram över kopplingen mellan de olika parterna.\n\nBeteendet hos användaren men även produkten är osäkert, och därmed och mängden och frekvensen av traﬁk som applikationen kommer att ha. Av andledningen att enkelt kunna skala upp produkten utefter hur utbredd användningen är, och att frigöra behovet av underhåll av egna servrar, så kommer moln-lösningen AWS användas som plattform för mjukvarusystemet [2]. Med undantag för själva mobilapplikationen, som kommer erbjudas via Google Play och App Store som tidigare nämnt. Sy- stemet kommer ha en så kallad serverlös back end, vilket är en passande lösning för en mobil-backend [2]. Andra Moln-baserade lösningar ﬁnns också och för projektets syfte hade också Microsoft Azure varit passande.\n\nBack end:en kan med fördel uppdelas i mikrotjänster för att enkelt kunna separera produktområden, men även kunna ha tätare och mindre riskfyllda releaser för varje enskild mikrotjänst. Det möjliggör även att lätt kunna bygga på med ﬂer tjänster - om det skulle visa sig att machine learning behövs för att prediktera bevattningsschema är det lätt att lägga till en ny mikrotjänst. Slutligen möjliggör det även för olika skalning av de olika tjänsterna beroende på belastning [6].'), 0.7785545), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c3-c092a183-bc86-43c6-a5bf-16516c52359d', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp3z8bu97e\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 4344.0}, page_content='Typer av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter\n\nRepresentationer för kod- eller data\n\nArkitektur - Banksystemet\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter\n\nRepresentationer för kod- eller data\n\nNotation:\n\nArkitektur - Systemet\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter\n\nRepresentationer för kod- eller data\n\nARKITEKTUR\n\n(komponent- organisering och ihopsättning)\n\nKVALITETSATTRIBUT\n\nKOMMUNIKATION\n\n(vad är typiskt för systemet?, begränsningar)\n\nSYSTEM- ARKITEKTUR\n\nArkitektur - Banksystemet\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter\n\nRepresentationer för kod- eller data\n\nARKITEKTUR\n\n(komponent- organisering och ihopsättning)\n\nKVALITETSATTRIBUT\n\nKOMMUNIKATION\n\n(vad är typiskt för systemet?, begränsningar)\n\nSYSTEM- ARKITEKTUR\n\nNotation:\n\nÅterkoppling\n\nhttps://www.mentimeter.com/\n\nVad fungerade bra?\n\nVad kan ändras till nästa gång?'), 0.7772650720000001), (Document(id='lecture-04_Systemarkitektur.pdf-p0-c3-e005be2c-541a-4f6e-a973-3abf96d992e0', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp0h_noo3k\\lecture-04_Systemarkitektur.pdf', 'start_index': 4143.0}, page_content='– Centraliserad kontroll\n\n– Potentiell flaskhals och enskild svag punkt\n\n(single-point-of-failure – SPOF)\n\nServer\n\nKlient\n\nKlient\n\nKlient\n\n[Pfleeger]\n\nPeer-to-Peer\n\nPrinciper\n\n– alla komponenter kommunicerar direkt\n\nEgenskaper\n\n– låg fördröjning, ingen flaskhals\n\n– svårt att kontrollera och synkronisera\n\n– svårt att förändra och avlusa\n\nNode\n\nNode\n\nNode\n\nNode\n\nNode\n\n[Pfleeger]\n\nLayering\n\nPrinciper\n\n– hierarkisk struktur baserad på abstraktion\n\n– tillåter att anrop hoppar över ett lager\n\nEgenskaper\n\n– förenklat gränssnitt och struktur\n\n– förenklar återanvändning av moduler\n\n– möjligen viss negativ effekt på prestandan\n\nApplikation\n\nApplikation\n\nTransport\n\nTransport\n\nNätverk\n\nNätverk\n\nFysiskt lager\n\nFysiskt lager\n\n[Pfleeger]\n\nThree-/Multi-tier System\n\nPrinciper\n\n– strikt uppdelat ansvar, ”kommunicera genom”\n\nEgenskaper\n\n– välkända och separerade ansvar och funktioner\n\nGUI\n\nKlient\n\nKlient\n\nLogik\n\nServer\n\nData\n\nDatabase\n\nKlient\n\n[Pfleeger]\n\nModel-View-Controller\n\nPrinciper\n\n– uppdelning av ansvar, riktad kommunikation\n\nEgenskaper\n\n– renare programkod, enklare att hitta fel\n\n– enkelt att lägga till flera vyer av en datamodell\n\nViewView View\n\nController Controller\n\nModel Model\n\nKvalitetsattribut\n\nHur vet vi om en arkitektur är bra? • Viktiga aspekter hos en design – Hög sammanhållning, låg koppling – Modifierbarhet – Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – Affärsmål\n\n[Pfleeger]\n\nSammanhållning och koppling'), 0.7757454214999999), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c1-df3d2670-5fa2-4746-a3b4-987baf567101', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp3z8bu97e\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 1438.0}, page_content='Abstrakt lösning\n\n– Modeller och beskrivningar av en programdesign\n\nKonsekvenser\n\n– Kända egenskaper och konsekvenser\n\nImplementationsdetaljer\n\n– Särskilda överväganden, variationer, fallgropar, etc.\n\n[Gamma et al]\n\nModel-View-Controller\n\nProblem • Vill ha flera gränssnitt med\n\nModel\n\nsamma logik\n\nUppdaterar\n\nLösning • Separera data, vy och logik Konsekvenser + Flera vyer av samma data\n\nView\n\n+ Kan byta ut interaktion\n\nKomplicerad synkronisering\n\nhttps://martinfowler.com/eaaDev/uiArchs.html\n\nhttps://martinfowler.com/eaaDev/uiArchs.html\n\nUser\n\nÄndrar\n\nController\n\nUndersök arkitekturmönster\n\nGruppuppgift\n\n1. Varje person fördjupar sig i ett mönster.\n\n2. Förklara för de andra i gruppen och diskutera gemensamt:\n\n• Motivera varför det gör det eller inte gör det\n\nPassar mönstret in på ert system, var i så fall?\n\nFörslag på mönster\n\nPipe-and-filter\n\nKlient-server\n\nLayering\n\nPeer-to-peer\n\nPlug-in\n\nModel-View-Controller\n\nSe även:\n\nPublish-subscribe/Event-driven\n\nhttps://en.wikipedia.org/wiki/List_of_software_architecture_styles_and_patterns\n\nPfleeger kapitel 5.4 (sidor 262 – 270)\n\nIdentifiera kvalitetsattribut\n\nUtgå från kravställning. Exempel: Inviwo\n\n”Som en visualiseringsexpert vill jag experimentera med olika typer av visualiseringsalgoritmer på min stationära eller bärbara dator”\n\n1. Vad är viktigt i ditt system, varför?\n\nModifierbarhet - används i väldigt olika typer av forskningsprojekt\n\nPrestanda – måste ha tillgång till hårdvara för att utveckla de algoritmer i världsklass'), 0.762940645), (Document(id='TNM094_-_Exempel_individuell_rapport.pdf-p0-c1-02e94384-7fe9-4177-9593-4ff85d3d2de8', metadata={'relative_path': 'Induviduell rapport\\TNM094 - Exempel individuell rapport.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp1xq0gua3\\TNM094 - Exempel individuell rapport.pdf', 'start_index': 1418.0}, page_content='2 System och tekniska lösningar\n\n2.1 Grundläggande, initiala krav och systembegränsningar\n\n. . . . . . . . . . . . . . . .\n\n2.2 Målplattform .\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n2.3 Grundläggande systemarkitektur . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n2.4 Standarder .\n\n. .\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n2.5 Utvecklingsmiljö .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n3 Projekthantering\n\n3.1 Utvecklingsmetodik .\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n3.2 Organisation . .\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n3.3 Tidsplan .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n3.4 Milstolpar och leverabler .\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4 Rutiner och principer\n\n4.1 Rutiner\n\n. .\n\n. .\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.2 Mötesprinciper\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.3 Versionshantering, -system och rutiner . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.4 Kravhantering och -spårning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.5 Dokumentationsprinciper och rutiner . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n4.6 Kvalitetssäkring .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.'), 0.761686206), (Document(id='lecture-07_ImplementationDesignmonster_uppgifter.pdf-p0-c5-1a6a0b63-9229-43ce-9daf-70e366b6418b', metadata={'relative_path': 'Fö7\\lecture-07_ImplementationDesignmönster_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpzegua28h\\lecture-07_ImplementationDesignmönster_uppgifter.pdf', 'start_index': 7053.0}, page_content='Synchronization\n\n– Observer\n\n– Scoped Lock\n\n– Thread-safe Interface\n\n[Gamma et al, Schmidt et al]\n\nFacade\n\nDelar\n\nFasad\n\n– Känner till subsystemets klasser och ansvar\n\n– Enkapsulerar objekt, tillstånd och kopplingar (handles)\n\n– Översätter och vidarebefordrar anrop\n\nSubsystemklasser\n\n– Gör det faktiska arbetet\n\nFacade\n\n[Gamma et al]\n\nUppgift – Tävling Lös problem med designmönster\n\nVälj ut så många designmönster ni hinner, tillsammans i grupp om max 3-4 personer.\n\nTips på mönster: Adapter, Command pattern, Decorator, Object pool, Observer, Facade, Factory pattern, Flyweight, Strategy pattern, Template method pattern\n\nhttps://refactoring.guru/design-patterns/catalog\n\nhttps://en.wikipedia.org/wiki/Software_design_pattern\n\nPresentera varje mönster för varandra och diskutera om det passar till ett eller flera problem på nästa slide.\n\nEra svar ska innehålla mönstrets namn samt motivering till hur det passar in.\n\nFörslagsvis presenteras dessa aspekter för varje designmönster:\n\nNamn: Finns ett unikt namn som associerar till lösningen? Problem och kontext\n\n– Beskrivning av problemet som ska lösas\n\n– Kontext och andra omständigheter som förutsätts för designen\n\nAbstrakt lösning\n\n– Beskriv hur designmönstret löser problemet\n\nKonsekvenser\n\n– Kända egenskaper och konsekvenser\n\nImplementationsdetaljer\n\n– Särskilda överväganden, variationer, fallgropar, etc.\n\n1. Du behöver läsa in olika typer av filer men vill inte vara beroende av att veta vilka typer av filinläsare som finns i din kod.'), 0.7609662115), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c0-a5b66ee3-91cc-42ff-a62f-1e73bcd69161', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp3z8bu97e\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\n\nSystemarkitektur\n\nVad har vi gjort och vad ska vi göra?\n\nVi har\n\nFått en överblick över systemutvecklingens delar\n\nUndersökt utvecklingsmetodiker och deras för/nackdelar\n\nTestat på att samla in krav och diskuterat vad som är lätt/svårt\n\nGenomfört en Scrum-sprint\n\nSyfte idag\n\nSkapa förståelse för vanliga sätt att designa system (mönster)\n\nSkapa förståelse för prioriteringar i utvecklingen av systemet\n\nSkapa en överblick över systemet\n\nFå praktisk erfarenhet av att modellera ett system på hög nivå\n\nGenom att\n\nLära ut arkitekturmönster till er gruppkamrater\n\nIdentifiera kvalitetsattribut\n\n•\n\nRita C4 diagram\n\nKVALITETSATTRIBUT\n\n(vad är typiskt för systemet?, begränsningar)\n\nARKITEKTUR\n\n(komponent- organisering och ihopsättning)\n\nSYSTEMARKITEKTUR\n\nKOMMUNIKATION\n\nDesignmönster\n\nProblem – Kontext – Lösning\n\n– generella, domän-agnostiska problem och lösningar\n\n– kända, praktiska, testade, bra lösningar\n\n– kända problem-specifika problem och fallgropar\n\nHjälper till i design-processen – för att hitta en bra, passande design – för att undvika vanliga misstag\n\n– för att undvika dålig, suboptimal implementation\n\nFörenklar kommunikation – i team-diskussioner – i dokumentation\n\n[Gamma et al]\n\nEtt designmönster\n\nNamn\n\n– Ett unikt namn som associerar till lösningen\n\nProblem och kontext\n\n– Beskrivning av problemet som ska lösas\n\n– Kontext och andra omständigheter som förutsätts för designen\n\nAbstrakt lösning'), 0.758635342), (Document(id='lecture-04_Systemarkitektur.pdf-p0-c2-eb3cfc38-de84-4a1b-8c0b-7ac60782d3db', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp0h_noo3k\\lecture-04_Systemarkitektur.pdf', 'start_index': 2748.0}, page_content='[Pfleeger]\n\nModellering av systemarkitektur\n\nRutor, text och pilar\n\n– Rita fritt och enkelt\n\nUML\n\n– Kodstruktur: Klassdiagram\n\n– Körnings-struktur: Komponentdiagram, Deployment-\n\ndiagram\n\n– Steg-för-steg\n\nUse case-diagram → Aktivitetsdiagram → Komponentdiagram (→ Klass d.) (Five-step-UML)\n\n[Pfleeger]\n\nKällor för designval\n\nReferensmodeller\n\n– generella eller domänspecifika\n\nAndra liknande system\n\nErfarenhet\n\nKonventioner och idiom\n\nDesign Patterns\n\n(Emergent design)\n\n[Pfleeger]\n\nStilar och strategier\n\nHög-nivå strukturer och mönster\n\n– inkompletta, generella mallar\n\n– välkända egenskaper\n\nKombinera stilar till ett komplett system\n\n– i olika delar av systemet\n\n– på olika nivåer i systemet\n\n[Pfleeger]\n\nPipe-and-Filter\n\nPrinciper\n\n– Standardiserat data-format och filter-principer\n\n– Stödjer dynamisk och statisk konfiguration\n\nEgenskaper\n\n– Återanvändbarhet, anpassning, beteendejustering\n\n– Mindre flexibilitet i data-format och filter\n\nFilter\n\nFilter\n\nKälla\n\nFilter\n\nFilter\n\nFilter\n\nFilter\n\nAvlopp\n\n[Pfleeger]\n\nPublish-Subscribe\n\nPrinciper\n\n– en komponent publicerar data andra tar emot\n\n(publicist → prenumerant)\n\nEgenskaper\n\n– utbyggbart och främjar återanvändning av moduler\n\n– skicka och synkronisera data kan vara dyrt\n\nKomponent\n\nKomponent\n\nKomponent\n\nKomponent\n\n[Pfleeger]\n\nKlient-Server\n\nPrinciper\n\n– Förfrågan → svar\n\n– Asymmetrisk förhållande, stjärn-arkitektur\n\nEgenskaper\n\n– Centraliserad kontroll\n\n– Potentiell flaskhals och enskild svag punkt'), 0.7577273250000001), (Document(id='lecture-06_ModulOchProgramDesign_uppgifter.pdf-p0-c0-f1c72fc4-13a3-4a14-8ee6-f2125244ca53', metadata={'relative_path': 'Fö6\\lecture-06_ModulOchProgramDesign_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmphk31jlex\\lecture-06_ModulOchProgramDesign_uppgifter.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\n\nModul- och programdesign\n\nVad har vi gjort och vad ska vi göra?\n\nVi har\n\nInte kodat. Vi har applicerat YAGNI (You ain’t gonna need it) • Gjort en rad övningar för att förstå vad systemet behöver göra och vilka delar som kan behövas\n\nSyfte idag\n\n• Ge möjlighet att applicera det vi lärt oss hitintills\n\nFörstå hur viktiga designprinciper och strategier kan appliceras\n\nGenom att\n\nDesigna en kaffebryggare\n\nDesignstrategier för att bygga system\n\nOftast kombination av tekniker\n\n– Top-down – dekomposition, rekursiv uppdelning – Bottom-up – syntes av bitar som behövs – Outside-in – börja med gränssnittet – Slices – delfunktionalitet hela vägen\n\nSteg-för-steg-tekniker\n\n– Five-step UML – UML-baserade design-steg\n\n[Pfleeger]\n\nThe SOLID Principles\n\nMnemonic SOLID (vanlig i Agile)\n\nS SRP\n\nSingle Responsibility Principle\n\n”A class should have one, and only one, reason to change.”\n\nO OCP Open Closed Principle\n\nL\n\nLSP\n\n”Software entities (classes, modules, functions, etc.) should be open for extension but closed for modification.” Liskov Substitutability Principle\n\nI\n\nISP\n\n”Alla implementationer av ett gränssnitt ska kunna användas på samma sätt.” Interface Segregation Principle\n\nD DIP\n\n“Clients should not be forced to depend upon interfaces that they do not use.” Dependency Inversion Principle\n\n“Använd gränssnitt för att minska koppling mellan klasser.”\n\nÄr det någon designprincip som bryts?'), 0.757052332)]
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\ufb01' in position 2514: character maps to <undefined>
Call stack:
  File "<string>", line 1, in <module>
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 135, in _main
    return self._bootstrap(parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 314, in _bootstrap
    self.run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\_subprocess.py", line 80, in subprocess_started
    target(sockets=sockets)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\server.py", line 66, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 641, in run_until_complete
    self.run_forever()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 608, in run_forever
    self._run_once()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1936, in _run_once
    handle._run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 84, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\protocols\websockets\websockets_impl.py", line 243, in run_asgi
    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)  # type: ignore[func-returns-value]
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\middleware\proxy_headers.py", line 60, in __call__        
    return await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\errors.py", line 152, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\cors.py", line 77, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 362, in handle
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 95, in app
    await wrap_app_handling_exceptions(app, session)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 93, in app
    await func(session)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\routing.py", line 383, in app
    await dependant.call(**solved_result.values)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\main.py", line 229, in ws_llm_conversation
    async for chunk in handle_conversation_stream(data):
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\services.py", line 109, in handle_conversation_stream
    logger.info(f"Found Documents: {found_documents}")
Message: "Found Documents: [(Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c2-2c50a1d2-37e5-4dff-96df-34ca90ff6935', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp3z8bu97e\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 2937.0}, page_content='Användbarhet – fokus på snabbhet snarare än enkelhet\\n\\n2. Vilken inverkan har varje attribut på systemarkitekturen?\\n\\nModifierbarhet – pipeline- och modulbaserat\\n\\nPrestanda – OpenGL/OpenCL integration\\n\\nAnvändbarhet – direkt tillgång till funktionalitet\\n\\nIdentifiera kvalitetsattribut\\n\\nIndividuellt eller grupper om 2-3 personer (ca 10 minuter)\\n\\n1. Vad är viktigt i ditt system, varför? https://en.wikipedia.org/wiki/List_of_system_quality_attributes - Modifierbarhet - Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – … ARKITEKTUR\\n\\nKOMMUNIKATION\\n\\n2. Fundera på:\\n\\nVilken inverkan har varje attribut på systemarkitekturen?\\n\\nSYSTEMARKITEKTUR\\n\\nArkitektur\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter\\n\\nRepresentationer för kod- eller data\\n\\nNivå 3: Systemkomponenter\\n\\nKomponenter i ett delsystem\\n\\nKVALITETSATTRIBUT\\n\\n(vad är typiskt för systemet?, begränsningar)\\n\\nARKITEKTUR\\n\\n(komponent- organisering och ihopsättning)\\n\\nSYSTEMARKITEKTUR\\n\\nKOMMUNIKATION\\n\\nArkitektur - Systemkontext\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nSystemkontext – Bankexempel\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nTips: https://app.diagrams.net/\\n\\nNotation:\\n\\nArkitektur - Systemet\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)'), 0.7858798204999999), (Document(id='TNM094_-_Exempel_individuell_rapport.pdf-p0-c6-42eec120-1407-4a67-b32e-954e1e06ef3d', metadata={'relative_path': 'Induviduell rapport\\\\TNM094 - Exempel individuell rapport.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp1xq0gua3\\\\TNM094 - Exempel individuell rapport.pdf', 'start_index': 7437.0}, page_content='2.3 Grundläggande systemarkitektur\\n\\nI stora drag kommer mjukvarusystemet vara uppdelat i en mobilapplikation som slutanvändaren an- vänder, samt en ett trädgårdsinformations-system, som applikationen kommunicerar med. I ﬁgur 2.1 ﬁnns ett kontext-diagram över kopplingen mellan de olika parterna.\\n\\nBeteendet hos användaren men även produkten är osäkert, och därmed och mängden och frekvensen av traﬁk som applikationen kommer att ha. Av andledningen att enkelt kunna skala upp produkten utefter hur utbredd användningen är, och att frigöra behovet av underhåll av egna servrar, så kommer moln-lösningen AWS användas som plattform för mjukvarusystemet [2]. Med undantag för själva mobilapplikationen, som kommer erbjudas via Google Play och App Store som tidigare nämnt. Sy- stemet kommer ha en så kallad serverlös back end, vilket är en passande lösning för en mobil-backend [2]. Andra Moln-baserade lösningar ﬁnns också och för projektets syfte hade också Microsoft Azure varit passande.\\n\\nBack end:en kan med fördel uppdelas i mikrotjänster för att enkelt kunna separera produktområden, men även kunna ha tätare och mindre riskfyllda releaser för varje enskild mikrotjänst. Det möjliggör även att lätt kunna bygga på med ﬂer tjänster - om det skulle visa sig att machine learning behövs för att prediktera bevattningsschema är det lätt att lägga till en ny mikrotjänst. Slutligen möjliggör det även för olika skalning av de olika tjänsterna beroende på belastning [6].'), 0.7785545), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c3-c092a183-bc86-43c6-a5bf-16516c52359d', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp3z8bu97e\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 4344.0}, page_content='Typer av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter\\n\\nRepresentationer för kod- eller data\\n\\nArkitektur - Banksystemet\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter\\n\\nRepresentationer för kod- eller data\\n\\nNotation:\\n\\nArkitektur - Systemet\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter\\n\\nRepresentationer för kod- eller data\\n\\nARKITEKTUR\\n\\n(komponent- organisering och ihopsättning)\\n\\nKVALITETSATTRIBUT\\n\\nKOMMUNIKATION\\n\\n(vad är typiskt för systemet?, begränsningar)\\n\\nSYSTEM- ARKITEKTUR\\n\\nArkitektur - Banksystemet\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter\\n\\nRepresentationer för kod- eller data\\n\\nARKITEKTUR\\n\\n(komponent- organisering och ihopsättning)\\n\\nKVALITETSATTRIBUT\\n\\nKOMMUNIKATION\\n\\n(vad är typiskt för systemet?, begränsningar)\\n\\nSYSTEM- ARKITEKTUR\\n\\nNotation:\\n\\nÅterkoppling\\n\\nhttps://www.mentimeter.com/\\n\\nVad fungerade bra?\\n\\nVad kan ändras till nästa gång?'), 0.7772650720000001), (Document(id='lecture-04_Systemarkitektur.pdf-p0-c3-e005be2c-541a-4f6e-a973-3abf96d992e0', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp0h_noo3k\\\\lecture-04_Systemarkitektur.pdf', 'start_index': 4143.0}, page_content='– Centraliserad kontroll\\n\\n– Potentiell flaskhals och enskild svag punkt\\n\\n(single-point-of-failure – SPOF)\\n\\nServer\\n\\nKlient\\n\\nKlient\\n\\nKlient\\n\\n[Pfleeger]\\n\\nPeer-to-Peer\\n\\nPrinciper\\n\\n– alla komponenter kommunicerar direkt\\n\\nEgenskaper\\n\\n– låg fördröjning, ingen flaskhals\\n\\n– svårt att kontrollera och synkronisera\\n\\n– svårt att förändra och avlusa\\n\\nNode\\n\\nNode\\n\\nNode\\n\\nNode\\n\\nNode\\n\\n[Pfleeger]\\n\\nLayering\\n\\nPrinciper\\n\\n– hierarkisk struktur baserad på abstraktion\\n\\n– tillåter att anrop hoppar över ett lager\\n\\nEgenskaper\\n\\n– förenklat gränssnitt och struktur\\n\\n– förenklar återanvändning av moduler\\n\\n– möjligen viss negativ effekt på prestandan\\n\\nApplikation\\n\\nApplikation\\n\\nTransport\\n\\nTransport\\n\\nNätverk\\n\\nNätverk\\n\\nFysiskt lager\\n\\nFysiskt lager\\n\\n[Pfleeger]\\n\\nThree-/Multi-tier System\\n\\nPrinciper\\n\\n– strikt uppdelat ansvar, ”kommunicera genom”\\n\\nEgenskaper\\n\\n– välkända och separerade ansvar och funktioner\\n\\nGUI\\n\\nKlient\\n\\nKlient\\n\\nLogik\\n\\nServer\\n\\nData\\n\\nDatabase\\n\\nKlient\\n\\n[Pfleeger]\\n\\nModel-View-Controller\\n\\nPrinciper\\n\\n– uppdelning av ansvar, riktad kommunikation\\n\\nEgenskaper\\n\\n– renare programkod, enklare att hitta fel\\n\\n– enkelt att lägga till flera vyer av en datamodell\\n\\nViewView View\\n\\nController Controller\\n\\nModel Model\\n\\nKvalitetsattribut\\n\\nHur vet vi om en arkitektur är bra? • Viktiga aspekter hos en design – Hög sammanhållning, låg koppling – Modifierbarhet – Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – Affärsmål\\n\\n[Pfleeger]\\n\\nSammanhållning och koppling'), 0.7757454214999999), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c1-df3d2670-5fa2-4746-a3b4-987baf567101', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp3z8bu97e\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 1438.0}, page_content='Abstrakt lösning\\n\\n– Modeller och beskrivningar av en programdesign\\n\\nKonsekvenser\\n\\n– Kända egenskaper och konsekvenser\\n\\nImplementationsdetaljer\\n\\n– Särskilda överväganden, variationer, fallgropar, etc.\\n\\n[Gamma et al]\\n\\nModel-View-Controller\\n\\nProblem • Vill ha flera gränssnitt med\\n\\nModel\\n\\nsamma logik\\n\\nUppdaterar\\n\\nLösning • Separera data, vy och logik Konsekvenser + Flera vyer av samma data\\n\\nView\\n\\n+ Kan byta ut interaktion\\n\\nKomplicerad synkronisering\\n\\nhttps://martinfowler.com/eaaDev/uiArchs.html\\n\\nhttps://martinfowler.com/eaaDev/uiArchs.html\\n\\nUser\\n\\nÄndrar\\n\\nController\\n\\nUndersök arkitekturmönster\\n\\nGruppuppgift\\n\\n1. Varje person fördjupar sig i ett mönster.\\n\\n2. Förklara för de andra i gruppen och diskutera gemensamt:\\n\\n• Motivera varför det gör det eller inte gör det\\n\\nPassar mönstret in på ert system, var i så fall?\\n\\nFörslag på mönster\\n\\nPipe-and-filter\\n\\nKlient-server\\n\\nLayering\\n\\nPeer-to-peer\\n\\nPlug-in\\n\\nModel-View-Controller\\n\\nSe även:\\n\\nPublish-subscribe/Event-driven\\n\\nhttps://en.wikipedia.org/wiki/List_of_software_architecture_styles_and_patterns\\n\\nPfleeger kapitel 5.4 (sidor 262 – 270)\\n\\nIdentifiera kvalitetsattribut\\n\\nUtgå från kravställning. Exempel: Inviwo\\n\\n”Som en visualiseringsexpert vill jag experimentera med olika typer av visualiseringsalgoritmer på min stationära eller bärbara dator”\\n\\n1. Vad är viktigt i ditt system, varför?\\n\\nModifierbarhet - används i väldigt olika typer av forskningsprojekt\\n\\nPrestanda – måste ha tillgång till hårdvara för att utveckla de algoritmer i världsklass'), 0.762940645), (Document(id='TNM094_-_Exempel_individuell_rapport.pdf-p0-c1-02e94384-7fe9-4177-9593-4ff85d3d2de8', metadata={'relative_path': 'Induviduell rapport\\\\TNM094 - Exempel individuell rapport.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp1xq0gua3\\\\TNM094 - Exempel individuell rapport.pdf', 'start_index': 1418.0}, page_content='2 System och tekniska lösningar\\n\\n2.1 Grundläggande, initiala krav och systembegränsningar\\n\\n. . . . . . . . . . . . . . . .\\n\\n2.2 Målplattform .\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n2.3 Grundläggande systemarkitektur . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n2.4 Standarder .\\n\\n. .\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n2.5 Utvecklingsmiljö .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n3 Projekthantering\\n\\n3.1 Utvecklingsmetodik .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n3.2 Organisation . .\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n3.3 Tidsplan .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n3.4 Milstolpar och leverabler .\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4 Rutiner och principer\\n\\n4.1 Rutiner\\n\\n. .\\n\\n. .\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.2 Mötesprinciper\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.3 Versionshantering, -system och rutiner . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.4 Kravhantering och -spårning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.5 Dokumentationsprinciper och rutiner . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n4.6 Kvalitetssäkring .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.'), 0.761686206), (Document(id='lecture-07_ImplementationDesignmonster_uppgifter.pdf-p0-c5-1a6a0b63-9229-43ce-9daf-70e366b6418b', metadata={'relative_path': 'Fö7\\\\lecture-07_ImplementationDesignmönster_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpzegua28h\\\\lecture-07_ImplementationDesignmönster_uppgifter.pdf', 'start_index': 7053.0}, page_content='Synchronization\\n\\n– Observer\\n\\n– Scoped Lock\\n\\n– Thread-safe Interface\\n\\n[Gamma et al, Schmidt et al]\\n\\nFacade\\n\\nDelar\\n\\nFasad\\n\\n– Känner till subsystemets klasser och ansvar\\n\\n– Enkapsulerar objekt, tillstånd och kopplingar (handles)\\n\\n– Översätter och vidarebefordrar anrop\\n\\nSubsystemklasser\\n\\n– Gör det faktiska arbetet\\n\\nFacade\\n\\n[Gamma et al]\\n\\nUppgift – Tävling Lös problem med designmönster\\n\\nVälj ut så många designmönster ni hinner, tillsammans i grupp om max 3-4 personer.\\n\\nTips på mönster: Adapter, Command pattern, Decorator, Object pool, Observer, Facade, Factory pattern, Flyweight, Strategy pattern, Template method pattern\\n\\nhttps://refactoring.guru/design-patterns/catalog\\n\\nhttps://en.wikipedia.org/wiki/Software_design_pattern\\n\\nPresentera varje mönster för varandra och diskutera om det passar till ett eller flera problem på nästa slide.\\n\\nEra svar ska innehålla mönstrets namn samt motivering till hur det passar in.\\n\\nFörslagsvis presenteras dessa aspekter för varje designmönster:\\n\\nNamn: Finns ett unikt namn som associerar till lösningen? Problem och kontext\\n\\n– Beskrivning av problemet som ska lösas\\n\\n– Kontext och andra omständigheter som förutsätts för designen\\n\\nAbstrakt lösning\\n\\n– Beskriv hur designmönstret löser problemet\\n\\nKonsekvenser\\n\\n– Kända egenskaper och konsekvenser\\n\\nImplementationsdetaljer\\n\\n– Särskilda överväganden, variationer, fallgropar, etc.\\n\\n1. Du behöver läsa in olika typer av filer men vill inte vara beroende av att veta vilka typer av filinläsare som finns i din kod.'), 0.7609662115), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c0-a5b66ee3-91cc-42ff-a62f-1e73bcd69161', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp3z8bu97e\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\\n\\nSystemarkitektur\\n\\nVad har vi gjort och vad ska vi göra?\\n\\nVi har\\n\\nFått en överblick över systemutvecklingens delar\\n\\nUndersökt utvecklingsmetodiker och deras för/nackdelar\\n\\nTestat på att samla in krav och diskuterat vad som är lätt/svårt\\n\\nGenomfört en Scrum-sprint\\n\\nSyfte idag\\n\\nSkapa förståelse för vanliga sätt att designa system (mönster)\\n\\nSkapa förståelse för prioriteringar i utvecklingen av systemet\\n\\nSkapa en överblick över systemet\\n\\nFå praktisk erfarenhet av att modellera ett system på hög nivå\\n\\nGenom att\\n\\nLära ut arkitekturmönster till er gruppkamrater\\n\\nIdentifiera kvalitetsattribut\\n\\n•\\n\\nRita C4 diagram\\n\\nKVALITETSATTRIBUT\\n\\n(vad är typiskt för systemet?, begränsningar)\\n\\nARKITEKTUR\\n\\n(komponent- organisering och ihopsättning)\\n\\nSYSTEMARKITEKTUR\\n\\nKOMMUNIKATION\\n\\nDesignmönster\\n\\nProblem – Kontext – Lösning\\n\\n– generella, domän-agnostiska problem och lösningar\\n\\n– kända, praktiska, testade, bra lösningar\\n\\n– kända problem-specifika problem och fallgropar\\n\\nHjälper till i design-processen – för att hitta en bra, passande design – för att undvika vanliga misstag\\n\\n– för att undvika dålig, suboptimal implementation\\n\\nFörenklar kommunikation – i team-diskussioner – i dokumentation\\n\\n[Gamma et al]\\n\\nEtt designmönster\\n\\nNamn\\n\\n– Ett unikt namn som associerar till lösningen\\n\\nProblem och kontext\\n\\n– Beskrivning av problemet som ska lösas\\n\\n– Kontext och andra omständigheter som förutsätts för designen\\n\\nAbstrakt lösning'), 0.758635342), (Document(id='lecture-04_Systemarkitektur.pdf-p0-c2-eb3cfc38-de84-4a1b-8c0b-7ac60782d3db', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp0h_noo3k\\\\lecture-04_Systemarkitektur.pdf', 'start_index': 2748.0}, page_content='[Pfleeger]\\n\\nModellering av systemarkitektur\\n\\nRutor, text och pilar\\n\\n– Rita fritt och enkelt\\n\\nUML\\n\\n– Kodstruktur: Klassdiagram\\n\\n– Körnings-struktur: Komponentdiagram, Deployment-\\n\\ndiagram\\n\\n– Steg-för-steg\\n\\nUse case-diagram → Aktivitetsdiagram → Komponentdiagram (→ Klass d.) (Five-step-UML)\\n\\n[Pfleeger]\\n\\nKällor för designval\\n\\nReferensmodeller\\n\\n– generella eller domänspecifika\\n\\nAndra liknande system\\n\\nErfarenhet\\n\\nKonventioner och idiom\\n\\nDesign Patterns\\n\\n(Emergent design)\\n\\n[Pfleeger]\\n\\nStilar och strategier\\n\\nHög-nivå strukturer och mönster\\n\\n– inkompletta, generella mallar\\n\\n– välkända egenskaper\\n\\nKombinera stilar till ett komplett system\\n\\n– i olika delar av systemet\\n\\n– på olika nivåer i systemet\\n\\n[Pfleeger]\\n\\nPipe-and-Filter\\n\\nPrinciper\\n\\n– Standardiserat data-format och filter-principer\\n\\n– Stödjer dynamisk och statisk konfiguration\\n\\nEgenskaper\\n\\n– Återanvändbarhet, anpassning, beteendejustering\\n\\n– Mindre flexibilitet i data-format och filter\\n\\nFilter\\n\\nFilter\\n\\nKälla\\n\\nFilter\\n\\nFilter\\n\\nFilter\\n\\nFilter\\n\\nAvlopp\\n\\n[Pfleeger]\\n\\nPublish-Subscribe\\n\\nPrinciper\\n\\n– en komponent publicerar data andra tar emot\\n\\n(publicist → prenumerant)\\n\\nEgenskaper\\n\\n– utbyggbart och främjar återanvändning av moduler\\n\\n– skicka och synkronisera data kan vara dyrt\\n\\nKomponent\\n\\nKomponent\\n\\nKomponent\\n\\nKomponent\\n\\n[Pfleeger]\\n\\nKlient-Server\\n\\nPrinciper\\n\\n– Förfrågan → svar\\n\\n– Asymmetrisk förhållande, stjärn-arkitektur\\n\\nEgenskaper\\n\\n– Centraliserad kontroll\\n\\n– Potentiell flaskhals och enskild svag punkt'), 0.7577273250000001), (Document(id='lecture-06_ModulOchProgramDesign_uppgifter.pdf-p0-c0-f1c72fc4-13a3-4a14-8ee6-f2125244ca53', metadata={'relative_path': 'Fö6\\\\lecture-06_ModulOchProgramDesign_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmphk31jlex\\\\lecture-06_ModulOchProgramDesign_uppgifter.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\\n\\nModul- och programdesign\\n\\nVad har vi gjort och vad ska vi göra?\\n\\nVi har\\n\\nInte kodat. Vi har applicerat YAGNI (You ain’t gonna need it) • Gjort en rad övningar för att förstå vad systemet behöver göra och vilka delar som kan behövas\\n\\nSyfte idag\\n\\n• Ge möjlighet att applicera det vi lärt oss hitintills\\n\\nFörstå hur viktiga designprinciper och strategier kan appliceras\\n\\nGenom att\\n\\nDesigna en kaffebryggare\\n\\nDesignstrategier för att bygga system\\n\\nOftast kombination av tekniker\\n\\n– Top-down – dekomposition, rekursiv uppdelning – Bottom-up – syntes av bitar som behövs – Outside-in – börja med gränssnittet – Slices – delfunktionalitet hela vägen\\n\\nSteg-för-steg-tekniker\\n\\n– Five-step UML – UML-baserade design-steg\\n\\n[Pfleeger]\\n\\nThe SOLID Principles\\n\\nMnemonic SOLID (vanlig i Agile)\\n\\nS SRP\\n\\nSingle Responsibility Principle\\n\\n”A class should have one, and only one, reason to change.”\\n\\nO OCP Open Closed Principle\\n\\nL\\n\\nLSP\\n\\n”Software entities (classes, modules, functions, etc.) should be open for extension but closed for modification.” Liskov Substitutability Principle\\n\\nI\\n\\nISP\\n\\n”Alla implementationer av ett gränssnitt ska kunna användas på samma sätt.” Interface Segregation Principle\\n\\nD DIP\\n\\n“Clients should not be forced to depend upon interfaces that they do not use.” Dependency Inversion Principle\\n\\n“Använd gränssnitt för att minska koppling mellan klasser.”\\n\\nÄr det någon designprincip som bryts?'), 0.757052332)]"
Arguments: ()
2025-05-07 10:12:43,059 - INFO - -----------------------------

client_session: <aiohttp.client.ClientSession object at 0x000001C8BE407250>
2025-05-07 10:18:09,785 - INFO - Last Question: Hur mycket får jag använda AI i den här kursen?
2025-05-07 10:18:09,786 - INFO - Conversation: [ConversationData(id='cd080f7e-191c-42ff-ad12-a49e6ea73bef', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-dbc23668-1bb9-42b7-a961-7be19bac021d', role='assistant', content='Jag kan hjälpa dig med frågor och information relaterad till kursen TNM094 på Linköpings universitet. Det kan inkludera ämnen som tentamina, kursmaterial, studietips och annat som rör din utbildning. Om du har specifika frågor, tveka inte att ställa dem!'), ConversationData(id='edcd060f-4ca4-4f68-863c-dd7f704216ef', role='user', content='Vad ska ingå i den individuella rapporten?'), ConversationData(id='run-72a7ae12-4c18-4d5c-b044-11d7d12515e2', role='assistant', content='Den individuella rapporten för TNM094 ska innehålla följande delar:\n\n1. **Teknisk utredning**: En välmotiverad utredning av ett problem relaterat till projektet, där du diskuterar olika tekniska lösningar eller arbetssätt.\n\n2. **Projektplan**: En genomarbetad plan för hur projektet ska genomföras, där du kan inkludera egna visioner och premisser.\n\n3. **Reflektion**: En individuell reflektion över din roll i projektet, vad som fungerade väl och vad som kan förbättras, samt eventuella förändringar som gjorts under projektet.\n\n4. **Konsekvenser**: Beskriv arbetets konsekvenser för berörd målgrupp och eventuellt för forskare och praktiker.\n\n5. **Framtida arbete**: Konkreta och väl genomtänkta förslag för framtida studier eller arbete om det skulle finnas mer tid.\n\n6. **Litteraturförteckning**: Referenser som använts i rapporten.\n\n7. **Bilagor**: Eventuella bilagor som gör rapporten mer komplett, exempelvis diagram eller systembeskrivningar.\n\nKom ihåg att beakta strukturen och språkliga krav för rapporten!'), ConversationData(id='f4065578-e8ca-4875-84b7-4d807cb61c95', role='user', content='Hur ska jag lägga upp kodstrukturen för lab2?'), ConversationData(id='run-772e71ef-a93b-4210-bcd9-4594a3c71323', role='assistant', content='Kodstrukturen för laboration 2 (lab2) i TNM094 bör följa en logisk och organiserad uppdelning för att underlätta både läsbarhet och underhåll. Här är några förslag på hur du kan lägga upp kodstrukturen:\n\n1. **Moduler och paket**: Dela upp din kod i olika moduler eller paket för att gruppera relaterade funktioner. T.ex. kan du ha moduler för användargränssnitt, databehandling och affärslogik.\n\n2. **Klass- och metodstruktur**: Använd klassbaserad programmering när det är lämpligt. Definiera klasser för olika entiteter i ditt system, och se till att varje klass har tydligt avgränsade metoder som utför specifika uppgifter.\n\n3. **Namngivning**: Använd en konsekvent och beskrivande namngivning för klasser, metoder och variabler. Detta gör koden enklare att förstå.\n\n4. **Kommentarer**: Kommentera viktig kod och komplexa delar för att förklara dess syfte och logik. Det underlättar för andra (och för dig själv) att läsa och förstå koden senare.\n\n5. **Strukturera enligt funktionalitet**: Se till att koden är organiserad efter funktionaliteten. Till exempel: \n   - Inmatning och hantering av användarinformation (input-modul)\n   - Behandling av data och affärslogik (logic-modul)\n   - Utmatning och presentation av resultat (output-modul)\n\n6. **Versionshantering**: Genomför regelbundna commits om du använder git. Detta gör att du kan hålla koll på ändringar, och underlätta samarbete om ni är flera som arbetar på samma projekt.\n\n7. **Testning**: Om möjligt, implementera testfall för dina metoder. Det hjälper till att säkerställa att koden fungerar som den ska och att eventuella förändringar inte bryter funktionaliteten.\n\nGenom att följa dessa riktlinjer kan du skapa en välstrukturerad kodbas som är både lättförståelig och enkel att underhålla.'), ConversationData(id='6afac99c-b476-49cd-a884-c61a90f948a0', role='user', content='Vem är examinator i kursen?'), ConversationData(id='run-f92a6d87-f5e2-4e55-92b2-7b0c2649e867', role='assistant', content='Examinatorn i kursen TNM094 är Victoria Pihlgren. Hon är ansvarig för bedömningar och kan kontaktas om du har frågor eller behöver klargöranden angående kursens innehåll och krav.'), ConversationData(id='9157b148-df94-46bb-96b6-2226d389e25d', role='user', content='Kan du förklara systemarkitekturen för kaffemaskinen?'), ConversationData(id='run-a85ce15b-0d73-4009-9cbb-38121308b4a8', role='assistant', content='Självklart! Här är en övergripande förklaring av systemarkitekturen för en kaffemaskin, uppdelad i olika nivåer enligt C4-modellen som används för att modellera systemarkitektur:\n\n### Nivå 1: Systemkontext\nI denna nivå identifierar vi huvudaktörerna och hur de interagerar med kaffemaskinen:\n- **Användare**: Kunder som vill brygga kaffe.\n- **Kaffemaskin**: Huvudsystemet som hanterar hela processen av att brygga kaffe.\n- **Underhållspersonal**: Personer ansvariga för service och reparation av maskinen.\n- **Eventuella externa system**: Till exempel en mobilapplikation för fjärrstyrning, om det är en smart kaffemaskin.\n\n### Nivå 2: Systemet (containers)\nDetta steg definierar de huvudsakliga komponenterna i kaffemaskinen:\n- **Användargränssnitt (UI)**: En panel där användaren kan välja kaffestyrka, typ av kaffe, och starta bryggningen.\n- **Kontrollenhet**: En mikroprocessor som hanterar logiken för bryggningsprocessen, inklusive timer, temperatur, och vattenflöde.\n- **Bryggsystem**: Den fysiska enheten som brygger kaffet, inklusive vattenbehållare, värmare och filtreringssystem.\n- **Kommunikationsmodul**: Om det finns fjärrstyrning eller övervakning, en modul för trådlös kommunikation.\n\n### Nivå 3: Systemkomponenter\nHär bryter vi ner de olika komponenterna i containers ytterligare:\n- **UI-komponenter**:\n  - Knappar för val av kaffe.\n  - Display för feedback till användaren.\n- **Kontrollenhet**:\n  - Sensorer för att mäta temperatur och vattennivå.\n  - Logiska funktioner för att hantera användarens val.\n- **Bryggsystem**:\n  - Vattenbehållare.\n  - Värmesystem för att hetta upp vattnet.\n  - Filter och kanna för att fånga upp det bryggda kaffet.\n\n### Kvalitetsattribut\nUtöver strukturen är det viktigt att överväga kvalitetsattribut:\n- **Modifierbarhet**: Systemet ska enkelt kunna uppgraderas med nya recept eller funktioner.\n- **Prestanda**: Snabb bryggning och uppvärmning av vatten för att möta användarens behov.\n- **Användbarhet**: Gränssnittet ska vara intuitivt och lätt att använda.\n\nGenom att följa denna arkitektur kan kaffemaskinen designas för att vara effektiv och användarvänlig, vilket säkerställer en bra användarupplevelse.'), ConversationData(id='0ca53989-cf92-458d-aac9-3c665579507b', role='user', content='Hur mycket får jag använda AI i den här kursen?')]
2025-05-07 10:18:09,789 - INFO - Number of Found Documents: 2
2025-05-07 10:18:09,789 - INFO - Found Documents: [(Document(id='lecture-00_Kursinformation.pdf-p0-c0-96f31a5b-95f0-4462-a05f-8c6197f9178c', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\n\nKursinformation 2025\n\nDaniel Jönsson\n\nMen först lite om mig\n\nDenna kurs\n\nProjekthantering, processer och rutiner\n\nSkapa system som kunden vill ha, i tid och inom budget • Förstå vidden och betydelsen av systemutveckling\n\nPraxis, erfarenheter och riktlinjer • Fyll din personliga verktygslåda Medietekniskt kandidatarbete\n\nVisa på medietekniskt kunskap och ingenjörsmässighet\n\nKräver stort personligt ansvar!\n\nKommunicera med examinatorn om något känns oklart • Läs instruktioner, lisam-uppdatering och e-brev\n\nVad är Medietekniskt?\n\nNi har läst\n\n25 kurser på 60 hp + 60 hp + 30 hp = 150 hp Varav minst 60 hp inom medietekniska ämnen (Datorgrafik, visualisering, VR-teknik, elektronisk publicering, ljud, bildbehandling, etc.)\n\nDags att ta fram\n\nGömd kunskap och outnyttjade förmågor • Glömd kurslitteratur, länkar och kompendier\n\nForsknings- och utforskningslustan\n\nDenna kurs\n\nTNM094, 18 hp = 9 hp / termin = 60 % fart\n\nUPG1 Uppsats (1,5 hp U,G)\n\nIndividuell rapport över en egen plan för ett tilldelat projekt. LAB1 Laborationer (2 hp U,G) Övningar genomförs i grupper om två alternativt individuellt. PRA1 Projekt (14 hp U,G) Genomförs i grupper om 4–8. • UPG2 Opponering (0,5 hp U,G)\n\nIndividuell, skriftlig opponering baserad på projektrapporten.\n\nDenna kurs\n\nParallell med\n\nTNM119 Introduktion till Arificiell Intelligens, 6 hp = 40 % fart TND004 Datastrukturer, 6 hp = 40 % fart\n\nTNM094 - 60 % av schemat'), 0.771897584), (Document(id='lecture-00_Kursinformation.pdf-p0-c5-667fda3d-827f-4bae-a9b7-0f9cdc51a33f', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpp1jad715\\lecture-00_Kursinformation.pdf', 'start_index': 7085.0}, page_content='Projektdokumentation och –rapporter\n\nUpphovsrätt gäller även här; följ lagar och förordningar\n\nPlagiering: vad är ok att återanvända i den här kursen? VIKTIGT!!!\n\nIndividuell rapport -> gemensam projektplan (ok)\n\nGemensam projektplan -> Projektrapport (ok)\n\nIndividuell rapport <- gemensam projektplan (ej ok, om inte DU helt har\n\nskrivit texten)\n\nEtik och regler\n\nProjekt\n\nOm att ta programkod från internet Följ lagar och förordningar Köp licenser eller använd OSS enligt licens\n\nNi ansvarar för kvalitén hos slutprodukten\n\nOm arbetsbelastning och slackers\n\nVi accepterar inte slackers\n\nAlla ska hjälpas åt att balansera arbetsbelastningen\n\nFölj överenskomna deadlines\n\nSummerad git-historik ska rapporteras i slutrapporten\n\nKontakta kursledningen om ni inte kan komma överens!\n\nAnvändning av generativ AI\n\nTillåten nivå i TNM094\n\nTänk på källhantering\n\nAnvänd inte ChatGPT som källa\n\nTexten ska koppla till projektet\n\nBedömningskriterier (se lisam/kursinformation)\n\nLärandemål skapa och analysera tekniska lösningar för att lösa ett givet problem inom området medieteknik (exempelvis publicering, ljud- och bildteknik, datorgrafik och visualisering).\n\nL1\n\nKriterier för betyg G - Beskriver översiktligt krav som ligger till grund för givet problem.\n\nBeskriver översiktligt en teknisk lösning till givet problem.\n\nBeskriver en plan för att lösa givet problem.\n\nSkapar och implementerar en teknisk lösning på ett väldefinierat problem.'), 0.766100943)]
2025-05-07 10:18:09,790 - INFO - -----------------------------

