client_session: <aiohttp.client.ClientSession object at 0x000001456E6E78D0>
No relevant docs were retrieved using the relevance score threshold 0.75
2025-05-07 10:49:26,231 - INFO - Last Question: Vad kan du hjälpa till med?
2025-05-07 10:49:26,241 - INFO - Conversation: [ConversationData(id='a45dd4d9-183c-40f4-8be1-8f94b959ae03', role='user', content='Vad kan du hjälpa till med?')]
2025-05-07 10:49:26,241 - INFO - Number of Found Documents: 0
2025-05-07 10:49:26,241 - INFO - Found Documents: []
2025-05-07 10:49:26,241 - INFO - -----------------------------

client_session: <aiohttp.client.ClientSession object at 0x000001456E88E7D0>
2025-05-07 10:51:04,837 - INFO - Last Question: Vad ska ingå i den individuella rapporten?
2025-05-07 10:51:04,837 - INFO - Conversation: [ConversationData(id='a45dd4d9-183c-40f4-8be1-8f94b959ae03', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-c1cc2e79-e05e-49bb-b074-3a25b51ab773', role='assistant', content='Jag kan hjälpa till med frågor kring kursen TNM094, ge information om kursinnehåll, studietips, resurser, samt allmänna frågor relaterade till Linköpings universitet. Om du har specifika frågor, dela gärna med dig av dem!'), ConversationData(id='243ea137-a8bd-4dd8-ba2d-e565fa80fa83', role='user', content='Vad ska ingå i den individuella rapporten?')]
2025-05-07 10:51:04,838 - INFO - Number of Found Documents: 10
2025-05-07 10:51:04,839 - INFO - Found Documents: [(Document(id='instruktioner-individuell_rapport-x.pdf-p0-c0-0b09c7e5-0d6e-49c1-88e0-cde354038d16', metadata={'relative_path': 'Induviduell rapport\\instruktioner-individuell_rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpjk7zg8l1\\instruktioner-individuell_rapport-x.pdf', 'start_index': 0.0}, page_content='Individuell rapport\n\nSyfte\n\nDet finns flera syften med denna examinationsform. Främsta syftet är att locka fram reflektion över hur teorierna appliceras i ett verkligt projekt och omvandlas till praktik samt lägga en kunskaps- mässig grund inför projektarbetet och den gemensamma utformningen av projektplanen. Dessutom används den som individuell kunskapskontroll för att säkerställa att varje individ uppnått kravet för godkänt i kursen och att de uppnått en förståelse nödvändig för projektet.\n\nObservera att kursledningen förbehåller sig rätten att vidta åtgärder utifrån resultatet på den individuella rapporten för att säkerställa kvalitén på projekten.\n\nUppgiften\n\nUppgiften är att individuellt utifrån sin egen uppfattning av det tilldelade projektet göra en välmotiverad teknisk utredning för ett problem relaterat utförandet av projektet samt skapa en genomarbetad plan för hur projektet skulle kunna genomföras. Du har frihet att ta in egna visioner och införa premisser som inte finns i det egna teamet. Planen och motiveringen till alla beslut beskrivs i en regelrätt rapport. Eftersom det gemensamma planen ännu inte har sammanställts, så baseras förslaget till stor del på den egna uppfattningen av projektet, egna val och beslut samt egen efterforskning, eventuellt efter diskussion med kund eller teammedlemmar.'), 0.8444189725), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c3-72037ab3-3aaf-4423-8a87-be6b5220bc82', metadata={'relative_path': 'Utvecklingsprojekt\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp_zln9aq2\\instruktioner-projekt-rapport-x.pdf', 'start_index': 1859.0}, page_content='kapitel, vad planerat arbete som också kommer att vara med i slutrapporten.)\n\nI bilagor:\n\nEn gemensam reflektion, på max två sidor, över hur det faktiska genomförandet av arbetet gick jämfört med planeringen av utvecklingsprocessen. Reflektera över hur väl eller ej fungerande de rutiner, processer samt projekterings och utvecklingsverktyg som planerats och använts var. Reflektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från er gemensamma och individuella rapporter.\n\nEn individuell reflektion, på max en sida, över varje persons roll i projektet.\n\nReflektera över vad som fungerade väl och vad som skulle kunna förbättras. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter.'), 0.8442752065), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c4-1f7d9a55-53a2-46f9-b3de-0f9bf1cda3ae', metadata={'relative_path': 'Utvecklingsprojekt\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp_zln9aq2\\instruktioner-projekt-rapport-x.pdf', 'start_index': 2504.0}, page_content='En individuell reflektion, på max en sida, över varje persons roll i projektet.\n\nReflektera över vad som fungerade väl och vad som skulle kunna förbättras. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter.\n\nEn lista över vilka som varit involverade i projektet, inom teamet och utanför, med en beskrivning av någonting som de, genom individuellt, självständigt arbete, bidragit med. Detta bör inte vara en lista över vilka rader kod eller dokument man skrivit utan kan bestå av en beskrivning av egna ansvarsområden, moduler man på egen hand arbetat med, eller andra beskrivningar som gruppen anser rättvist visar på varje medlems individuella bidrag. De flesta grupper arbetar både i grupp och individuellt, så en fungerande struktur är att beskriva både vilka gemensamma bidrag man varit delaktig i och vad man bidragit med självständigt arbete.\n\nMålgrupp Rapporten ska rikta sig till kollegerna i kursen; räkna med viss förståelse för utvecklingsprinciper och medietekniska ämnen; beskriv mer tydligt mindre kända detaljer som är viktiga för förståelsen för rapporten. Till exempel behövs ingen genomgång av Scrums alla olika principer eller vad ett designmönster är. Däremot kan man hänvisa till Scrum-roller vid reflektionen av hur gruppen har arbetat och ett designmönster kan behöva beskrivas ifall detaljer i systemets programdesign grundar sig på det.'), 0.84166798), (Document(id='mall_projekt-rapport.pdf-p0-c19-5bac815f-01b9-44ce-b464-5b4a1cf6ed5f', metadata={'relative_path': 'Utvecklingsprojekt\\mall_projekt-rapport.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpcpg7hl6t\\mall_projekt-rapport.pdf', 'start_index': 13159.0}, page_content='Här ska också arbetets konsekvenser för berörd målgrupp och eventuellt för forskare och praktiker beskrivas. Man kan också ha ett stycke eller avsnitt om framtida arbete där man beskriver vad man skulle vilja göra om man hade mer tid eller som rekommendationer för framtida studier eller exjobb. Om man har ett sådant stycke är det dock viktigt att det är konkreta och väl genomtänkta förslag som presenteras, snarare än vaga idéer.\n\nI det slutliga förslaget på projektrapport kan ni här kortfattat beskriva vad som mer är planerat att göra som möjligen kommer att komma med i slutrapporten.\n\n8\n\nLitteraturförteckning\n\n[1] Shari Lawrence Pﬂeeger och Joanne M. Atlee, Software Engineering, Fourth Edition, Interna-\n\ntional Edition, Pearson 2010\n\n[2] Författare, Titel, Organisation, yyyy-mm-dd, hämtad: yyyy-mm-dd\n\nhttp://länk/till/sidan\n\n9\n\nBilaga A\n\nReﬂektion över systemutvecklingsprocessen\n\nMax 2 sidor exklusive bilder (1000 ord).\n\nReﬂektera gemensamt över hur er faktiska arbetsprocess gick till i jämförelse med hur ni planerat att arbeta. Reﬂektera över hur väl eller ej fungerande de rutiner, processer samt projekterings- och utvecklingsverktyg som planerats och använts var. Reﬂektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från de individuella rapporterna.\n\nA.1 Person A\n\nMax 1 sida per person.'), 0.8399133085), (Document(id='lecture-00_Kursinformation.pdf-p0-c7-641cce54-efe7-4fe4-b0a1-26e5dd532dc1', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 5042.0}, page_content='En rapport\n\n…som i detalj beskriver den personliga planen och motiverar val utifrån teorier och praxis\n\nIndividuell rapport\n\nExamination\n\n‒ Språklig bedömning av ISV/Språkverkstaden\n\nBra stavning, grammatik, flöde och struktur krävs\n\nSpråkligt godkänt krävs för godkänt på uppgiften\n\n‒ Teknisk bedömning av tekniskt lärarlag\n\nRättas enligt mall som ni har tillgång till och ska använda\n\n‒ Komplettering\n\nEn andra rättning av komplettering sker under HT1\n\nIndividuella rapporter -> Gemensam plan\n\nInnan ett projekt påbörjas behövs en plan… • Skapa en gemensam projektplan\n\nKom överens utifrån era individuella planer\n\nUtnyttja teorier för att skapa en bra plan\n\nViktigt att tänka på\n\nAlla projekt ska följa iterativ struktur Alla projekt ska använda principer för systemutveckling Alla är utvecklare med bisysslor och ansvarsområden En enda person har yttersta ansvar för varje viktig aspekt Alla förändringar i plan och organisation ska ske explicit Spara material kontinuerligt dokumentera vad som gjorts varje vecka för att kunna jämföra med ursprungsplanen\n\nAvstämning\n\nMöten med ledningsgruppen • Handledning av informell karaktär • Diskuterar vad som gjorts, rutiner och eventuella problem Andra avstämningen: Ta med gemensam projektplan\n\nOpponering\n\nOpponering på projektrapport\n\n0,5 hp ≈ 13 h arbetstid baserad på rapporten – en tidig men fullständig version används för att bedöma teknisk förståelse\n\nÅterkoppling till teamet\n\n‒\n\nom använda utvecklingsprinciper\n\n‒'), 0.8368128834999999), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c2-7d25e4c2-817a-4e7a-b13b-2decc8efc155', metadata={'relative_path': 'Utvecklingsprojekt\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp_zln9aq2\\instruktioner-projekt-rapport-x.pdf', 'start_index': 1236.0}, page_content='algoritmer, formler och ekvationer som systemet bygger på.\n\nBeskrivning av metoden, den praktiska lösningen, som ligger till grund för utredningen. Här kan systemarkitektur, programdesign och dynamiska modeller användas för att ge en bra beskrivning av hur systemet fungerar och därmed främja reproducerbarhet av resultatet.\n\nResultat kopplade till era frågeställningar. Resultaten kan komma från användarstudier, prestandamätningar, jämförelser mellan lösningar och annat som gör att ni senare kan besvara frågeställningarna.\n\n(Endast i versionen för opponering: kortfattat, i bilaga eller eget avsnitt under slutsatser-\n\nkapitel, vad planerat arbete som också kommer att vara med i slutrapporten.)\n\nI bilagor:\n\nEn gemensam reflektion, på max två sidor, över hur det faktiska genomförandet av arbetet gick jämfört med planeringen av utvecklingsprocessen. Reflektera över hur väl eller ej fungerande de rutiner, processer samt projekterings och utvecklingsverktyg som planerats och använts var. Reflektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från er gemensamma och individuella rapporter.\n\nEn individuell reflektion, på max en sida, över varje persons roll i projektet.'), 0.833042711), (Document(id='TNM094_sprakaterkoppling_vt24.pdf-p0-c0-45716d41-c94e-4078-925b-9bb3da927ee4', metadata={'relative_path': 'Språkstrimma\\TNM094 språkåterkoppling vt24.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpbkmy1ivk\\TNM094 språkåterkoppling vt24.pdf', 'start_index': 0.0}, page_content='Återkoppling på individuella rapporter TNM094\n\nSpråk och formalia som vi kommenterat:\n\nVictoria, Britta, Ulrika, Maria, Per-Olof\n\nVT24\n\nInformationsflödet\n\nInledningen kräver ofta mer kontext kring projekten: När, var, hur, vad, vem/vilka och varför?\n\nSammanfattningen får inte syfta på något som sägs inne i rapporten. Självständig text. Förklara begrepp och förkortningar redan här. Avslöja ”slutet”, dvs slutsatsen\n\nInledningen får heller inte bygga vidare på sammanfattningen. Börja om med informationen. Plantera viktig information här (obestämd form: ett projekt planeras…)som sedan kan byggas vidare på i bestämd form (i projektet…)\n\nInformationsflödet\n\nSammanhangsord saknas i hög grad- leder till ensamma öar av information. Uppgiften är att visa hur de olika delarna hänger ihop, dvs att det ena leder till det andra eller står i något slags förhållande till vad som redan sagts eller ska sägas:\n\n… som nämnts i kap. 2.3… Däremot kan inte… En annan etisk aspekt är… Slutligen redogörs för…\n\nAvsluta inte rapporten i ett hörn: Avrunda helheten genom en slutsats.\n\nEtisk diskussion\n\nSvårt att få bra sammanhang och substans i detta kapitel.\n\nIntroducera först ämnet som ska diskuteras: Ett etiskt dilemma som kan uppstå är… Kommentera sedan: Det behöver övervägas om… Effekten kan bli att.. För att undvika detta kan en lösning vara…\n\nAnvänd ett inkluderande och etablerat språkbruk: funktionsnedsatta/varierade, synnedsättning, hörselnedsättning, …'), 0.82800287), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c1-e28bb969-fe86-436f-87e4-64b437c468c7', metadata={'relative_path': 'Utvecklingsprojekt\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp_zln9aq2\\instruktioner-projekt-rapport-x.pdf', 'start_index': 556.0}, page_content='Uppgiften Gruppen skriver gemensamt en rapport över projektarbetet. Rapporten ska vara skriven på svenska i den mall som finns tillgänglig på kurshemsidan och bör innehålla:\n\nEn generell beskrivning av bakgrund till utvecklingen (under Introduktion), ursprungligt\n\nsyfte/mål (under Introduktion), hur dessa har uppfyllts (under Slutsatser), vad som medvetet utelämnats och varför (under Introduktion), och vad som visade sig inte fungera och varför (under Slutsatser).\n\nVetenskapliga frågeställningarna i ett inlednings-kapitel samt sammanfattning av svar och\n\nanalys i ett slutsatser-kapitel.\n\nEn beskrivning av relaterat arbete som utrett samma aspekter samt tekniska teorier,\n\nalgoritmer, formler och ekvationer som systemet bygger på.\n\nBeskrivning av metoden, den praktiska lösningen, som ligger till grund för utredningen. Här kan systemarkitektur, programdesign och dynamiska modeller användas för att ge en bra beskrivning av hur systemet fungerar och därmed främja reproducerbarhet av resultatet.\n\nResultat kopplade till era frågeställningar. Resultaten kan komma från användarstudier, prestandamätningar, jämförelser mellan lösningar och annat som gör att ni senare kan besvara frågeställningarna.\n\n(Endast i versionen för opponering: kortfattat, i bilaga eller eget avsnitt under slutsatser-\n\nkapitel, vad planerat arbete som också kommer att vara med i slutrapporten.)\n\nI bilagor:'), 0.8263812065), (Document(id='mall_projekt-rapport.pdf-p0-c1-05ae65c8-2418-46a8-9915-ecdaf8d21f52', metadata={'relative_path': 'Utvecklingsprojekt\\mall_projekt-rapport.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpcpg7hl6t\\mall_projekt-rapport.pdf', 'start_index': 831.0}, page_content='Sammanfattningens längd växer med längden på rapporten. I en rapport av denna typ bör den vara åtminstone fem stycken lång: ett inledande motiverar arbetet och beskriver bakgrund och syfte, ett beskriver kort hur man har arbetat, ett beskriver teorier och lösningar, ett beskriver resultaten och ett presenterar analys och slutsatser.\n\nSammanfattningen innehåller inga referenser eller ekvationer.\n\ni\n\nInnehåll\n\nSammanfattning\n\nFigurer\n\nTabeller\n\n1 Introduktion\n\n1.1 Bakgrund .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n1.2 Syfte .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n1.3 Frågeställning .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n1.4 Avgränsningar .\n\n. .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n2 Relaterat arbete\n\n3 (Beskrivning av metoden)\n\n4 Resultat\n\n5 Analys och diskussion\n\n5.1 Metod .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n5.2 Resultat\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n5.3 Etisk och samhällelig reﬂektion . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n6 Slutsatser\n\nLitteraturförteckning\n\nA Reﬂektion över systemutvecklingsprocessen\n\nA.1 Person A .\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n.\n\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\nA.2 Person B .\n\n.\n\n.\n\n.\n\n.\n\n.'), 0.82629174), (Document(id='lecture-00_Kursinformation.pdf-p0-c6-4b722f7e-b592-47ff-9bd5-7c83bcf9dce1', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 4314.0}, page_content='Kundkontakt Projektplan Avstämningar Färdig projektrapport (2x) Slutseminarium\n\nViktiga personliga hållpunkter\n\nIndividuell rapport (2x) – lärt er inför andra inlämningen\n\nOpponeringsrapport\n\nFörsta två veckorna i projektet\n\nUppstartsmöte för gruppen\n\nKundkontakt Fördela ansvarsområden för undersökning av lösningar Sätt upp versionshantering och bjud in mig\n\nSe till att ni kan rivstarta efter individuell rapport\n\nIndividuell rapport\n\n1,5 hp = 40 h arbetstid Två delar • Teknisk utredning\n\nUtred olika tekniska lösningar eller hur gruppen bör arbeta Använd resultatet av utredningen i projektplanen\n\nProjektplan\n\nPlanera utvecklingsprojektet med frihet att inkludera egna visioner Utnyttja teorier för att skapa en bra plan\n\nEn rapport\n\n…som i detalj beskriver den personliga planen och motiverar val utifrån teorier och praxis\n\nIndividuell rapport\n\nExamination\n\n‒ Språklig bedömning av ISV/Språkverkstaden\n\nBra stavning, grammatik, flöde och struktur krävs\n\nSpråkligt godkänt krävs för godkänt på uppgiften\n\n‒ Teknisk bedömning av tekniskt lärarlag\n\nRättas enligt mall som ni har tillgång till och ska använda\n\n‒ Komplettering\n\nEn andra rättning av komplettering sker under HT1\n\nIndividuella rapporter -> Gemensam plan\n\nInnan ett projekt påbörjas behövs en plan… • Skapa en gemensam projektplan\n\nKom överens utifrån era individuella planer\n\nUtnyttja teorier för att skapa en bra plan\n\nViktigt att tänka på'), 0.825039625)]
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\ufb02' in position 5636: character maps to <undefined>
Call stack:
  File "<string>", line 1, in <module>
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 135, in _main
    return self._bootstrap(parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 314, in _bootstrap
    self.run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\_subprocess.py", line 80, in subprocess_started
    target(sockets=sockets)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\server.py", line 66, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 641, in run_until_complete
    self.run_forever()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 608, in run_forever
    self._run_once()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1936, in _run_once
    handle._run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 84, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\protocols\websockets\websockets_impl.py", line 243, in run_asgi
    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)  # type: ignore[func-returns-value]
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\middleware\proxy_headers.py", line 60, in __call__        
    return await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\errors.py", line 152, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\cors.py", line 77, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 362, in handle
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 95, in app
    await wrap_app_handling_exceptions(app, session)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 93, in app
    await func(session)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\routing.py", line 383, in app
    await dependant.call(**solved_result.values)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\main.py", line 229, in ws_llm_conversation
    async for chunk in handle_conversation_stream(data):
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\services.py", line 109, in handle_conversation_stream
    logger.info(f"Found Documents: {found_documents}")
Message: "Found Documents: [(Document(id='instruktioner-individuell_rapport-x.pdf-p0-c0-0b09c7e5-0d6e-49c1-88e0-cde354038d16', metadata={'relative_path': 'Induviduell rapport\\\\instruktioner-individuell_rapport-x.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpjk7zg8l1\\\\instruktioner-individuell_rapport-x.pdf', 'start_index': 0.0}, page_content='Individuell rapport\\n\\nSyfte\\n\\nDet finns flera syften med denna examinationsform. Främsta syftet är att locka fram reflektion över hur teorierna appliceras i ett verkligt projekt och omvandlas till praktik samt lägga en kunskaps- mässig grund inför projektarbetet och den gemensamma utformningen av projektplanen. Dessutom används den som individuell kunskapskontroll för att säkerställa att varje individ uppnått kravet för godkänt i kursen och att de uppnått en förståelse nödvändig för projektet.\\n\\nObservera att kursledningen förbehåller sig rätten att vidta åtgärder utifrån resultatet på den individuella rapporten för att säkerställa kvalitén på projekten.\\n\\nUppgiften\\n\\nUppgiften är att individuellt utifrån sin egen uppfattning av det tilldelade projektet göra en välmotiverad teknisk utredning för ett problem relaterat utförandet av projektet samt skapa en genomarbetad plan för hur projektet skulle kunna genomföras. Du har frihet att ta in egna visioner och införa premisser som inte finns i det egna teamet. Planen och motiveringen till alla beslut beskrivs i en regelrätt rapport. Eftersom det gemensamma planen ännu inte har sammanställts, så baseras förslaget till stor del på den egna uppfattningen av projektet, egna val och beslut samt egen efterforskning, eventuellt efter diskussion med kund eller teammedlemmar.'), 0.8444189725), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c3-72037ab3-3aaf-4423-8a87-be6b5220bc82', metadata={'relative_path': 'Utvecklingsprojekt\\\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp_zln9aq2\\\\instruktioner-projekt-rapport-x.pdf', 'start_index': 1859.0}, page_content='kapitel, vad planerat arbete som också kommer att vara med i slutrapporten.)\\n\\nI bilagor:\\n\\nEn gemensam reflektion, på max två sidor, över hur det faktiska genomförandet av arbetet gick jämfört med planeringen av utvecklingsprocessen. Reflektera över hur väl eller ej fungerande de rutiner, processer samt projekterings och utvecklingsverktyg som planerats och använts var. Reflektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från er gemensamma och individuella rapporter.\\n\\nEn individuell reflektion, på max en sida, över varje persons roll i projektet.\\n\\nReflektera över vad som fungerade väl och vad som skulle kunna förbättras. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter.'), 0.8442752065), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c4-1f7d9a55-53a2-46f9-b3de-0f9bf1cda3ae', metadata={'relative_path': 'Utvecklingsprojekt\\\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp_zln9aq2\\\\instruktioner-projekt-rapport-x.pdf', 'start_index': 2504.0}, page_content='En individuell reflektion, på max en sida, över varje persons roll i projektet.\\n\\nReflektera över vad som fungerade väl och vad som skulle kunna förbättras. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter.\\n\\nEn lista över vilka som varit involverade i projektet, inom teamet och utanför, med en beskrivning av någonting som de, genom individuellt, självständigt arbete, bidragit med. Detta bör inte vara en lista över vilka rader kod eller dokument man skrivit utan kan bestå av en beskrivning av egna ansvarsområden, moduler man på egen hand arbetat med, eller andra beskrivningar som gruppen anser rättvist visar på varje medlems individuella bidrag. De flesta grupper arbetar både i grupp och individuellt, så en fungerande struktur är att beskriva både vilka gemensamma bidrag man varit delaktig i och vad man bidragit med självständigt arbete.\\n\\nMålgrupp Rapporten ska rikta sig till kollegerna i kursen; räkna med viss förståelse för utvecklingsprinciper och medietekniska ämnen; beskriv mer tydligt mindre kända detaljer som är viktiga för förståelsen för rapporten. Till exempel behövs ingen genomgång av Scrums alla olika principer eller vad ett designmönster är. Däremot kan man hänvisa till Scrum-roller vid reflektionen av hur gruppen har arbetat och ett designmönster kan behöva beskrivas ifall detaljer i systemets programdesign grundar sig på det.'), 0.84166798), (Document(id='mall_projekt-rapport.pdf-p0-c19-5bac815f-01b9-44ce-b464-5b4a1cf6ed5f', metadata={'relative_path': 'Utvecklingsprojekt\\\\mall_projekt-rapport.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpcpg7hl6t\\\\mall_projekt-rapport.pdf', 'start_index': 13159.0}, page_content='Här ska också arbetets konsekvenser för berörd målgrupp och eventuellt för forskare och praktiker beskrivas. Man kan också ha ett stycke eller avsnitt om framtida arbete där man beskriver vad man skulle vilja göra om man hade mer tid eller som rekommendationer för framtida studier eller exjobb. Om man har ett sådant stycke är det dock viktigt att det är konkreta och väl genomtänkta förslag som presenteras, snarare än vaga idéer.\\n\\nI det slutliga förslaget på projektrapport kan ni här kortfattat beskriva vad som mer är planerat att göra som möjligen kommer att komma med i slutrapporten.\\n\\n8\\n\\nLitteraturförteckning\\n\\n[1] Shari Lawrence Pﬂeeger och Joanne M. Atlee, Software Engineering, Fourth Edition, Interna-\\n\\ntional Edition, Pearson 2010\\n\\n[2] Författare, Titel, Organisation, yyyy-mm-dd, hämtad: yyyy-mm-dd\\n\\nhttp://länk/till/sidan\\n\\n9\\n\\nBilaga A\\n\\nReﬂektion över systemutvecklingsprocessen\\n\\nMax 2 sidor exklusive bilder (1000 ord).\\n\\nReﬂektera gemensamt över hur er faktiska arbetsprocess gick till i jämförelse med hur ni planerat att arbeta. Reﬂektera över hur väl eller ej fungerande de rutiner, processer samt projekterings- och utvecklingsverktyg som planerats och använts var. Reﬂektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från de individuella rapporterna.\\n\\nA.1 Person A\\n\\nMax 1 sida per person.'), 0.8399133085), (Document(id='lecture-00_Kursinformation.pdf-p0-c7-641cce54-efe7-4fe4-b0a1-26e5dd532dc1', metadata={'relative_path': 'Fö1\\\\lecture-00_Kursinformation.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf', 'start_index': 5042.0}, page_content='En rapport\\n\\n…som i detalj beskriver den personliga planen och motiverar val utifrån teorier och praxis\\n\\nIndividuell rapport\\n\\nExamination\\n\\n‒ Språklig bedömning av ISV/Språkverkstaden\\n\\nBra stavning, grammatik, flöde och struktur krävs\\n\\nSpråkligt godkänt krävs för godkänt på uppgiften\\n\\n‒ Teknisk bedömning av tekniskt lärarlag\\n\\nRättas enligt mall som ni har tillgång till och ska använda\\n\\n‒ Komplettering\\n\\nEn andra rättning av komplettering sker under HT1\\n\\nIndividuella rapporter -> Gemensam plan\\n\\nInnan ett projekt påbörjas behövs en plan… • Skapa en gemensam projektplan\\n\\nKom överens utifrån era individuella planer\\n\\nUtnyttja teorier för att skapa en bra plan\\n\\nViktigt att tänka på\\n\\nAlla projekt ska följa iterativ struktur Alla projekt ska använda principer för systemutveckling Alla är utvecklare med bisysslor och ansvarsområden En enda person har yttersta ansvar för varje viktig aspekt Alla förändringar i plan och organisation ska ske explicit Spara material kontinuerligt dokumentera vad som gjorts varje vecka för att kunna jämföra med ursprungsplanen\\n\\nAvstämning\\n\\nMöten med ledningsgruppen • Handledning av informell karaktär • Diskuterar vad som gjorts, rutiner och eventuella problem Andra avstämningen: Ta med gemensam projektplan\\n\\nOpponering\\n\\nOpponering på projektrapport\\n\\n0,5 hp ≈ 13 h arbetstid baserad på rapporten – en tidig men fullständig version används för att bedöma teknisk förståelse\\n\\nÅterkoppling till teamet\\n\\n‒\\n\\nom använda utvecklingsprinciper\\n\\n‒'), 0.8368128834999999), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c2-7d25e4c2-817a-4e7a-b13b-2decc8efc155', metadata={'relative_path': 'Utvecklingsprojekt\\\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp_zln9aq2\\\\instruktioner-projekt-rapport-x.pdf', 'start_index': 1236.0}, page_content='algoritmer, formler och ekvationer som systemet bygger på.\\n\\nBeskrivning av metoden, den praktiska lösningen, som ligger till grund för utredningen. Här kan systemarkitektur, programdesign och dynamiska modeller användas för att ge en bra beskrivning av hur systemet fungerar och därmed främja reproducerbarhet av resultatet.\\n\\nResultat kopplade till era frågeställningar. Resultaten kan komma från användarstudier, prestandamätningar, jämförelser mellan lösningar och annat som gör att ni senare kan besvara frågeställningarna.\\n\\n(Endast i versionen för opponering: kortfattat, i bilaga eller eget avsnitt under slutsatser-\\n\\nkapitel, vad planerat arbete som också kommer att vara med i slutrapporten.)\\n\\nI bilagor:\\n\\nEn gemensam reflektion, på max två sidor, över hur det faktiska genomförandet av arbetet gick jämfört med planeringen av utvecklingsprocessen. Reflektera över hur väl eller ej fungerande de rutiner, processer samt projekterings och utvecklingsverktyg som planerats och använts var. Reflektera även över eventuella förändringar ni gjorde i ert arbetssätt under projektet och utfallet av dem. Ange referenser till litteratur som instämmer eller motsäger era erfarenheter. Det går bra att här använda material från er gemensamma och individuella rapporter.\\n\\nEn individuell reflektion, på max en sida, över varje persons roll i projektet.'), 0.833042711), (Document(id='TNM094_sprakaterkoppling_vt24.pdf-p0-c0-45716d41-c94e-4078-925b-9bb3da927ee4', metadata={'relative_path': 'Språkstrimma\\\\TNM094 språkåterkoppling vt24.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpbkmy1ivk\\\\TNM094 språkåterkoppling vt24.pdf', 'start_index': 0.0}, page_content='Återkoppling på individuella rapporter TNM094\\n\\nSpråk och formalia som vi kommenterat:\\n\\nVictoria, Britta, Ulrika, Maria, Per-Olof\\n\\nVT24\\n\\nInformationsflödet\\n\\nInledningen kräver ofta mer kontext kring projekten: När, var, hur, vad, vem/vilka och varför?\\n\\nSammanfattningen får inte syfta på något som sägs inne i rapporten. Självständig text. Förklara begrepp och förkortningar redan här. Avslöja ”slutet”, dvs slutsatsen\\n\\nInledningen får heller inte bygga vidare på sammanfattningen. Börja om med informationen. Plantera viktig information här (obestämd form: ett projekt planeras…)som sedan kan byggas vidare på i bestämd form (i projektet…)\\n\\nInformationsflödet\\n\\nSammanhangsord saknas i hög grad- leder till ensamma öar av information. Uppgiften är att visa hur de olika delarna hänger ihop, dvs att det ena leder till det andra eller står i något slags förhållande till vad som redan sagts eller ska sägas:\\n\\n… som nämnts i kap. 2.3… Däremot kan inte… En annan etisk aspekt är… Slutligen redogörs för…\\n\\nAvsluta inte rapporten i ett hörn: Avrunda helheten genom en slutsats.\\n\\nEtisk diskussion\\n\\nSvårt att få bra sammanhang och substans i detta kapitel.\\n\\nIntroducera först ämnet som ska diskuteras: Ett etiskt dilemma som kan uppstå är… Kommentera sedan: Det behöver övervägas om… Effekten kan bli att.. För att undvika detta kan en lösning vara…\\n\\nAnvänd ett inkluderande och etablerat språkbruk: funktionsnedsatta/varierade, synnedsättning, hörselnedsättning, …'), 0.82800287), (Document(id='instruktioner-projekt-rapport-x.pdf-p0-c1-e28bb969-fe86-436f-87e4-64b437c468c7', metadata={'relative_path': 'Utvecklingsprojekt\\\\instruktioner-projekt-rapport-x.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp_zln9aq2\\\\instruktioner-projekt-rapport-x.pdf', 'start_index': 556.0}, page_content='Uppgiften Gruppen skriver gemensamt en rapport över projektarbetet. Rapporten ska vara skriven på svenska i den mall som finns tillgänglig på kurshemsidan och bör innehålla:\\n\\nEn generell beskrivning av bakgrund till utvecklingen (under Introduktion), ursprungligt\\n\\nsyfte/mål (under Introduktion), hur dessa har uppfyllts (under Slutsatser), vad som medvetet utelämnats och varför (under Introduktion), och vad som visade sig inte fungera och varför (under Slutsatser).\\n\\nVetenskapliga frågeställningarna i ett inlednings-kapitel samt sammanfattning av svar och\\n\\nanalys i ett slutsatser-kapitel.\\n\\nEn beskrivning av relaterat arbete som utrett samma aspekter samt tekniska teorier,\\n\\nalgoritmer, formler och ekvationer som systemet bygger på.\\n\\nBeskrivning av metoden, den praktiska lösningen, som ligger till grund för utredningen. Här kan systemarkitektur, programdesign och dynamiska modeller användas för att ge en bra beskrivning av hur systemet fungerar och därmed främja reproducerbarhet av resultatet.\\n\\nResultat kopplade till era frågeställningar. Resultaten kan komma från användarstudier, prestandamätningar, jämförelser mellan lösningar och annat som gör att ni senare kan besvara frågeställningarna.\\n\\n(Endast i versionen för opponering: kortfattat, i bilaga eller eget avsnitt under slutsatser-\\n\\nkapitel, vad planerat arbete som också kommer att vara med i slutrapporten.)\\n\\nI bilagor:'), 0.8263812065), (Document(id='mall_projekt-rapport.pdf-p0-c1-05ae65c8-2418-46a8-9915-ecdaf8d21f52', metadata={'relative_path': 'Utvecklingsprojekt\\\\mall_projekt-rapport.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpcpg7hl6t\\\\mall_projekt-rapport.pdf', 'start_index': 831.0}, page_content='Sammanfattningens längd växer med längden på rapporten. I en rapport av denna typ bör den vara åtminstone fem stycken lång: ett inledande motiverar arbetet och beskriver bakgrund och syfte, ett beskriver kort hur man har arbetat, ett beskriver teorier och lösningar, ett beskriver resultaten och ett presenterar analys och slutsatser.\\n\\nSammanfattningen innehåller inga referenser eller ekvationer.\\n\\ni\\n\\nInnehåll\\n\\nSammanfattning\\n\\nFigurer\\n\\nTabeller\\n\\n1 Introduktion\\n\\n1.1 Bakgrund .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n1.2 Syfte .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n1.3 Frågeställning .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n1.4 Avgränsningar .\\n\\n. .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n2 Relaterat arbete\\n\\n3 (Beskrivning av metoden)\\n\\n4 Resultat\\n\\n5 Analys och diskussion\\n\\n5.1 Metod .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n5.2 Resultat\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n5.3 Etisk och samhällelig reﬂektion . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\n6 Slutsatser\\n\\nLitteraturförteckning\\n\\nA Reﬂektion över systemutvecklingsprocessen\\n\\nA.1 Person A .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\\n\\nA.2 Person B .\\n\\n.\\n\\n.\\n\\n.\\n\\n.\\n\\n.'), 0.82629174), (Document(id='lecture-00_Kursinformation.pdf-p0-c6-4b722f7e-b592-47ff-9bd5-7c83bcf9dce1', metadata={'relative_path': 'Fö1\\\\lecture-00_Kursinformation.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf', 'start_index': 4314.0}, page_content='Kundkontakt Projektplan Avstämningar Färdig projektrapport (2x) Slutseminarium\\n\\nViktiga personliga hållpunkter\\n\\nIndividuell rapport (2x) – lärt er inför andra inlämningen\\n\\nOpponeringsrapport\\n\\nFörsta två veckorna i projektet\\n\\nUppstartsmöte för gruppen\\n\\nKundkontakt Fördela ansvarsområden för undersökning av lösningar Sätt upp versionshantering och bjud in mig\\n\\nSe till att ni kan rivstarta efter individuell rapport\\n\\nIndividuell rapport\\n\\n1,5 hp = 40 h arbetstid Två delar • Teknisk utredning\\n\\nUtred olika tekniska lösningar eller hur gruppen bör arbeta Använd resultatet av utredningen i projektplanen\\n\\nProjektplan\\n\\nPlanera utvecklingsprojektet med frihet att inkludera egna visioner Utnyttja teorier för att skapa en bra plan\\n\\nEn rapport\\n\\n…som i detalj beskriver den personliga planen och motiverar val utifrån teorier och praxis\\n\\nIndividuell rapport\\n\\nExamination\\n\\n‒ Språklig bedömning av ISV/Språkverkstaden\\n\\nBra stavning, grammatik, flöde och struktur krävs\\n\\nSpråkligt godkänt krävs för godkänt på uppgiften\\n\\n‒ Teknisk bedömning av tekniskt lärarlag\\n\\nRättas enligt mall som ni har tillgång till och ska använda\\n\\n‒ Komplettering\\n\\nEn andra rättning av komplettering sker under HT1\\n\\nIndividuella rapporter -> Gemensam plan\\n\\nInnan ett projekt påbörjas behövs en plan… • Skapa en gemensam projektplan\\n\\nKom överens utifrån era individuella planer\\n\\nUtnyttja teorier för att skapa en bra plan\\n\\nViktigt att tänka på'), 0.825039625)]"
Arguments: ()
2025-05-07 10:51:04,880 - INFO - -----------------------------

client_session: <aiohttp.client.ClientSession object at 0x000001456E88FC90>
2025-05-07 10:53:35,526 - INFO - Last Question: Hur ska jag lägga upp kodstrukturen för lab2?
2025-05-07 10:53:35,526 - INFO - Conversation: [ConversationData(id='a45dd4d9-183c-40f4-8be1-8f94b959ae03', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-c1cc2e79-e05e-49bb-b074-3a25b51ab773', role='assistant', content='Jag kan hjälpa till med frågor kring kursen TNM094, ge information om kursinnehåll, studietips, resurser, samt allmänna frågor relaterade till Linköpings universitet. Om du har specifika frågor, dela gärna med dig av dem!'), ConversationData(id='243ea137-a8bd-4dd8-ba2d-e565fa80fa83', role='user', content='Vad ska ingå i den individuella rapporten?'), ConversationData(id='run-63d0a870-11cc-4102-bd71-0e82eee42947', role='assistant', content='Den individuella rapporten ska innefatta följande delar:\n\n1. **Teknisk utredning**: En välmotiverad analys av ett problem relaterat till projektet och en genomarbetad plan för hur projektet kan genomföras.\n\n2. **Reflektioner**: Opiniösa reflektioner över din egen roll i projektet och hur det har gått, inklusive vad som fungerade väl och vad som kan förbättras. Detta bör innefatta referenser till relevant litteratur.\n\n3. **Listning av bidrag**: En lista över vilka som varit involverade i projektet, både i teamet och externt, samt en beskrivning av deras individuella bidrag.\n\n4. **Språk och formalia**: Rapporten ska vara språkligt godkänd med korrekt stavning, grammatik, flöde och struktur.\n\nTänk på att anpassa rapporten till målgruppen, förutsatt att de har viss förståelse för utvecklingsprinciper och medietekniska ämnen.'), ConversationData(id='66d08af5-4b7a-4e29-a351-97ff4491e490', role='user', content='Hur ska jag lägga upp kodstrukturen för lab2?')]
2025-05-07 10:53:35,527 - INFO - Number of Found Documents: 10
2025-05-07 10:53:35,528 - INFO - Found Documents: [(Document(id='lecture-00_Kursinformation.pdf-p0-c15-875d04f6-8fc6-4cc3-94d1-7a6526cd4162', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 12134.0}, page_content='nu är det uppdelat i fördjupning och plan. ”lab2 hade ett för stort fokus på syntax och kodning i c++ när det borde vara mer fokus på diagrammen.” –Tidigare år har vi testat att ta bort kodningen men det har gjort att man inte förstod hur diagrammen kopplade till kod. För att förstå kopplingen mellan diagram och kod så behöver vi ofta koda. Projektet: ”För fritt i vissa gruppers fall. En del kunder tyckte att grupperna skulle börja med att komma med fler idéer medan gruppen ville komma igång med arbetet” – Prata med kunden eller ta kontakt med kursledningen så tidigt som möjligt för att styra ”Det var dessutom inte tydligt att alla behövde pusha till git för att bli godkända” – Notera att vi kommer att titta på era bidrag i projekten. Inga slackers accepteras! (Detta sägs i introduktionsföreläsningen)'), 0.811023563), (Document(id='lecture-00_Kursinformation.pdf-p0-c4-9d9755a1-952e-4ab3-83a6-cd7f8192aee9', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 2863.0}, page_content='Biblioteket (Tatiana Liljeström) Informationssökning\n\n• Antiplagiering/referenshantering\n\nLitteratur\n\nPrimär kurslitteratur\n\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\n\nKomplement\n\nStudieguide, videos, PDF:er och webbsidor\n\nReferenslitteratur\n\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\n\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\n\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\n\nLaborationer - Partikelsystem\n\nÖvningar\n\n1. Versionshantering (git)\n\nVar klara efter första tillfället\n\n2. Hur designar man system?\n\nFyra-fem tillfällen\n\n3. Kodanalys och testning\n\nTvå-tre tillfällen\n\nLaboratoriearbete\n\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\n\nLaborationer\n\nVald programvara\n\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\n\nHur kan vi få en jämn fördelning?\n\nUtvecklingsprojekt\n\nMål och syfte\n\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\n\nSteg\n\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\n\nViktiga milstolpar för projektet'), 0.7873723505), (Document(id='lecture-05_AnalysDesign_uppgifter.pdf-p0-c6-f1f0c40c-f9a1-4149-ab4d-6bead3a7a0be', metadata={'relative_path': 'Fö5\\lecture-05_AnalysDesign_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp5f0khrxl\\lecture-05_AnalysDesign_uppgifter.pdf', 'start_index': 4556.0}, page_content='Komplettera med andra diagram där det underlättar förståelsen för systemet\n\nKlassdiagram\n\nSyfte\n\n– Strukturell vy – beskriva systemet struktur – Viktigast i programdesign – Användbar för modellering av systemarkitekturer\n\nViktiga delar\n\n– Klasser, variabler och metoder – Beroenden och arv\n\nmen också\n\n– Paket – strukturera på en abstrakt nivå\n\n– Objekt – visa på samarbeten vid körning\n\nKlassdiagram - Hämta bilder\n\nNotation\n\n= komposition\n\n= Generalisering (arv)\n\n= känner till\n\n= publik funktion\n\nKlassdiagram\n\nNästa steg\n\nStudieguide: Ca 2 timmars arbete att gå igenom\n\ninför föreläsning 6, men ni har 4-6 timmar på er.\n\nLabb imorgon: Utnyttja att ni har gått igenom\n\nmaterialet och exemplen från idag\n\nImorgon: Ett steg närmre själva kodandet'), 0.7850544749999999), (Document(id='lecture-02_Utvecklingsmetodiker_uppgifter.pdf-p0-c3-87709eb3-9337-4d8f-826d-ee73f85149fb', metadata={'relative_path': 'Fö2\\lecture-02_Utvecklingsmetodiker_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpxjfe3bqn\\lecture-02_Utvecklingsmetodiker_uppgifter.pdf', 'start_index': 2468.0}, page_content='Notera struktur ovan: 1) förutsättningar 2) alternativ • Beskriv inte agil utveckling utan hur det ska användas i just det här projektet\n\nAnvänd t.ex. google.scholar.com för att hitta artiklar som stödjer dina uttalande\n\nNästa steg (att göra hemma)\n\nVilka lämpliga modeller finns det för ditt projekt?\n\nKom igång med din projektplan!\n\n•\n\nKursdokument/Individuell rapport Tips för latex: • • Börja titta på/skriva • •\n\nOverleaf (online app) TeXnicCenter http://www.texniccenter.org/\n\nbakgrund och syfte (kapitel 1) projekthantering (kapitel 3)\n\nStudieguide – mycket att gå igenom inför fö. 3\n\nÅterkoppling\n\nhttps://www.mentimeter.com/ Kod 6901 6592\n\nVad fungerade bra?\n\nVad kan ändras till nästa gång?'), 0.782661319), (Document(id='Laborationsprotokoll2025.xlsx-p0-c2-0f4ad174-f4db-41a9-9bac-e988b84cd9ea', metadata={'relative_path': 'Laborationer\\Laborationsprotokoll2025.xlsx', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpig179gls\\Laborationsprotokoll2025.xlsx', 'start_index': 0.0}, page_content='Vecka Veckodag Startdatum Starttid Sluttid Lokal Studentgrupp Lab Redovisnig Peter Rickard Elin Tobias v 4 Tisdag 2025-01-21 00:00:00 10:15:00 12:00:00 K4504 MT3.a 1 lab1 x x 2.0 Markera de pass där ni inte kan vara med, med röd bakgrund. Set ett X för de pass där ni ska vara med.\\nJag har initialt lagt till Mig och Elin på alla a-guppens pass och Rickard och Tobias på alla b-gruppens pass.\\n\\njustera så att det passar er, huvudsaken är att vi försöker vara iaf 2 på varje pass. v 4 Onsdag 2025-01-22 00:00:00 08:15:00 10:00:00 K4504 MT3.b 1 lab1 x x 2.0 v 5 Onsdag 2025-01-29 00:00:00 08:15:00 10:00:00 K4504 MT3.b 2 lab1 x x 2.0 v 5 Onsdag 2025-01-29 00:00:00 15:15:00 17:00:00 K4504 MT3.a 2 lab1 x x 2.0 v 6 Måndag 2025-02-03 00:00:00 13:15:00 15:00:00 K4504 MT3.a 3 x x 2.0 v 6 Tisdag 2025-02-04 00:00:00 13:15:00 15:00:00 K4504 MT3.b 3 x x 2.0 v 7 Onsdag 2025-02-12 00:00:00 08:15:00 10:00:00 K4504 MT3.a 4 x x 2.0 v 7 Onsdag 2025-02-12 00:00:00 15:15:00 17:00:00 K4504 MT3.b 4 x x 2.0 v 8 Måndag 2025-02-17 00:00:00 13:15:00 15:00:00 K4504 MT3.a 5 lab2 x x 2.0 v 8 Tisdag 2025-02-18 00:00:00 13:15:00 15:00:00 K4504 MT3.b 5 lab2 x x 2.0 v 9 Tisdag 2025-02-25 00:00:00 13:15:00 15:00:00 K4504 MT3.a 6 lab2 x x 2.0 v 9 Onsdag 2025-02-26 00:00:00 13:15:00 15:00:00 K4504 MT3.b 6 lab2 x x 2.0 v 11 Tisdag 2025-03-11 00:00:00 13:15:00 15:00:00 K4504 MT3.a 7 x 1.0 v 11 Onsdag 2025-03-12 00:00:00 13:15:00 15:00:00 K4504 MT3.b 7 x x 2.0 v 14 Måndag 2025-03-31 00:00:00 13:15:00 15:00:00 K4504'), 0.7759289739999999), (Document(id='lecture-00_Kursinformation.pdf-p0-c3-e252cb37-b343-4ae2-895d-a590b163b01f', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 2256.0}, page_content='Introduktion till systemutveckling\n\n4. Systemarkitektur 5. Modellering (analys och visualisering) 6. Modul- och programdesign\n\nStandarder och praxis\n\n7. Implementation och designmönster 8. Refaktorering, testning, underhåll\n\nSpråkstrimman\n\n9. Informationssökning och antiplagiering 10. Föreläsning om språk och rapportskrivande\n\nSvenskastrimman\n\nSpråkligt stöd\n\n– Föreläsning om rapportskrivande – Stöd i rapportskrivande – Rättning av rapporter – Återkoppling och tips – Viktigt: Dyslexi eller dylikt? Be om hjälp om du känner att det behövs och/eller lämna en kommentar i inlämningen.\n\nVictoria Pihlgren\n\nBiblioteket (Tatiana Liljeström) Informationssökning\n\n• Antiplagiering/referenshantering\n\nLitteratur\n\nPrimär kurslitteratur\n\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\n\nKomplement\n\nStudieguide, videos, PDF:er och webbsidor\n\nReferenslitteratur\n\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\n\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\n\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\n\nLaborationer - Partikelsystem\n\nÖvningar\n\n1. Versionshantering (git)\n\nVar klara efter första tillfället\n\n2. Hur designar man system?\n\nFyra-fem tillfällen\n\n3. Kodanalys och testning\n\nTvå-tre tillfällen\n\nLaboratoriearbete'), 0.7756649255), (Document(id='lecture-07_ImplementationDesignmonster_uppgifter.pdf-p0-c1-d11cd401-65c0-4458-8bac-aa3bed3073bf', metadata={'relative_path': 'Fö7\\lecture-07_ImplementationDesignmönster_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpwq6puc4e\\lecture-07_ImplementationDesignmönster_uppgifter.pdf', 'start_index': 772.0}, page_content='Revidera din kod\n\n– Kontrollera läsbarhet – Kontrollera implementation – Skriv om på ett bättre sätt\n\n[Pfleeger]\n\nKontrollstrukturer och algoritmer\n\nKeep-It-Simple-Stupid (KISS)\n\n– Det finns ingen prestige i att skriva svårläst kod – Offra inte läsbarhet och struktur för prestanda\n\nLäsbarhet – uppifrån och ned\n\n– Beslut → handling undvik att bryta ett naturligt flöde – Undvik långa eller djupa block (if, for, while, …) – Samla kod som hör ihop – Göm detaljer i subrutiner\n\nvoid RegisterUser(User user) {\n\nif(user.name == null) { throw new Exception("Invalid User Name"); } if(user.password == null || user.password.length() < 5) {\n\nvoid RegisterUser(User user) {\n\nvalidateUser(user);\n\nthrow new Exception("Invalid password");\n\n} if(userRepository.exists(user)) {\n\nuserRepository.add(user); emailSender.sendEmail(user,\n\nthrow new Exception("User name already exists");\n\n"Account succesfully created");\n\n}\n\n}\n\nuserRepository.add(user); emailSender.sendEmail(user, "Account succesfully created");\n\n}\n\n[Pfleeger]\n\nKontrollstrukturer och algoritmer\n\nVariabel- och komponent-namn\n\n– Använd längre, beskrivande namn vid större räckvidd – Kan vara bra att inkludera enheter (sekunder etc.)\n\nfloat beansKg = 0.0; – Sällsynt med variabelnamn med en bokstav\n\nfor i in range(len(matrix)):\n\nfor row in range(len(matrix)):\n\nfor j in range(len(matrix[i])): # do stuff\n\nfor column in range(len(matrix[row])): # do stuff\n\n[Pfleeger]\n\nKod-dokumentation\n\nExtern kod-dokumentation\n\n– system-perspektiv'), 0.7746375205), (Document(id='mall_individuell_rapport_(1).pdf-p0-c33-98b998fc-b125-466c-bdfd-4c4f6da77952', metadata={'relative_path': 'Induviduell rapport\\mall_individuell_rapport (1).pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpsigyk7nf\\mall_individuell_rapport (1).pdf', 'start_index': 25064.0}, page_content='2.3.4 Rutiner för systemarkitektur och programdesign\n\nBeskriv och motivera hur gruppen ska arbeta med arkitektur och programdesign. Ska modellering an- vändas? Vilka modelleringstekniker och när i så fall? Tänk på att koppla och och motivera arbetssättet till det som är unikt med just det här projektet.\n\nNotera: Med programdesign menas stegen du gör innan du skriver kod - inte hur programmet ser ut rent visuellt. Se föreläsning om programdesign.\n\n2.3.5 Rutiner för dokumentation\n\nBeskriv och motivera hur gruppen ska arbeta med dokumentation av programkod, möten och andra delar av utvecklingsprocessen. Beskriv och motivera även vilket teknikstöd som kommer att användas.\n\n2.3.6 Rutiner för kvalitetssäkring\n\nBeskriv hur gruppen ska arbeta med kvalitetssäkring av programkod (granskning och testning) och vilket teknikstöd som kommer att användas. Vilka typer av tester som ska genomföras i just det här projektet, när och varför? Koppla gärna detta till andra arbetsprocesser/rutiner i kapitlet. Om användartester ska genomföras så beskriv 1) deras syfte, 2) vilka lämpliga alternativ som finns för detta syfte och 3) vilken typ av användartester som ska användas och när i processen de ska utföras. Samma skrivupplägg kan appliceras på andra typer av tester.\n\nExempel på hur ni kopplar texten till andra processer/rutiner/utvecklingsmetodiken: ”Dagen innan sprintgranskning ska ett integrationstest genomföras där samtlig ny funktionalitet i sprinten testas tillsammans.”\n\n9\n\nKapitel 3'), 0.7722288070000001), (Document(id='Eklund_2020_KomplementTillTypografiskPrimer.pdf-p0-c10-3a88686c-f41d-4eff-bd98-ee85517a42f2', metadata={'relative_path': 'Språkstrimma\\Eklund_2020_KomplementTillTypografiskPrimer.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp4bcglef3\\Eklund_2020_KomplementTillTypografiskPrimer.pdf', 'start_index': 7588.0}, page_content='Som sagt ovan så numrera gärna.\n\nAnvänd ledlinjer fram till sidnummer.\n\nIndraget ska ha samma marginal för varje ”nivå”; se Bild 1.\n\nBild 1: Illustration över indrag i innehållsförteckningar. Varje ny nivå ska ha samma vänstermarginal som texten på nivån över (de röda strecken).\n\n4\n\n14 Formelnumrering\n\nFormler ska numreras i löpande ordning (vissa av er har en väldig skum numreringsordning), med siffran högerställd, som i:\n\n< Formel 1 här > (1)\n\n< Formel 2 här > (2)\n\n15 Punktlistor\n\nDet är till stor hjälp för läsaren om man använder punktlistor (med eller utan nummer) för (t ex) hypoteser. Dessa kan sedan ”matchas” i slutsatserna på ett väldigt överskådlig sätt, som:\n\nStudiebeskrivning 1. Hypotes 1: Att X 2. Hypotes 3: Att Y\n\nResultat 1. Hypotes 1: Att X = bekräftad 2. Hypotes 3: Att Y = inte bekräftad\n\n15 Slutord\n\nJag kommer säkert att lägga till saker till detta dokument i framtiden. Stay tuned!\n\nRobert\n\n\uf097 \uf096\n\n5'), 0.7710815965), (Document(id='lecture-00_Kursinformation.pdf-p0-c16-2c999a6c-53d3-4ca3-9cd9-6cf6f3b163dc', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 12948.0}, page_content='Urval av ändringar\n\nLagt till bedömningskriterier (se kursinformation) Individuell rapport\n\n‒\n\nDelat upp rapporten i två delar för att bättre efterlikna en projektplan i ett företag. Mer instruktioner i mallen.\n\n‒\n\nUppdaterat bedömningsmall för att bättre reflektera bedömningskriterierna.\n\nLaborationer\n\n‒\n\nArbetat igenom instruktionerna för laboration 2 – förkortat ett moment.\n\n‒\n\nLagt till förberedelseinstruktioner i studieguiden.\n\n‒\n\nTydligare instruktioner när varje labb förväntas vara klar (se kursöversikt).\n\n‒\n\nTänk på att arbeta utanför schemalagd tid\n\nLisam\n\nDemo och genomgång.\n\nEfter pausen\n\nÖversikt över systemutveckling'), 0.7708073555)]
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\u2248' in position 2305: character maps to <undefined>
Call stack:
  File "<string>", line 1, in <module>
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 135, in _main
    return self._bootstrap(parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 314, in _bootstrap
    self.run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\_subprocess.py", line 80, in subprocess_started
    target(sockets=sockets)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\server.py", line 66, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 641, in run_until_complete
    self.run_forever()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 608, in run_forever
    self._run_once()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1936, in _run_once
    handle._run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 84, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\protocols\websockets\websockets_impl.py", line 243, in run_asgi
    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)  # type: ignore[func-returns-value]
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\middleware\proxy_headers.py", line 60, in __call__        
    return await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\errors.py", line 152, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\cors.py", line 77, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 362, in handle
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 95, in app
    await wrap_app_handling_exceptions(app, session)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 93, in app
    await func(session)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\routing.py", line 383, in app
    await dependant.call(**solved_result.values)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\main.py", line 229, in ws_llm_conversation
    async for chunk in handle_conversation_stream(data):
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\services.py", line 109, in handle_conversation_stream
    logger.info(f"Found Documents: {found_documents}")
Message: 'Found Documents: [(Document(id=\'lecture-00_Kursinformation.pdf-p0-c15-875d04f6-8fc6-4cc3-94d1-7a6526cd4162\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 12134.0}, page_content=\'nu är det uppdelat i fördjupning och plan. ”lab2 hade ett för stort fokus på syntax och kodning i c++ när det borde vara mer fokus på diagrammen.” –Tidigare år har vi testat att ta bort kodningen men det har gjort att man inte förstod hur diagrammen kopplade till kod. För att förstå kopplingen mellan diagram och kod så behöver vi ofta koda. Projektet: ”För fritt i vissa gruppers fall. En del kunder tyckte att grupperna skulle börja med att komma med fler idéer medan gruppen ville komma igång med arbetet” – Prata med kunden eller ta kontakt med kursledningen så tidigt som möjligt för att styra ”Det var dessutom inte tydligt att alla behövde pusha till git för att bli godkända” – Notera att vi kommer att titta på era bidrag i projekten. Inga slackers accepteras! (Detta sägs i introduktionsföreläsningen)\'), 0.811023563), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c4-9d9755a1-952e-4ab3-83a6-cd7f8192aee9\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 2863.0}, page_content=\'Biblioteket (Tatiana Liljeström) Informationssökning\\n\\n• Antiplagiering/referenshantering\\n\\nLitteratur\\n\\nPrimär kurslitteratur\\n\\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\\n\\nKomplement\\n\\nStudieguide, videos, PDF:er och webbsidor\\n\\nReferenslitteratur\\n\\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\\n\\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\\n\\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\\n\\nLaborationer - Partikelsystem\\n\\nÖvningar\\n\\n1. Versionshantering (git)\\n\\nVar klara efter första tillfället\\n\\n2. Hur designar man system?\\n\\nFyra-fem tillfällen\\n\\n3. Kodanalys och testning\\n\\nTvå-tre tillfällen\\n\\nLaboratoriearbete\\n\\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\\n\\nLaborationer\\n\\nVald programvara\\n\\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\\n\\nHur kan vi få en jämn fördelning?\\n\\nUtvecklingsprojekt\\n\\nMål och syfte\\n\\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\\n\\nSteg\\n\\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\\n\\nViktiga milstolpar för projektet\'), 0.7873723505), (Document(id=\'lecture-05_AnalysDesign_uppgifter.pdf-p0-c6-f1f0c40c-f9a1-4149-ab4d-6bead3a7a0be\', metadata={\'relative_path\': \'Fö5\\\\lecture-05_AnalysDesign_uppgifter.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp5f0khrxl\\\\lecture-05_AnalysDesign_uppgifter.pdf\', \'start_index\': 4556.0}, page_content=\'Komplettera med andra diagram där det underlättar förståelsen för systemet\\n\\nKlassdiagram\\n\\nSyfte\\n\\n– Strukturell vy – beskriva systemet struktur – Viktigast i programdesign – Användbar för modellering av systemarkitekturer\\n\\nViktiga delar\\n\\n– Klasser, variabler och metoder – Beroenden och arv\\n\\nmen också\\n\\n– Paket – strukturera på en abstrakt nivå\\n\\n– Objekt – visa på samarbeten vid körning\\n\\nKlassdiagram - Hämta bilder\\n\\nNotation\\n\\n= komposition\\n\\n= Generalisering (arv)\\n\\n= känner till\\n\\n= publik funktion\\n\\nKlassdiagram\\n\\nNästa steg\\n\\nStudieguide: Ca 2 timmars arbete att gå igenom\\n\\ninför föreläsning 6, men ni har 4-6 timmar på er.\\n\\nLabb imorgon: Utnyttja att ni har gått igenom\\n\\nmaterialet och exemplen från idag\\n\\nImorgon: Ett steg närmre själva kodandet\'), 0.7850544749999999), (Document(id=\'lecture-02_Utvecklingsmetodiker_uppgifter.pdf-p0-c3-87709eb3-9337-4d8f-826d-ee73f85149fb\', metadata={\'relative_path\': \'Fö2\\\\lecture-02_Utvecklingsmetodiker_uppgifter.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpxjfe3bqn\\\\lecture-02_Utvecklingsmetodiker_uppgifter.pdf\', \'start_index\': 2468.0}, page_content=\'Notera struktur ovan: 1) förutsättningar 2) alternativ • Beskriv inte agil utveckling utan hur det ska användas i just det här projektet\\n\\nAnvänd t.ex. google.scholar.com för att hitta artiklar som stödjer dina uttalande\\n\\nNästa steg (att göra hemma)\\n\\nVilka lämpliga modeller finns det för ditt projekt?\\n\\nKom igång med din projektplan!\\n\\n•\\n\\nKursdokument/Individuell rapport Tips för latex: • • Börja titta på/skriva • •\\n\\nOverleaf (online app) TeXnicCenter http://www.texniccenter.org/\\n\\nbakgrund och syfte (kapitel 1) projekthantering (kapitel 3)\\n\\nStudieguide – mycket att gå igenom inför fö. 3\\n\\nÅterkoppling\\n\\nhttps://www.mentimeter.com/ Kod 6901 6592\\n\\nVad fungerade bra?\\n\\nVad kan ändras till nästa gång?\'), 0.782661319), (Document(id=\'Laborationsprotokoll2025.xlsx-p0-c2-0f4ad174-f4db-41a9-9bac-e988b84cd9ea\', metadata={\'relative_path\': \'Laborationer\\\\Laborationsprotokoll2025.xlsx\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpig179gls\\\\Laborationsprotokoll2025.xlsx\', \'start_index\': 0.0}, page_content=\'Vecka Veckodag Startdatum Starttid Sluttid Lokal Studentgrupp Lab Redovisnig Peter Rickard Elin Tobias v 4 Tisdag 2025-01-21 00:00:00 10:15:00 12:00:00 K4504 MT3.a 1 lab1 x x 2.0 Markera de pass där ni inte kan vara med, med röd bakgrund. Set ett X för de pass där ni ska vara med.\\\\nJag har initialt lagt till Mig och Elin på alla a-guppens pass och Rickard och Tobias på alla b-gruppens pass.\\\\n\\\\njustera så att det passar er, huvudsaken är att vi försöker vara iaf 2 på varje pass. v 4 Onsdag 2025-01-22 00:00:00 08:15:00 10:00:00 K4504 MT3.b 1 lab1 x x 2.0 v 5 Onsdag 2025-01-29 00:00:00 08:15:00 10:00:00 K4504 MT3.b 2 lab1 x x 2.0 v 5 Onsdag 2025-01-29 00:00:00 15:15:00 17:00:00 K4504 MT3.a 2 lab1 x x 2.0 v 6 Måndag 2025-02-03 00:00:00 13:15:00 15:00:00 K4504 MT3.a 3 x x 2.0 v 6 Tisdag 2025-02-04 00:00:00 13:15:00 15:00:00 K4504 MT3.b 3 x x 2.0 v 7 Onsdag 2025-02-12 00:00:00 08:15:00 10:00:00 K4504 MT3.a 4 x x 2.0 v 7 Onsdag 2025-02-12 00:00:00 15:15:00 17:00:00 K4504 MT3.b 4 x x 2.0 v 8 Måndag 2025-02-17 00:00:00 13:15:00 15:00:00 K4504 MT3.a 5 lab2 x x 2.0 v 8 Tisdag 2025-02-18 00:00:00 13:15:00 15:00:00 K4504 MT3.b 5 lab2 x x 2.0 v 9 Tisdag 2025-02-25 00:00:00 13:15:00 15:00:00 K4504 MT3.a 6 lab2 x x 2.0 v 9 Onsdag 2025-02-26 00:00:00 13:15:00 15:00:00 K4504 MT3.b 6 lab2 x x 2.0 v 11 Tisdag 2025-03-11 00:00:00 13:15:00 15:00:00 K4504 MT3.a 7 x 1.0 v 11 Onsdag 2025-03-12 00:00:00 13:15:00 15:00:00 K4504 MT3.b 7 x x 2.0 v 14 Måndag 2025-03-31 00:00:00 13:15:00 15:00:00 K4504\'), 0.7759289739999999), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c3-e252cb37-b343-4ae2-895d-a590b163b01f\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 2256.0}, page_content=\'Introduktion till systemutveckling\\n\\n4. Systemarkitektur 5. Modellering (analys och visualisering) 6. Modul- och programdesign\\n\\nStandarder och praxis\\n\\n7. Implementation och designmönster 8. Refaktorering, testning, underhåll\\n\\nSpråkstrimman\\n\\n9. Informationssökning och antiplagiering 10. Föreläsning om språk och rapportskrivande\\n\\nSvenskastrimman\\n\\nSpråkligt stöd\\n\\n– Föreläsning om rapportskrivande – Stöd i rapportskrivande – Rättning av rapporter – Återkoppling och tips – Viktigt: Dyslexi eller dylikt? Be om hjälp om du känner att det behövs och/eller lämna en kommentar i inlämningen.\\n\\nVictoria Pihlgren\\n\\nBiblioteket (Tatiana Liljeström) Informationssökning\\n\\n• Antiplagiering/referenshantering\\n\\nLitteratur\\n\\nPrimär kurslitteratur\\n\\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\\n\\nKomplement\\n\\nStudieguide, videos, PDF:er och webbsidor\\n\\nReferenslitteratur\\n\\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\\n\\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\\n\\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\\n\\nLaborationer - Partikelsystem\\n\\nÖvningar\\n\\n1. Versionshantering (git)\\n\\nVar klara efter första tillfället\\n\\n2. Hur designar man system?\\n\\nFyra-fem tillfällen\\n\\n3. Kodanalys och testning\\n\\nTvå-tre tillfällen\\n\\nLaboratoriearbete\'), 0.7756649255), (Document(id=\'lecture-07_ImplementationDesignmonster_uppgifter.pdf-p0-c1-d11cd401-65c0-4458-8bac-aa3bed3073bf\', metadata={\'relative_path\': \'Fö7\\\\lecture-07_ImplementationDesignmönster_uppgifter.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpwq6puc4e\\\\lecture-07_ImplementationDesignmönster_uppgifter.pdf\', \'start_index\': 772.0}, page_content=\'Revidera din kod\\n\\n– Kontrollera läsbarhet – Kontrollera implementation – Skriv om på ett bättre sätt\\n\\n[Pfleeger]\\n\\nKontrollstrukturer och algoritmer\\n\\nKeep-It-Simple-Stupid (KISS)\\n\\n– Det finns ingen prestige i att skriva svårläst kod – Offra inte läsbarhet och struktur för prestanda\\n\\nLäsbarhet – uppifrån och ned\\n\\n– Beslut → handling undvik att bryta ett naturligt flöde – Undvik långa eller djupa block (if, for, while, …) – Samla kod som hör ihop – Göm detaljer i subrutiner\\n\\nvoid RegisterUser(User user) {\\n\\nif(user.name == null) { throw new Exception("Invalid User Name"); } if(user.password == null || user.password.length() < 5) {\\n\\nvoid RegisterUser(User user) {\\n\\nvalidateUser(user);\\n\\nthrow new Exception("Invalid password");\\n\\n} if(userRepository.exists(user)) {\\n\\nuserRepository.add(user); emailSender.sendEmail(user,\\n\\nthrow new Exception("User name already exists");\\n\\n"Account succesfully created");\\n\\n}\\n\\n}\\n\\nuserRepository.add(user); emailSender.sendEmail(user, "Account succesfully created");\\n\\n}\\n\\n[Pfleeger]\\n\\nKontrollstrukturer och algoritmer\\n\\nVariabel- och komponent-namn\\n\\n– Använd längre, beskrivande namn vid större räckvidd – Kan vara bra att inkludera enheter (sekunder etc.)\\n\\nfloat beansKg = 0.0; – Sällsynt med variabelnamn med en bokstav\\n\\nfor i in range(len(matrix)):\\n\\nfor row in range(len(matrix)):\\n\\nfor j in range(len(matrix[i])): # do stuff\\n\\nfor column in range(len(matrix[row])): # do stuff\\n\\n[Pfleeger]\\n\\nKod-dokumentation\\n\\nExtern kod-dokumentation\\n\\n– system-perspektiv\'), 0.7746375205), (Document(id=\'mall_individuell_rapport_(1).pdf-p0-c33-98b998fc-b125-466c-bdfd-4c4f6da77952\', metadata={\'relative_path\': \'Induviduell rapport\\\\mall_individuell_rapport (1).pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpsigyk7nf\\\\mall_individuell_rapport (1).pdf\', \'start_index\': 25064.0}, page_content=\'2.3.4 Rutiner för systemarkitektur och programdesign\\n\\nBeskriv och motivera hur gruppen ska arbeta med arkitektur och programdesign. Ska modellering an- vändas? Vilka modelleringstekniker och när i så fall? Tänk på att koppla och och motivera arbetssättet till det som är unikt med just det här projektet.\\n\\nNotera: Med programdesign menas stegen du gör innan du skriver kod - inte hur programmet ser ut rent visuellt. Se föreläsning om programdesign.\\n\\n2.3.5 Rutiner för dokumentation\\n\\nBeskriv och motivera hur gruppen ska arbeta med dokumentation av programkod, möten och andra delar av utvecklingsprocessen. Beskriv och motivera även vilket teknikstöd som kommer att användas.\\n\\n2.3.6 Rutiner för kvalitetssäkring\\n\\nBeskriv hur gruppen ska arbeta med kvalitetssäkring av programkod (granskning och testning) och vilket teknikstöd som kommer att användas. Vilka typer av tester som ska genomföras i just det här projektet, när och varför? Koppla gärna detta till andra arbetsprocesser/rutiner i kapitlet. Om användartester ska genomföras så beskriv 1) deras syfte, 2) vilka lämpliga alternativ som finns för detta syfte och 3) vilken typ av användartester som ska användas och när i processen de ska utföras. Samma skrivupplägg kan appliceras på andra typer av tester.\\n\\nExempel på hur ni kopplar texten till andra processer/rutiner/utvecklingsmetodiken: ”Dagen innan sprintgranskning ska ett integrationstest genomföras där samtlig ny funktionalitet i sprinten testas tillsammans.”\\n\\n9\\n\\nKapitel 3\'), 0.7722288070000001), (Document(id=\'Eklund_2020_KomplementTillTypografiskPrimer.pdf-p0-c10-3a88686c-f41d-4eff-bd98-ee85517a42f2\', metadata={\'relative_path\': \'Språkstrimma\\\\Eklund_2020_KomplementTillTypografiskPrimer.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp4bcglef3\\\\Eklund_2020_KomplementTillTypografiskPrimer.pdf\', \'start_index\': 7588.0}, page_content=\'Som sagt ovan så numrera gärna.\\n\\nAnvänd ledlinjer fram till sidnummer.\\n\\nIndraget ska ha samma marginal för varje ”nivå”; se Bild 1.\\n\\nBild 1: Illustration över indrag i innehållsförteckningar. Varje ny nivå ska ha samma vänstermarginal som texten på nivån över (de röda strecken).\\n\\n4\\n\\n14 Formelnumrering\\n\\nFormler ska numreras i löpande ordning (vissa av er har en väldig skum numreringsordning), med siffran högerställd, som i:\\n\\n< Formel 1 här > (1)\\n\\n< Formel 2 här > (2)\\n\\n15 Punktlistor\\n\\nDet är till stor hjälp för läsaren om man använder punktlistor (med eller utan nummer) för (t ex) hypoteser. Dessa kan sedan ”matchas” i slutsatserna på ett väldigt överskådlig sätt, som:\\n\\nStudiebeskrivning 1. Hypotes 1: Att X 2. Hypotes 3: Att Y\\n\\nResultat 1. Hypotes 1: Att X = bekräftad 2. Hypotes 3: Att Y = inte bekräftad\\n\\n15 Slutord\\n\\nJag kommer säkert att lägga till saker till detta dokument i framtiden. Stay tuned!\\n\\nRobert\\n\\n\\uf097 \\uf096\\n\\n5\'), 0.7710815965), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c16-2c999a6c-53d3-4ca3-9cd9-6cf6f3b163dc\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 12948.0}, page_content=\'Urval av ändringar\\n\\nLagt till bedömningskriterier (se kursinformation) Individuell rapport\\n\\n‒\\n\\nDelat upp rapporten i två delar för att bättre efterlikna en projektplan i ett företag. Mer instruktioner i mallen.\\n\\n‒\\n\\nUppdaterat bedömningsmall för att bättre reflektera bedömningskriterierna.\\n\\nLaborationer\\n\\n‒\\n\\nArbetat igenom instruktionerna för laboration 2 – förkortat ett moment.\\n\\n‒\\n\\nLagt till förberedelseinstruktioner i studieguiden.\\n\\n‒\\n\\nTydligare instruktioner när varje labb förväntas vara klar (se kursöversikt).\\n\\n‒\\n\\nTänk på att arbeta utanför schemalagd tid\\n\\nLisam\\n\\nDemo och genomgång.\\n\\nEfter pausen\\n\\nÖversikt över systemutveckling\'), 0.7708073555)]'
Arguments: ()
2025-05-07 10:53:35,534 - INFO - -----------------------------

client_session: <aiohttp.client.ClientSession object at 0x000001456F5BDB90>
2025-05-07 10:54:22,987 - INFO - Last Question: Vem är examinator i kursen?
2025-05-07 10:54:22,987 - INFO - Conversation: [ConversationData(id='a45dd4d9-183c-40f4-8be1-8f94b959ae03', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-c1cc2e79-e05e-49bb-b074-3a25b51ab773', role='assistant', content='Jag kan hjälpa till med frågor kring kursen TNM094, ge information om kursinnehåll, studietips, resurser, samt allmänna frågor relaterade till Linköpings universitet. Om du har specifika frågor, dela gärna med dig av dem!'), ConversationData(id='243ea137-a8bd-4dd8-ba2d-e565fa80fa83', role='user', content='Vad ska ingå i den individuella rapporten?'), ConversationData(id='run-63d0a870-11cc-4102-bd71-0e82eee42947', role='assistant', content='Den individuella rapporten ska innefatta följande delar:\n\n1. **Teknisk utredning**: En välmotiverad analys av ett problem relaterat till projektet och en genomarbetad plan för hur projektet kan genomföras.\n\n2. **Reflektioner**: Opiniösa reflektioner över din egen roll i projektet och hur det har gått, inklusive vad som fungerade väl och vad som kan förbättras. Detta bör innefatta referenser till relevant litteratur.\n\n3. **Listning av bidrag**: En lista över vilka som varit involverade i projektet, både i teamet och externt, samt en beskrivning av deras individuella bidrag.\n\n4. **Språk och formalia**: Rapporten ska vara språkligt godkänd med korrekt stavning, grammatik, flöde och struktur.\n\nTänk på att anpassa rapporten till målgruppen, förutsatt att de har viss förståelse för utvecklingsprinciper och medietekniska ämnen.'), ConversationData(id='66d08af5-4b7a-4e29-a351-97ff4491e490', role='user', content='Hur ska jag lägga upp kodstrukturen för lab2?'), ConversationData(id='run-ef61ffe6-506f-4d82-b580-84eabb73cbe4', role='assistant', content='För lab2 bör du tänka på följande aspekter när du lägger upp kodstrukturen:\n\n1. **Modulär struktur**: Dela upp din kod i moduler som hanterar olika funktionaliteter. Det kan vara bra att ha separata filer för olika klasser och funktioner.\n\n2. **Klassdiagram**: Utgå från det klassdiagram som ni har skapat. Se till att klasserna och deras relationer reflekteras i kodstrukturen.\n\n3. **Följa konventioner**: Använd beskrivande namn för klasser, metoder och variabler. Det gör koden enklare att läsa och förstå.\n\n4. **Versionshantering**: Använd Git för att hantera versioner av din kod. Se till att regelbundet pusha ändringar till repositoryt.\n\n5. **Dokumentation**: Kommentera din kod och dokumentera klasser och metoder noggrant så att det är klart för andra vad syftet och funktionen är.\n\n6. **Testning**: Strukturera koden så att det är enkelt att implementera och köra tester. Separera testfiler från produktionskoden.\n\nGenom att följa dessa riktlinjer kommer du att skapa en kodstruktur som är både lätt att följa och underhålla.'), ConversationData(id='eb12452f-df93-4f05-869f-e9bf98d432e9', role='user', content='Vem är examinator i kursen?')]
2025-05-07 10:54:22,989 - INFO - Number of Found Documents: 10
2025-05-07 10:54:22,989 - INFO - Found Documents: [(Document(id='lecture-00_Kursinformation.pdf-p0-c2-f8502eb8-5bae-4b5c-a071-f1570c8dd91e', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 1538.0}, page_content='Blockschema VT1\n\nVT1 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM119 TNM094 TNM094 TNM094 TNM119\n\n10-12 TNM094 TNM094 TNM119\n\n13-15 TNM094 TNM094 TNM094 TNM119 TNM094 15-17 TNM094 TNM094 TNM094 TNM119 TNM094\n\nBlockschema VT2\n\nVT2 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM094 TNM094 TND004 TNM094 TNM094\n\n10-12 TND004 TNM094 TNM094\n\n13-15 TNM094 TND004 TNM094 TNM094 TNM094 15-17 TNM094 TND004 TNM094 TNM094 TND004\n\nVäldigt mycket grupparbete i VT2 Upp till er att komma överens om när ni ska sitta i grupp och när det är individuellt arbete (gruppkontrakt)\n\nKursöversikt\n\nFöreläsningar\n\nProjekthantering\n\n1. 2. Utvecklingsmetodik 3. Projektanalys, krav och planering • Principer för systemutveckling\n\nIntroduktion till systemutveckling\n\n4. Systemarkitektur 5. Modellering (analys och visualisering) 6. Modul- och programdesign\n\nStandarder och praxis\n\n7. Implementation och designmönster 8. Refaktorering, testning, underhåll\n\nSpråkstrimman\n\n9. Informationssökning och antiplagiering 10. Föreläsning om språk och rapportskrivande\n\nSvenskastrimman\n\nSpråkligt stöd\n\n– Föreläsning om rapportskrivande – Stöd i rapportskrivande – Rättning av rapporter – Återkoppling och tips – Viktigt: Dyslexi eller dylikt? Be om hjälp om du känner att det behövs och/eller lämna en kommentar i inlämningen.\n\nVictoria Pihlgren\n\nBiblioteket (Tatiana Liljeström) Informationssökning\n\n• Antiplagiering/referenshantering\n\nLitteratur\n\nPrimär kurslitteratur'), 0.7610513569999999), (Document(id='instruktioner-individuell_rapport-x.pdf-p0-c5-37cce1bb-ff39-4f14-9356-dfd0e737257b', metadata={'relative_path': 'Induviduell rapport\\instruktioner-individuell_rapport-x.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpjk7zg8l1\\instruktioner-individuell_rapport-x.pdf', 'start_index': 3519.0}, page_content='Examination\n\nExaminationen sker genom rättning både språkligt och tekniskt och för godkänt på rapporten krävs godkänt på båda rättningarna. Den tekniska rättningen sker enligt bedömningsmallen i kursdokumenten (Individuell rapport/bedömningsmall-individuell_rapport) medan den språkliga rättningen sker av personal på ISV/Språkverkstaden.\n\nRättningsmallen för den tekniska examinationen listar viktiga aspekter i rapporten indelade. Dessa bedöms utifrån djup och bredd (där det är relevant) samt utifrån hur väl texten kopplar till det egna projektet. Här bedöms inte "rätt" eller "fel", endast hur väl ni motiverar era val genom hänvisning till teorier och referenser, men räkna inte med poäng för att bara nämna att till exempel testning behövs. För godkänt krävs att man har uppnått godkänt på alla delar. Vid första rättningen kommer inget samlat betyg att ges utan endast kommentarer eftersom det gör att ni kan fokusera på att förbättra rapporten i stället för betyget i sig.'), 0.7584366499999999), (Document(id='lecture-00_Kursinformation.pdf-p0-c0-2bc33288-4b57-4479-a52f-0e30ce489968', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\n\nKursinformation 2025\n\nDaniel Jönsson\n\nMen först lite om mig\n\nDenna kurs\n\nProjekthantering, processer och rutiner\n\nSkapa system som kunden vill ha, i tid och inom budget • Förstå vidden och betydelsen av systemutveckling\n\nPraxis, erfarenheter och riktlinjer • Fyll din personliga verktygslåda Medietekniskt kandidatarbete\n\nVisa på medietekniskt kunskap och ingenjörsmässighet\n\nKräver stort personligt ansvar!\n\nKommunicera med examinatorn om något känns oklart • Läs instruktioner, lisam-uppdatering och e-brev\n\nVad är Medietekniskt?\n\nNi har läst\n\n25 kurser på 60 hp + 60 hp + 30 hp = 150 hp Varav minst 60 hp inom medietekniska ämnen (Datorgrafik, visualisering, VR-teknik, elektronisk publicering, ljud, bildbehandling, etc.)\n\nDags att ta fram\n\nGömd kunskap och outnyttjade förmågor • Glömd kurslitteratur, länkar och kompendier\n\nForsknings- och utforskningslustan\n\nDenna kurs\n\nTNM094, 18 hp = 9 hp / termin = 60 % fart\n\nUPG1 Uppsats (1,5 hp U,G)\n\nIndividuell rapport över en egen plan för ett tilldelat projekt. LAB1 Laborationer (2 hp U,G) Övningar genomförs i grupper om två alternativt individuellt. PRA1 Projekt (14 hp U,G) Genomförs i grupper om 4–8. • UPG2 Opponering (0,5 hp U,G)\n\nIndividuell, skriftlig opponering baserad på projektrapporten.\n\nDenna kurs\n\nParallell med\n\nTNM119 Introduktion till Arificiell Intelligens, 6 hp = 40 % fart TND004 Datastrukturer, 6 hp = 40 % fart\n\nTNM094 - 60 % av schemat'), 0.7579979299999999), (Document(id='lecture-00_Kursinformation.pdf-p0-c16-2c999a6c-53d3-4ca3-9cd9-6cf6f3b163dc', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 12948.0}, page_content='Urval av ändringar\n\nLagt till bedömningskriterier (se kursinformation) Individuell rapport\n\n‒\n\nDelat upp rapporten i två delar för att bättre efterlikna en projektplan i ett företag. Mer instruktioner i mallen.\n\n‒\n\nUppdaterat bedömningsmall för att bättre reflektera bedömningskriterierna.\n\nLaborationer\n\n‒\n\nArbetat igenom instruktionerna för laboration 2 – förkortat ett moment.\n\n‒\n\nLagt till förberedelseinstruktioner i studieguiden.\n\n‒\n\nTydligare instruktioner när varje labb förväntas vara klar (se kursöversikt).\n\n‒\n\nTänk på att arbeta utanför schemalagd tid\n\nLisam\n\nDemo och genomgång.\n\nEfter pausen\n\nÖversikt över systemutveckling'), 0.7568872275), (Document(id='lecture-00_Kursinformation.pdf-p0-c3-e252cb37-b343-4ae2-895d-a590b163b01f', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 2256.0}, page_content='Introduktion till systemutveckling\n\n4. Systemarkitektur 5. Modellering (analys och visualisering) 6. Modul- och programdesign\n\nStandarder och praxis\n\n7. Implementation och designmönster 8. Refaktorering, testning, underhåll\n\nSpråkstrimman\n\n9. Informationssökning och antiplagiering 10. Föreläsning om språk och rapportskrivande\n\nSvenskastrimman\n\nSpråkligt stöd\n\n– Föreläsning om rapportskrivande – Stöd i rapportskrivande – Rättning av rapporter – Återkoppling och tips – Viktigt: Dyslexi eller dylikt? Be om hjälp om du känner att det behövs och/eller lämna en kommentar i inlämningen.\n\nVictoria Pihlgren\n\nBiblioteket (Tatiana Liljeström) Informationssökning\n\n• Antiplagiering/referenshantering\n\nLitteratur\n\nPrimär kurslitteratur\n\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\n\nKomplement\n\nStudieguide, videos, PDF:er och webbsidor\n\nReferenslitteratur\n\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\n\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\n\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\n\nLaborationer - Partikelsystem\n\nÖvningar\n\n1. Versionshantering (git)\n\nVar klara efter första tillfället\n\n2. Hur designar man system?\n\nFyra-fem tillfällen\n\n3. Kodanalys och testning\n\nTvå-tre tillfällen\n\nLaboratoriearbete'), 0.756858021), (Document(id='instruktioner-projekt.pdf-p0-c0-55f1e091-7d9a-45cd-844f-e4629fb39a50', metadata={'relative_path': 'Utvecklingsprojekt\\instruktioner-projekt.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpoyqiq0_v\\instruktioner-projekt.pdf', 'start_index': 0.0}, page_content='Projekt\n\nSyfte Efter kursen kan studenten ta ut kandidatexamen och för det måste man ha uppvisat ämneskunskaper, individuella och yrkesmässiga färdigheter, att kunna arbeta i grupp och kommunicera och tillämpa medietekniska kunskaper, exempelvis publicering, ljud- och bildteknik, datorgrafik och visualisering. Detta demonstreras genom projektarbetet, tillsammans med övning och den uppvisning av kursspecifika färdigheter som behövs för godkänt i kursen.\n\nUppgiften Ett utvecklingsprojekt inom ämnet medieteknik kommer att genomföras i grupper om 4–8 studenter. Det ger projekt på ca 1500 till 3000 arbetstimmar. Varje student anger vilket projekt de helst vill jobba med, men tyvärr kan inte allas önskan uppfyllas.\n\nProjektet ska vara ett kandidatarbete, d v s tillämpa de kunskaper som förvärvats genom tidigare kurser. För godkänt ska teamet visa på förmåga att tillämpa tidigare förvärvade kunskaper (inom medieteknik och teknik i allmänhet), ingenjörsmässighet och tekniker för systemutveckling.\n\nIndelning i team En lista över möjliga projekt har innan kursstart distribuerats till alla som är anmälda till kursen. Efter första föreläsningen fyller varje student i ett formulär där de dels gör en självvärdering och dels anger hur gärna de önskar arbeta i varje projekt. Självvärdering och önskemål används sedan av kursledningen för att dela upp studenterna i lagom grupper. Många av förslagen kommer inte att bli av och i vissa fall kan mer än ett team få samma uppgift.'), 0.7561222015), (Document(id='lecture-00_Kursinformation.pdf-p0-c4-9d9755a1-952e-4ab3-83a6-cd7f8192aee9', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 2863.0}, page_content='Biblioteket (Tatiana Liljeström) Informationssökning\n\n• Antiplagiering/referenshantering\n\nLitteratur\n\nPrimär kurslitteratur\n\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\n\nKomplement\n\nStudieguide, videos, PDF:er och webbsidor\n\nReferenslitteratur\n\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\n\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\n\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\n\nLaborationer - Partikelsystem\n\nÖvningar\n\n1. Versionshantering (git)\n\nVar klara efter första tillfället\n\n2. Hur designar man system?\n\nFyra-fem tillfällen\n\n3. Kodanalys och testning\n\nTvå-tre tillfällen\n\nLaboratoriearbete\n\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\n\nLaborationer\n\nVald programvara\n\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\n\nHur kan vi få en jämn fördelning?\n\nUtvecklingsprojekt\n\nMål och syfte\n\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\n\nSteg\n\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\n\nViktiga milstolpar för projektet'), 0.7559552789999999), (Document(id='lecture-00_Kursinformation.pdf-p0-c5-b93b596a-5383-4c3d-b40e-384cef4a4783', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 3568.0}, page_content='Två-tre tillfällen\n\nLaboratoriearbete\n\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\n\nLaborationer\n\nVald programvara\n\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\n\nHur kan vi få en jämn fördelning?\n\nUtvecklingsprojekt\n\nMål och syfte\n\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\n\nSteg\n\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\n\nViktiga milstolpar för projektet\n\nKundkontakt Projektplan Avstämningar Färdig projektrapport (2x) Slutseminarium\n\nViktiga personliga hållpunkter\n\nIndividuell rapport (2x) – lärt er inför andra inlämningen\n\nOpponeringsrapport\n\nFörsta två veckorna i projektet\n\nUppstartsmöte för gruppen\n\nKundkontakt Fördela ansvarsområden för undersökning av lösningar Sätt upp versionshantering och bjud in mig\n\nSe till att ni kan rivstarta efter individuell rapport\n\nIndividuell rapport\n\n1,5 hp = 40 h arbetstid Två delar • Teknisk utredning\n\nUtred olika tekniska lösningar eller hur gruppen bör arbeta Använd resultatet av utredningen i projektplanen\n\nProjektplan\n\nPlanera utvecklingsprojektet med frihet att inkludera egna visioner Utnyttja teorier för att skapa en bra plan\n\nEn rapport'), 0.755788058), (Document(id='lecture-00_Kursinformation.pdf-p0-c14-6aeb9730-2bbd-4f1b-a218-b7805274a72b', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 11391.0}, page_content='Antal studenter: 52 | Antal svar: 44 | Medel: 3,4 ”de olika examinationsmomenten var viktiga och bra” ”kommunikation mellan projektgrupper och kunder kunde vara problematisk” , –Tänk på att detta förekommer i verkligheten. ”Föreläsningarna var bra enligt studenterna men förberedelserna inför dem var för stora.” –Omvänt klassrum blir det lite så. I regel är förberedelserna 30-60 minuter långa och ni har ca 6 timmar per dag. ”Många studenter tyckte inte om den individuella rapporten då kompletteringar som kom senare fick dem att skriva saker som inte längre var sant.” – Kortat ner tiden mellan komplettering och ändrat upplägget på rapporten. ”Jag hade mycket hellre haft en individuell fördjupningsuppgift (med tekniskt fokus)” – Check, nu är det uppdelat i fördjupning och plan. ”lab2 hade ett för stort fokus på syntax och kodning i c++ när det borde vara mer fokus på diagrammen.” –Tidigare år har vi testat att ta bort kodningen men det har gjort att man inte förstod hur diagrammen kopplade till kod. För att förstå kopplingen mellan diagram och kod så behöver vi ofta koda. Projektet: ”För fritt i vissa gruppers fall. En del kunder tyckte att grupperna skulle börja med att komma med fler idéer medan gruppen ville komma igång med arbetet” – Prata med kunden eller ta kontakt med kursledningen så tidigt som möjligt för att styra ”Det var dessutom inte tydligt att alla behövde pusha till git för att bli godkända” – Notera att vi kommer att titta på era bidrag i projekten. Inga'), 0.754988), (Document(id='LIPs._Latt_Interaktiv_Projektstyrning_pa_Linkopings_universitet.pdf-p0-c33-aade3a16-39f7-4736-9b27-ec7baba0f845', metadata={'relative_path': 'Fö2\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpbkog3_2y\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf', 'start_index': 25595.0}, page_content='Generellt sett så använder Kent Palmkvist modellen rakt av, dock utvidgar han den till att innefatta kontinuerlig iterering av kravspecifikationen i de sista kurserna. Detta innebär att projektgruppen under projektets gång ständigt granskar sin kravspecifikation och gör befogade och nödvändiga revideringar av den ursprungliga istället för att jämföra det slutliga resultatet med den kravspecifikation man satt upp från början.\n\n4.1.2 Alternativt projektgenomförande Magdalena Svensson har till skillnad från Kent Palmkvist ovan valt att bedriva sin laborativa projektkurs i bioteknik på KB-programmet enligt ett annat upplägg, detta trots påtryckningar från universitetet att även denna kurs ska använda sig utav LIPS-modellen.\n\nProjektkursen bedrivs parallellt med en kurs i projektledning som hålls av Tomas Magnusson, universitetslektor vid institutionen för ekonomisk och industriell utveckling (IEI). De båda kurserna integreras med varandra på så sätt att den projektorienterade kunskapen, vad gäller roller, budget, tidsplan, milstolpar och så vidare, direkt appliceras på projektet inom bioteknik. Magdalena Svensson står för forskningsrelaterad kunskap inom bioteknik medan Tomas Magnusson har ansvar för de mer projektanknutna momenten.'), 0.7534867525)]
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\u2012' in position 5414: character maps to <undefined>
Call stack:
  File "<string>", line 1, in <module>
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 135, in _main
    return self._bootstrap(parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 314, in _bootstrap
    self.run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\_subprocess.py", line 80, in subprocess_started
    target(sockets=sockets)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\server.py", line 66, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 641, in run_until_complete
    self.run_forever()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 608, in run_forever
    self._run_once()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1936, in _run_once
    handle._run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 84, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\protocols\websockets\websockets_impl.py", line 243, in run_asgi
    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)  # type: ignore[func-returns-value]
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\middleware\proxy_headers.py", line 60, in __call__        
    return await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\errors.py", line 152, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\cors.py", line 77, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 362, in handle
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 95, in app
    await wrap_app_handling_exceptions(app, session)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 93, in app
    await func(session)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\routing.py", line 383, in app
    await dependant.call(**solved_result.values)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\main.py", line 229, in ws_llm_conversation
    async for chunk in handle_conversation_stream(data):
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\services.py", line 109, in handle_conversation_stream
    logger.info(f"Found Documents: {found_documents}")
Message: 'Found Documents: [(Document(id=\'lecture-00_Kursinformation.pdf-p0-c2-f8502eb8-5bae-4b5c-a071-f1570c8dd91e\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 1538.0}, page_content=\'Blockschema VT1\\n\\nVT1 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM119 TNM094 TNM094 TNM094 TNM119\\n\\n10-12 TNM094 TNM094 TNM119\\n\\n13-15 TNM094 TNM094 TNM094 TNM119 TNM094 15-17 TNM094 TNM094 TNM094 TNM119 TNM094\\n\\nBlockschema VT2\\n\\nVT2 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM094 TNM094 TND004 TNM094 TNM094\\n\\n10-12 TND004 TNM094 TNM094\\n\\n13-15 TNM094 TND004 TNM094 TNM094 TNM094 15-17 TNM094 TND004 TNM094 TNM094 TND004\\n\\nVäldigt mycket grupparbete i VT2 Upp till er att komma överens om när ni ska sitta i grupp och när det är individuellt arbete (gruppkontrakt)\\n\\nKursöversikt\\n\\nFöreläsningar\\n\\nProjekthantering\\n\\n1. 2. Utvecklingsmetodik 3. Projektanalys, krav och planering • Principer för systemutveckling\\n\\nIntroduktion till systemutveckling\\n\\n4. Systemarkitektur 5. Modellering (analys och visualisering) 6. Modul- och programdesign\\n\\nStandarder och praxis\\n\\n7. Implementation och designmönster 8. Refaktorering, testning, underhåll\\n\\nSpråkstrimman\\n\\n9. Informationssökning och antiplagiering 10. Föreläsning om språk och rapportskrivande\\n\\nSvenskastrimman\\n\\nSpråkligt stöd\\n\\n– Föreläsning om rapportskrivande – Stöd i rapportskrivande – Rättning av rapporter – Återkoppling och tips – Viktigt: Dyslexi eller dylikt? Be om hjälp om du känner att det behövs och/eller lämna en kommentar i inlämningen.\\n\\nVictoria Pihlgren\\n\\nBiblioteket (Tatiana Liljeström) Informationssökning\\n\\n• Antiplagiering/referenshantering\\n\\nLitteratur\\n\\nPrimär kurslitteratur\'), 0.7610513569999999), (Document(id=\'instruktioner-individuell_rapport-x.pdf-p0-c5-37cce1bb-ff39-4f14-9356-dfd0e737257b\', metadata={\'relative_path\': \'Induviduell rapport\\\\instruktioner-individuell_rapport-x.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpjk7zg8l1\\\\instruktioner-individuell_rapport-x.pdf\', \'start_index\': 3519.0}, page_content=\'Examination\\n\\nExaminationen sker genom rättning både språkligt och tekniskt och för godkänt på rapporten krävs godkänt på båda rättningarna. Den tekniska rättningen sker enligt bedömningsmallen i kursdokumenten (Individuell rapport/bedömningsmall-individuell_rapport) medan den språkliga rättningen sker av personal på ISV/Språkverkstaden.\\n\\nRättningsmallen för den tekniska examinationen listar viktiga aspekter i rapporten indelade. Dessa bedöms utifrån djup och bredd (där det är relevant) samt utifrån hur väl texten kopplar till det egna projektet. Här bedöms inte "rätt" eller "fel", endast hur väl ni motiverar era val genom hänvisning till teorier och referenser, men räkna inte med poäng för att bara nämna att till exempel testning behövs. För godkänt krävs att man har uppnått godkänt på alla delar. Vid första rättningen kommer inget samlat betyg att ges utan endast kommentarer eftersom det gör att ni kan fokusera på att förbättra rapporten i stället för betyget i sig.\'), 0.7584366499999999), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c0-2bc33288-4b57-4479-a52f-0e30ce489968\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 0.0}, page_content=\'TNM094 – Medietekniskt kandidatprojekt\\n\\nKursinformation 2025\\n\\nDaniel Jönsson\\n\\nMen först lite om mig\\n\\nDenna kurs\\n\\nProjekthantering, processer och rutiner\\n\\nSkapa system som kunden vill ha, i tid och inom budget • Förstå vidden och betydelsen av systemutveckling\\n\\nPraxis, erfarenheter och riktlinjer • Fyll din personliga verktygslåda Medietekniskt kandidatarbete\\n\\nVisa på medietekniskt kunskap och ingenjörsmässighet\\n\\nKräver stort personligt ansvar!\\n\\nKommunicera med examinatorn om något känns oklart • Läs instruktioner, lisam-uppdatering och e-brev\\n\\nVad är Medietekniskt?\\n\\nNi har läst\\n\\n25 kurser på 60 hp + 60 hp + 30 hp = 150 hp Varav minst 60 hp inom medietekniska ämnen (Datorgrafik, visualisering, VR-teknik, elektronisk publicering, ljud, bildbehandling, etc.)\\n\\nDags att ta fram\\n\\nGömd kunskap och outnyttjade förmågor • Glömd kurslitteratur, länkar och kompendier\\n\\nForsknings- och utforskningslustan\\n\\nDenna kurs\\n\\nTNM094, 18 hp = 9 hp / termin = 60 % fart\\n\\nUPG1 Uppsats (1,5 hp U,G)\\n\\nIndividuell rapport över en egen plan för ett tilldelat projekt. LAB1 Laborationer (2 hp U,G) Övningar genomförs i grupper om två alternativt individuellt. PRA1 Projekt (14 hp U,G) Genomförs i grupper om 4–8. • UPG2 Opponering (0,5 hp U,G)\\n\\nIndividuell, skriftlig opponering baserad på projektrapporten.\\n\\nDenna kurs\\n\\nParallell med\\n\\nTNM119 Introduktion till Arificiell Intelligens, 6 hp = 40 % fart TND004 Datastrukturer, 6 hp = 40 % fart\\n\\nTNM094 - 60 % av schemat\'), 0.7579979299999999), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c16-2c999a6c-53d3-4ca3-9cd9-6cf6f3b163dc\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 12948.0}, page_content=\'Urval av ändringar\\n\\nLagt till bedömningskriterier (se kursinformation) Individuell rapport\\n\\n‒\\n\\nDelat upp rapporten i två delar för att bättre efterlikna en projektplan i ett företag. Mer instruktioner i mallen.\\n\\n‒\\n\\nUppdaterat bedömningsmall för att bättre reflektera bedömningskriterierna.\\n\\nLaborationer\\n\\n‒\\n\\nArbetat igenom instruktionerna för laboration 2 – förkortat ett moment.\\n\\n‒\\n\\nLagt till förberedelseinstruktioner i studieguiden.\\n\\n‒\\n\\nTydligare instruktioner när varje labb förväntas vara klar (se kursöversikt).\\n\\n‒\\n\\nTänk på att arbeta utanför schemalagd tid\\n\\nLisam\\n\\nDemo och genomgång.\\n\\nEfter pausen\\n\\nÖversikt över systemutveckling\'), 0.7568872275), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c3-e252cb37-b343-4ae2-895d-a590b163b01f\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 2256.0}, page_content=\'Introduktion till systemutveckling\\n\\n4. Systemarkitektur 5. Modellering (analys och visualisering) 6. Modul- och programdesign\\n\\nStandarder och praxis\\n\\n7. Implementation och designmönster 8. Refaktorering, testning, underhåll\\n\\nSpråkstrimman\\n\\n9. Informationssökning och antiplagiering 10. Föreläsning om språk och rapportskrivande\\n\\nSvenskastrimman\\n\\nSpråkligt stöd\\n\\n– Föreläsning om rapportskrivande – Stöd i rapportskrivande – Rättning av rapporter – Återkoppling och tips – Viktigt: Dyslexi eller dylikt? Be om hjälp om du känner att det behövs och/eller lämna en kommentar i inlämningen.\\n\\nVictoria Pihlgren\\n\\nBiblioteket (Tatiana Liljeström) Informationssökning\\n\\n• Antiplagiering/referenshantering\\n\\nLitteratur\\n\\nPrimär kurslitteratur\\n\\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\\n\\nKomplement\\n\\nStudieguide, videos, PDF:er och webbsidor\\n\\nReferenslitteratur\\n\\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\\n\\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\\n\\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\\n\\nLaborationer - Partikelsystem\\n\\nÖvningar\\n\\n1. Versionshantering (git)\\n\\nVar klara efter första tillfället\\n\\n2. Hur designar man system?\\n\\nFyra-fem tillfällen\\n\\n3. Kodanalys och testning\\n\\nTvå-tre tillfällen\\n\\nLaboratoriearbete\'), 0.756858021), (Document(id=\'instruktioner-projekt.pdf-p0-c0-55f1e091-7d9a-45cd-844f-e4629fb39a50\', metadata={\'relative_path\': \'Utvecklingsprojekt\\\\instruktioner-projekt.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpoyqiq0_v\\\\instruktioner-projekt.pdf\', \'start_index\': 0.0}, page_content=\'Projekt\\n\\nSyfte Efter kursen kan studenten ta ut kandidatexamen och för det måste man ha uppvisat ämneskunskaper, individuella och yrkesmässiga färdigheter, att kunna arbeta i grupp och kommunicera och tillämpa medietekniska kunskaper, exempelvis publicering, ljud- och bildteknik, datorgrafik och visualisering. Detta demonstreras genom projektarbetet, tillsammans med övning och den uppvisning av kursspecifika färdigheter som behövs för godkänt i kursen.\\n\\nUppgiften Ett utvecklingsprojekt inom ämnet medieteknik kommer att genomföras i grupper om 4–8 studenter. Det ger projekt på ca 1500 till 3000 arbetstimmar. Varje student anger vilket projekt de helst vill jobba med, men tyvärr kan inte allas önskan uppfyllas.\\n\\nProjektet ska vara ett kandidatarbete, d v s tillämpa de kunskaper som förvärvats genom tidigare kurser. För godkänt ska teamet visa på förmåga att tillämpa tidigare förvärvade kunskaper (inom medieteknik och teknik i allmänhet), ingenjörsmässighet och tekniker för systemutveckling.\\n\\nIndelning i team En lista över möjliga projekt har innan kursstart distribuerats till alla som är anmälda till kursen. Efter första föreläsningen fyller varje student i ett formulär där de dels gör en självvärdering och dels anger hur gärna de önskar arbeta i varje projekt. Självvärdering och önskemål används sedan av kursledningen för att dela upp studenterna i lagom grupper. Många av förslagen kommer inte att bli av och i vissa fall kan mer än ett team få samma uppgift.\'), 0.7561222015), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c4-9d9755a1-952e-4ab3-83a6-cd7f8192aee9\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 2863.0}, page_content=\'Biblioteket (Tatiana Liljeström) Informationssökning\\n\\n• Antiplagiering/referenshantering\\n\\nLitteratur\\n\\nPrimär kurslitteratur\\n\\nSoftware Engineering, tenth edition, by Ian Sommerville • Studieguide\\n\\nKomplement\\n\\nStudieguide, videos, PDF:er och webbsidor\\n\\nReferenslitteratur\\n\\nRefactoring, Improving the Design of Existing Code, by Martin Fowler et al.\\n\\nDesign Patterns, Elements of Reusable Object-Oriented Software, by Gamma et al.\\n\\nUML 2 and the Unified Process, Second Edition – Practical Object-Oriented Analysis and Design\\n\\nLaborationer - Partikelsystem\\n\\nÖvningar\\n\\n1. Versionshantering (git)\\n\\nVar klara efter första tillfället\\n\\n2. Hur designar man system?\\n\\nFyra-fem tillfällen\\n\\n3. Kodanalys och testning\\n\\nTvå-tre tillfällen\\n\\nLaboratoriearbete\\n\\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\\n\\nLaborationer\\n\\nVald programvara\\n\\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\\n\\nHur kan vi få en jämn fördelning?\\n\\nUtvecklingsprojekt\\n\\nMål och syfte\\n\\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\\n\\nSteg\\n\\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\\n\\nViktiga milstolpar för projektet\'), 0.7559552789999999), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c5-b93b596a-5383-4c3d-b40e-384cef4a4783\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 3568.0}, page_content=\'Två-tre tillfällen\\n\\nLaboratoriearbete\\n\\nArbeta i par (testa par-programmering) 3 övningar, 2 hp ≈ 53 h ≈ 18 h / övning (16 h handledning) Handledning och examination av Peter Steneteg, Rickard Falk samt tidigare studenter\\n\\nLaborationer\\n\\nVald programvara\\n\\nFör en grundläggande förståelse och erfarenhet - inte för att lära sig specifika verktyg eller menyer\\n\\nHur kan vi få en jämn fördelning?\\n\\nUtvecklingsprojekt\\n\\nMål och syfte\\n\\nPrimärt: lära sig och examineras i systemutveckling Primärt: använda och visa på medieteknisk kunskap Primärt: Lära sig vetenskapligt arbete (utreda & utvärdera) Sekundärt: producera fungerande programvara\\n\\nSteg\\n\\nteorier + idéer + visioner → individuell plan → gemensam plan → arbete\\n\\nViktiga milstolpar för projektet\\n\\nKundkontakt Projektplan Avstämningar Färdig projektrapport (2x) Slutseminarium\\n\\nViktiga personliga hållpunkter\\n\\nIndividuell rapport (2x) – lärt er inför andra inlämningen\\n\\nOpponeringsrapport\\n\\nFörsta två veckorna i projektet\\n\\nUppstartsmöte för gruppen\\n\\nKundkontakt Fördela ansvarsområden för undersökning av lösningar Sätt upp versionshantering och bjud in mig\\n\\nSe till att ni kan rivstarta efter individuell rapport\\n\\nIndividuell rapport\\n\\n1,5 hp = 40 h arbetstid Två delar • Teknisk utredning\\n\\nUtred olika tekniska lösningar eller hur gruppen bör arbeta Använd resultatet av utredningen i projektplanen\\n\\nProjektplan\\n\\nPlanera utvecklingsprojektet med frihet att inkludera egna visioner Utnyttja teorier för att skapa en bra plan\\n\\nEn rapport\'), 0.755788058), (Document(id=\'lecture-00_Kursinformation.pdf-p0-c14-6aeb9730-2bbd-4f1b-a218-b7805274a72b\', metadata={\'relative_path\': \'Fö1\\\\lecture-00_Kursinformation.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmp89s_nsit\\\\lecture-00_Kursinformation.pdf\', \'start_index\': 11391.0}, page_content=\'Antal studenter: 52 | Antal svar: 44 | Medel: 3,4 ”de olika examinationsmomenten var viktiga och bra” ”kommunikation mellan projektgrupper och kunder kunde vara problematisk” , –Tänk på att detta förekommer i verkligheten. ”Föreläsningarna var bra enligt studenterna men förberedelserna inför dem var för stora.” –Omvänt klassrum blir det lite så. I regel är förberedelserna 30-60 minuter långa och ni har ca 6 timmar per dag. ”Många studenter tyckte inte om den individuella rapporten då kompletteringar som kom senare fick dem att skriva saker som inte längre var sant.” – Kortat ner tiden mellan komplettering och ändrat upplägget på rapporten. ”Jag hade mycket hellre haft en individuell fördjupningsuppgift (med tekniskt fokus)” – Check, nu är det uppdelat i fördjupning och plan. ”lab2 hade ett för stort fokus på syntax och kodning i c++ när det borde vara mer fokus på diagrammen.” –Tidigare år har vi testat att ta bort kodningen men det har gjort att man inte förstod hur diagrammen kopplade till kod. För att förstå kopplingen mellan diagram och kod så behöver vi ofta koda. Projektet: ”För fritt i vissa gruppers fall. En del kunder tyckte att grupperna skulle börja med att komma med fler idéer medan gruppen ville komma igång med arbetet” – Prata med kunden eller ta kontakt med kursledningen så tidigt som möjligt för att styra ”Det var dessutom inte tydligt att alla behövde pusha till git för att bli godkända” – Notera att vi kommer att titta på era bidrag i projekten. Inga\'), 0.754988), (Document(id=\'LIPs._Latt_Interaktiv_Projektstyrning_pa_Linkopings_universitet.pdf-p0-c33-aade3a16-39f7-4736-9b27-ec7baba0f845\', metadata={\'relative_path\': \'Fö2\\\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf\', \'source\': \'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpbkog3_2y\\\\LIPs. Lätt Interaktiv Projektstyrning på Linköpings universitet.pdf\', \'start_index\': 25595.0}, page_content=\'Generellt sett så använder Kent Palmkvist modellen rakt av, dock utvidgar han den till att innefatta kontinuerlig iterering av kravspecifikationen i de sista kurserna. Detta innebär att projektgruppen under projektets gång ständigt granskar sin kravspecifikation och gör befogade och nödvändiga revideringar av den ursprungliga istället för att jämföra det slutliga resultatet med den kravspecifikation man satt upp från början.\\n\\n4.1.2 Alternativt projektgenomförande Magdalena Svensson har till skillnad från Kent Palmkvist ovan valt att bedriva sin laborativa projektkurs i bioteknik på KB-programmet enligt ett annat upplägg, detta trots påtryckningar från universitetet att även denna kurs ska använda sig utav LIPS-modellen.\\n\\nProjektkursen bedrivs parallellt med en kurs i projektledning som hålls av Tomas Magnusson, universitetslektor vid institutionen för ekonomisk och industriell utveckling (IEI). De båda kurserna integreras med varandra på så sätt att den projektorienterade kunskapen, vad gäller roller, budget, tidsplan, milstolpar och så vidare, direkt appliceras på projektet inom bioteknik. Magdalena Svensson står för forskningsrelaterad kunskap inom bioteknik medan Tomas Magnusson har ansvar för de mer projektanknutna momenten.\'), 0.7534867525)]'
Arguments: ()
2025-05-07 10:54:23,006 - INFO - -----------------------------

client_session: <aiohttp.client.ClientSession object at 0x000001456E895650>
2025-05-07 10:55:11,009 - INFO - Last Question: Kan du förklara systemarkitekturen för kaffemaskinen?
2025-05-07 10:55:11,009 - INFO - Conversation: [ConversationData(id='a45dd4d9-183c-40f4-8be1-8f94b959ae03', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-c1cc2e79-e05e-49bb-b074-3a25b51ab773', role='assistant', content='Jag kan hjälpa till med frågor kring kursen TNM094, ge information om kursinnehåll, studietips, resurser, samt allmänna frågor relaterade till Linköpings universitet. Om du har specifika frågor, dela gärna med dig av dem!'), ConversationData(id='243ea137-a8bd-4dd8-ba2d-e565fa80fa83', role='user', content='Vad ska ingå i den individuella rapporten?'), ConversationData(id='run-63d0a870-11cc-4102-bd71-0e82eee42947', role='assistant', content='Den individuella rapporten ska innefatta följande delar:\n\n1. **Teknisk utredning**: En välmotiverad analys av ett problem relaterat till projektet och en genomarbetad plan för hur projektet kan genomföras.\n\n2. **Reflektioner**: Opiniösa reflektioner över din egen roll i projektet och hur det har gått, inklusive vad som fungerade väl och vad som kan förbättras. Detta bör innefatta referenser till relevant litteratur.\n\n3. **Listning av bidrag**: En lista över vilka som varit involverade i projektet, både i teamet och externt, samt en beskrivning av deras individuella bidrag.\n\n4. **Språk och formalia**: Rapporten ska vara språkligt godkänd med korrekt stavning, grammatik, flöde och struktur.\n\nTänk på att anpassa rapporten till målgruppen, förutsatt att de har viss förståelse för utvecklingsprinciper och medietekniska ämnen.'), ConversationData(id='66d08af5-4b7a-4e29-a351-97ff4491e490', role='user', content='Hur ska jag lägga upp kodstrukturen för lab2?'), ConversationData(id='run-ef61ffe6-506f-4d82-b580-84eabb73cbe4', role='assistant', content='För lab2 bör du tänka på följande aspekter när du lägger upp kodstrukturen:\n\n1. **Modulär struktur**: Dela upp din kod i moduler som hanterar olika funktionaliteter. Det kan vara bra att ha separata filer för olika klasser och funktioner.\n\n2. **Klassdiagram**: Utgå från det klassdiagram som ni har skapat. Se till att klasserna och deras relationer reflekteras i kodstrukturen.\n\n3. **Följa konventioner**: Använd beskrivande namn för klasser, metoder och variabler. Det gör koden enklare att läsa och förstå.\n\n4. **Versionshantering**: Använd Git för att hantera versioner av din kod. Se till att regelbundet pusha ändringar till repositoryt.\n\n5. **Dokumentation**: Kommentera din kod och dokumentera klasser och metoder noggrant så att det är klart för andra vad syftet och funktionen är.\n\n6. **Testning**: Strukturera koden så att det är enkelt att implementera och köra tester. Separera testfiler från produktionskoden.\n\nGenom att följa dessa riktlinjer kommer du att skapa en kodstruktur som är både lätt att följa och underhålla.'), ConversationData(id='eb12452f-df93-4f05-869f-e9bf98d432e9', role='user', content='Vem är examinator i kursen?'), ConversationData(id='run-01dd5af3-1ad0-49bf-9587-120b686e9d97', role='assistant', content='Examinatorn för kursen TNM094 är Daniel Jönsson. Du kan kommunicera med honom om du har frågor eller funderingar angående kursinnehållet.'), ConversationData(id='e996af5c-803e-4da0-935f-974cd899f4fb', role='user', content='Kan du förklara systemarkitekturen för kaffemaskinen?')]
2025-05-07 10:55:11,011 - INFO - Number of Found Documents: 10
2025-05-07 10:55:11,012 - INFO - Found Documents: [(Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c1-d82a8b00-baac-48a5-8cf6-b16dae28a092', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpiahn2xc7\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 719.0}, page_content='ARKITEKTUR\n\n(komponent- organisering och ihopsättning)\n\nSYSTEMARKITEKTUR\n\nKOMMUNIKATION\n\nDesignmönster\n\nProblem – Kontext – Lösning\n\n– generella, domän-agnostiska problem och lösningar\n\n– kända, praktiska, testade, bra lösningar\n\n– kända problem-specifika problem och fallgropar\n\nHjälper till i design-processen – för att hitta en bra, passande design – för att undvika vanliga misstag\n\n– för att undvika dålig, suboptimal implementation\n\nFörenklar kommunikation – i team-diskussioner – i dokumentation\n\n[Gamma et al]\n\nEtt designmönster\n\nNamn\n\n– Ett unikt namn som associerar till lösningen\n\nProblem och kontext\n\n– Beskrivning av problemet som ska lösas\n\n– Kontext och andra omständigheter som förutsätts för designen\n\nAbstrakt lösning\n\n– Modeller och beskrivningar av en programdesign\n\nKonsekvenser\n\n– Kända egenskaper och konsekvenser\n\nImplementationsdetaljer\n\n– Särskilda överväganden, variationer, fallgropar, etc.\n\n[Gamma et al]\n\nModel-View-Controller\n\nProblem • Vill ha flera gränssnitt med\n\nModel\n\nsamma logik\n\nUppdaterar\n\nLösning • Separera data, vy och logik Konsekvenser + Flera vyer av samma data\n\nView\n\n+ Kan byta ut interaktion\n\nKomplicerad synkronisering\n\nhttps://martinfowler.com/eaaDev/uiArchs.html\n\nhttps://martinfowler.com/eaaDev/uiArchs.html\n\nUser\n\nÄndrar\n\nController\n\nUndersök arkitekturmönster\n\nGruppuppgift\n\n1. Varje person fördjupar sig i ett mönster.\n\n2. Förklara för de andra i gruppen och diskutera gemensamt:\n\n• Motivera varför det gör det eller inte gör det'), 0.8017335830000001), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c3-af9d8549-6ed3-4dbb-bc9a-d013d20fd41a', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpiahn2xc7\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 2206.0}, page_content='Passar mönstret in på ert system, var i så fall?\n\nFörslag på mönster\n\nPipe-and-filter\n\nKlient-server\n\nLayering\n\nPeer-to-peer\n\nPlug-in\n\nModel-View-Controller\n\nSe även:\n\nPublish-subscribe/Event-driven\n\nhttps://en.wikipedia.org/wiki/List_of_software_architecture_styles_and_patterns\n\nPfleeger kapitel 5.4 (sidor 262 – 270)\n\nIdentifiera kvalitetsattribut\n\nUtgå från kravställning. Exempel: Inviwo\n\n”Som en visualiseringsexpert vill jag experimentera med olika typer av visualiseringsalgoritmer på min stationära eller bärbara dator”\n\n1. Vad är viktigt i ditt system, varför?\n\nModifierbarhet - används i väldigt olika typer av forskningsprojekt\n\nPrestanda – måste ha tillgång till hårdvara för att utveckla de algoritmer i världsklass\n\nAnvändbarhet – fokus på snabbhet snarare än enkelhet\n\n2. Vilken inverkan har varje attribut på systemarkitekturen?\n\nModifierbarhet – pipeline- och modulbaserat\n\nPrestanda – OpenGL/OpenCL integration\n\nAnvändbarhet – direkt tillgång till funktionalitet\n\nIdentifiera kvalitetsattribut\n\nIndividuellt eller grupper om 2-3 personer (ca 10 minuter)\n\n1. Vad är viktigt i ditt system, varför? https://en.wikipedia.org/wiki/List_of_system_quality_attributes - Modifierbarhet - Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – … ARKITEKTUR\n\nKOMMUNIKATION\n\n2. Fundera på:\n\nVilken inverkan har varje attribut på systemarkitekturen?\n\nSYSTEMARKITEKTUR\n\nArkitektur\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)'), 0.799220711), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c6-a36ace01-080e-41e0-aa19-a7d20c4f0c91', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpiahn2xc7\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 4523.0}, page_content='Arkitektur - Banksystemet\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter\n\nRepresentationer för kod- eller data\n\nNotation:\n\nArkitektur - Systemet\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter\n\nRepresentationer för kod- eller data\n\nARKITEKTUR\n\n(komponent- organisering och ihopsättning)\n\nKVALITETSATTRIBUT\n\nKOMMUNIKATION\n\n(vad är typiskt för systemet?, begränsningar)\n\nSYSTEM- ARKITEKTUR\n\nArkitektur - Banksystemet\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter\n\nRepresentationer för kod- eller data\n\nARKITEKTUR\n\n(komponent- organisering och ihopsättning)\n\nKVALITETSATTRIBUT\n\nKOMMUNIKATION\n\n(vad är typiskt för systemet?, begränsningar)\n\nSYSTEM- ARKITEKTUR\n\nNotation:\n\nÅterkoppling\n\nhttps://www.mentimeter.com/\n\nVad fungerade bra?\n\nVad kan ändras till nästa gång?'), 0.7863014340000001), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c4-f83ba51e-2a9b-406e-bb55-bfb39fbdb55d', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpiahn2xc7\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 2991.0}, page_content='2. Vilken inverkan har varje attribut på systemarkitekturen?\n\nModifierbarhet – pipeline- och modulbaserat\n\nPrestanda – OpenGL/OpenCL integration\n\nAnvändbarhet – direkt tillgång till funktionalitet\n\nIdentifiera kvalitetsattribut\n\nIndividuellt eller grupper om 2-3 personer (ca 10 minuter)\n\n1. Vad är viktigt i ditt system, varför? https://en.wikipedia.org/wiki/List_of_system_quality_attributes - Modifierbarhet - Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – … ARKITEKTUR\n\nKOMMUNIKATION\n\n2. Fundera på:\n\nVilken inverkan har varje attribut på systemarkitekturen?\n\nSYSTEMARKITEKTUR\n\nArkitektur\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter\n\nRepresentationer för kod- eller data\n\nNivå 3: Systemkomponenter\n\nKomponenter i ett delsystem\n\nKVALITETSATTRIBUT\n\n(vad är typiskt för systemet?, begränsningar)\n\nARKITEKTUR\n\n(komponent- organisering och ihopsättning)\n\nSYSTEMARKITEKTUR\n\nKOMMUNIKATION\n\nArkitektur - Systemkontext\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nSystemkontext – Bankexempel\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nTips: https://app.diagrams.net/\n\nNotation:\n\nArkitektur - Systemet\n\nNivå 1 Systemkontext\n\nTyper av personer som ska använda systemet\n\nAndra system (beroenden)\n\nNivå 2: Systemet (containers)\n\nBehållare/delsystem/högnivåkomponenter'), 0.7849498985000001), (Document(id='TNM094_-_Exempel_individuell_rapport.pdf-p0-c9-31566388-ea46-4e72-a048-fdc72a906059', metadata={'relative_path': 'Induviduell rapport\\TNM094 - Exempel individuell rapport.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmprxjfzg2l\\TNM094 - Exempel individuell rapport.pdf', 'start_index': 7355.0}, page_content='2\n\n2.3. GRUNDLÄGGANDE SYSTEMARKITEKTUR\n\nKAPITEL 2. SYSTEM OCH TEKNISKA LÖSNINGAR\n\n2.3 Grundläggande systemarkitektur\n\nI stora drag kommer mjukvarusystemet vara uppdelat i en mobilapplikation som slutanvändaren an- vänder, samt en ett trädgårdsinformations-system, som applikationen kommunicerar med. I ﬁgur 2.1 ﬁnns ett kontext-diagram över kopplingen mellan de olika parterna.\n\nBeteendet hos användaren men även produkten är osäkert, och därmed och mängden och frekvensen av traﬁk som applikationen kommer att ha. Av andledningen att enkelt kunna skala upp produkten utefter hur utbredd användningen är, och att frigöra behovet av underhåll av egna servrar, så kommer moln-lösningen AWS användas som plattform för mjukvarusystemet [2]. Med undantag för själva mobilapplikationen, som kommer erbjudas via Google Play och App Store som tidigare nämnt. Sy- stemet kommer ha en så kallad serverlös back end, vilket är en passande lösning för en mobil-backend [2]. Andra Moln-baserade lösningar ﬁnns också och för projektets syfte hade också Microsoft Azure varit passande.'), 0.7726019325), (Document(id='mall_individuell_rapport_(1).pdf-p0-c22-5e9642be-2f1a-463c-8ffd-9bbf6c297e7d', metadata={'relative_path': 'Induviduell rapport\\mall_individuell_rapport (1).pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpsigyk7nf\\mall_individuell_rapport (1).pdf', 'start_index': 17079.0}, page_content='Motivera och beskriv systemets mål och vilka grundläggande krav som sätts för att detta mål ska anses uppfyllt. Här diskuteras även grundläggande systembegränsningar såsom hur många användare som ska kunna nyttja systemet samtidigt, eller hur lång svarstid systemet får ha för att anses fylla målet. Själva kraven kan vara en punktlista.\n\n2.1.2 Målplattform\n\nMotivera och beskriv målplattformen, hårdvara/mjukvara/operativsystem hos användarna av syste- met, och hur t ex tredje-part-programvara används för att underlätta stödet för eller utvecklingen till målplattformen. Målplattformen motiveras utifrån användarna av projektets resultat. Vad är det för hårdvara/mjukvara/operativsystem som används av de som ska nyttja systemet?\n\n2.1.3 Grundläggande systemarkitektur\n\nMotivera och beskriv systemets grundläggande arkitektur, både interna och externa komponenter och noder, hur de viktigaste systemdelarna i sig delas upp i moduler med specifika uppgifter, systemets interna modulers programspråk, behov av ramverk som stödjer denna systemarkitektur eller definierar och bygger upp den.\n\nNotera: Här ska det finnas en eller flera figurer baserade på C4-modellen från föreläsningarna. Gör åtminstone två nivåer, gärna tre, där delarna i ditt system beskrivs. Beskriv varje komponent som måste finnas i systemet och vad de ska göra. Komponenterna ska sedan reflekteras i tidsplanen, se 2.2.3.\n\n2.1.4 Utvecklingsmiljö\n\nBesvara följande frågor i 2-3 stycken:'), 0.7710622549999999), (Document(id='lecture-06_ModulOchProgramDesign_uppgifter.pdf-p0-c5-e8ab2f46-344e-4ad0-bfe2-f8f522a87ed1', metadata={'relative_path': 'Fö6\\lecture-06_ModulOchProgramDesign_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpmmfaaoub\\lecture-06_ModulOchProgramDesign_uppgifter.pdf', 'start_index': 3957.0}, page_content='}\n\n}\n\n// Kod inuti tidningsbudsklassen... payment = 2.00; // “Jag vill ha 2kr!” Wallet theWallet = myCustomer.getWallet(); if (theWallet.getTotalMoney() > payment) {\n\ntheWallet.subtractMoney(payment);\n\n} else {\n\n// Kom tillbaka vid ett senare tillfälle\n\n}\n\nExempel: Tidningsbud\n\npublic class Customer {\n\npublic class Wallet {\n\nprivate String firstName; private String lastName; private Wallet myWallet; public String getFirstName() {\n\nprivate float value; public float getTotalMoney() {\n\nreturn value;\n\n}\n\nreturn firstName;\n\npublic void setTotalMoney(float newValue)\n\n} public String getLastName() {\n\n{\n\n}\n\nvalue = newValue;\n\nreturn lastName;\n\npublic void addMoney(float deposit)\n\n}\n\n{\n\npublic float getPayment(float bill)\n\nvalue += deposit;\n\n{\n\n}\n\nif (myWallet != null) {\n\npublic void subtractMoney(float debit)\n\n{\n\nif (myWallet.getTotalMoney() > bill) {\n\n}\n\nvalue -= debit;\n\ntheWallet.subtractMoney(payment); return payment;\n\n}\n\n}\n\n}\n\n}\n\n}\n\n// Kod inuti tidningsbudsklassen... payment = 2.00; // “Jag vill ha 2kr!” paidAmount = myCustomer.getPayment(payment); if (paidAmount == payment) {\n\n// Säg tack och ge kvitto\n\n} else {\n\n// Kom tillbaka vid ett senare tillfälle\n\n}\n\nAtt brygga en riktigt go’ kopp kaffe\n\nDesigna en kaffeautomat som: 1. Kan brygga två olika typer av kaffe (filterkaffe,\n\nespresso)\n\n2. Göra 1-8 koppar 3. Behöver vatten och bönor 4. Bryggning av filterkaffe består av stegen:\n\nDosering, kaffebönsmalning, släpp ut hett vatten. 5. Bryggning av espressokaffe består av stegen:'), 0.7698350844999999), (Document(id='lecture-04_Systemarkitektur.pdf-p0-c6-8ec2298d-2007-47cb-9994-f3bd11d3fd5b', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpcf9pc3m5\\lecture-04_Systemarkitektur.pdf', 'start_index': 4294.0}, page_content='Peer-to-Peer\n\nPrinciper\n\n– alla komponenter kommunicerar direkt\n\nEgenskaper\n\n– låg fördröjning, ingen flaskhals\n\n– svårt att kontrollera och synkronisera\n\n– svårt att förändra och avlusa\n\nNode\n\nNode\n\nNode\n\nNode\n\nNode\n\n[Pfleeger]\n\nLayering\n\nPrinciper\n\n– hierarkisk struktur baserad på abstraktion\n\n– tillåter att anrop hoppar över ett lager\n\nEgenskaper\n\n– förenklat gränssnitt och struktur\n\n– förenklar återanvändning av moduler\n\n– möjligen viss negativ effekt på prestandan\n\nApplikation\n\nApplikation\n\nTransport\n\nTransport\n\nNätverk\n\nNätverk\n\nFysiskt lager\n\nFysiskt lager\n\n[Pfleeger]\n\nThree-/Multi-tier System\n\nPrinciper\n\n– strikt uppdelat ansvar, ”kommunicera genom”\n\nEgenskaper\n\n– välkända och separerade ansvar och funktioner\n\nGUI\n\nKlient\n\nKlient\n\nLogik\n\nServer\n\nData\n\nDatabase\n\nKlient\n\n[Pfleeger]\n\nModel-View-Controller\n\nPrinciper\n\n– uppdelning av ansvar, riktad kommunikation\n\nEgenskaper\n\n– renare programkod, enklare att hitta fel\n\n– enkelt att lägga till flera vyer av en datamodell\n\nViewView View\n\nController Controller\n\nModel Model\n\nKvalitetsattribut\n\nHur vet vi om en arkitektur är bra? • Viktiga aspekter hos en design – Hög sammanhållning, låg koppling – Modifierbarhet – Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – Affärsmål\n\n[Pfleeger]\n\nSammanhållning och koppling\n\nsammahållning (cohesion): hur väl en enhets olika delar passar ihop.'), 0.7689802050000001), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c2-6ce67f4d-3df8-4405-9db6-642042cf9de0', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpiahn2xc7\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 1456.0}, page_content='– Modeller och beskrivningar av en programdesign\n\nKonsekvenser\n\n– Kända egenskaper och konsekvenser\n\nImplementationsdetaljer\n\n– Särskilda överväganden, variationer, fallgropar, etc.\n\n[Gamma et al]\n\nModel-View-Controller\n\nProblem • Vill ha flera gränssnitt med\n\nModel\n\nsamma logik\n\nUppdaterar\n\nLösning • Separera data, vy och logik Konsekvenser + Flera vyer av samma data\n\nView\n\n+ Kan byta ut interaktion\n\nKomplicerad synkronisering\n\nhttps://martinfowler.com/eaaDev/uiArchs.html\n\nhttps://martinfowler.com/eaaDev/uiArchs.html\n\nUser\n\nÄndrar\n\nController\n\nUndersök arkitekturmönster\n\nGruppuppgift\n\n1. Varje person fördjupar sig i ett mönster.\n\n2. Förklara för de andra i gruppen och diskutera gemensamt:\n\n• Motivera varför det gör det eller inte gör det\n\nPassar mönstret in på ert system, var i så fall?\n\nFörslag på mönster\n\nPipe-and-filter\n\nKlient-server\n\nLayering\n\nPeer-to-peer\n\nPlug-in\n\nModel-View-Controller\n\nSe även:\n\nPublish-subscribe/Event-driven\n\nhttps://en.wikipedia.org/wiki/List_of_software_architecture_styles_and_patterns\n\nPfleeger kapitel 5.4 (sidor 262 – 270)\n\nIdentifiera kvalitetsattribut\n\nUtgå från kravställning. Exempel: Inviwo\n\n”Som en visualiseringsexpert vill jag experimentera med olika typer av visualiseringsalgoritmer på min stationära eller bärbara dator”\n\n1. Vad är viktigt i ditt system, varför?\n\nModifierbarhet - används i väldigt olika typer av forskningsprojekt\n\nPrestanda – måste ha tillgång till hårdvara för att utveckla de algoritmer i världsklass'), 0.7629496155), (Document(id='lecture-04_Systemarkitektur.pdf-p0-c1-a3225f3e-d924-44a5-b9fa-67b6f73f1790', metadata={'relative_path': 'Fö4\\lecture-04_Systemarkitektur.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmpcf9pc3m5\\lecture-04_Systemarkitektur.pdf', 'start_index': 594.0}, page_content='– körnings-struktur (server, klient, nätverk,\n\nshm, etc)\n\n– etc.\n\n[Pfleeger]\n\nKörnings-struktur\n\nHur ser systemet ut internt under körning\n\n– Flera vyer om det kan se olika ut\n\n– Instanser, processer, datastrukturer, anropsvägar\n\n[Pfleeger]\n\nViktiga element\n\nVad finns där?\n\nNoder\n\n– datorer, servrar, processer, program, etc.\n\nGränssnitt\n\n– process-anrop, abstraktion, nätverkskommunikation, etc.\n\nProgramvaruenheter\n\n– oftast moduler och submoduler\n\nVad finns inte med?\n\n– implementations-specifika algoritmer – variabler, klasser, objekt, funktioner\n\n[Pfleeger]\n\nKodstruktur\n\nVilka moduler har systemet (systemets kodbas)\n\n– Hur förhåller sig dessa till varandra\n\n– Paket, bibliotek, filer, enheter, komponenter\n\n[Pfleeger]\n\nNågra viktiga termer\n\nprogramvaruenhet: del av ett system som kan relateras till som en enhet, t ex utifrån dess roll. Kan rent praktiskt vara en klass, modul eller någonting annat.\n\ngränssnitt: del av en programvaruenhet som syns och används av andra enheter, ibland även för ett specifikt syfte.\n\n[Pfleeger]\n\nDesignprocess för Agil utveckling\n\nSprint-backlog\n\nAktuell design\n\nOm-modellering\n\nAnalys\n\nOm-modellering\n\nAnalyser nya krav i sprint-backloggen • • • Analys\n\nFörändra den nuvarande designen för de nya kraven Rita och diskutera – spara alla möjliga alternativ\n\n• •\n\nJämför de nya alternativen utifrån olika kvalitetsattribut Välj det bästa alternativet (Dokumentera varför ni valde det vid behov)\n\nSystemarkitektur för Agil utveckling'), 0.7626499234999999)]
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\logging\__init__.py", line 1113, in emit
    stream.write(msg + self.terminator)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\ufb01' in position 7971: character maps to <undefined>
Call stack:
  File "<string>", line 1, in <module>
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\spawn.py", line 135, in _main
    return self._bootstrap(parent_sentinel)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 314, in _bootstrap
    self.run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\_subprocess.py", line 80, in subprocess_started
    target(sockets=sockets)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\server.py", line 66, in run
    return asyncio.run(self.serve(sockets=sockets))
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 641, in run_until_complete
    self.run_forever()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 608, in run_forever
    self._run_once()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1936, in _run_once
    handle._run()
  File "C:\Users\bergs\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 84, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\protocols\websockets\websockets_impl.py", line 243, in run_asgi
    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)  # type: ignore[func-returns-value]
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\uvicorn\middleware\proxy_headers.py", line 60, in __call__        
    return await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\errors.py", line 152, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\cors.py", line 77, in __call__
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 362, in handle
    await self.app(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 95, in app
    await wrap_app_handling_exceptions(app, session)(scope, receive, send)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\starlette\routing.py", line 93, in app
    await func(session)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\.venv\Lib\site-packages\fastapi\routing.py", line 383, in app
    await dependant.call(**solved_result.values)
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\main.py", line 229, in ws_llm_conversation
    async for chunk in handle_conversation_stream(data):
  File "C:\Users\bergs\TNM094_KANDIDAT\Chatta-med-TNM094\backend\app\services.py", line 109, in handle_conversation_stream
    logger.info(f"Found Documents: {found_documents}")
Message: "Found Documents: [(Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c1-d82a8b00-baac-48a5-8cf6-b16dae28a092', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpiahn2xc7\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 719.0}, page_content='ARKITEKTUR\\n\\n(komponent- organisering och ihopsättning)\\n\\nSYSTEMARKITEKTUR\\n\\nKOMMUNIKATION\\n\\nDesignmönster\\n\\nProblem – Kontext – Lösning\\n\\n– generella, domän-agnostiska problem och lösningar\\n\\n– kända, praktiska, testade, bra lösningar\\n\\n– kända problem-specifika problem och fallgropar\\n\\nHjälper till i design-processen – för att hitta en bra, passande design – för att undvika vanliga misstag\\n\\n– för att undvika dålig, suboptimal implementation\\n\\nFörenklar kommunikation – i team-diskussioner – i dokumentation\\n\\n[Gamma et al]\\n\\nEtt designmönster\\n\\nNamn\\n\\n– Ett unikt namn som associerar till lösningen\\n\\nProblem och kontext\\n\\n– Beskrivning av problemet som ska lösas\\n\\n– Kontext och andra omständigheter som förutsätts för designen\\n\\nAbstrakt lösning\\n\\n– Modeller och beskrivningar av en programdesign\\n\\nKonsekvenser\\n\\n– Kända egenskaper och konsekvenser\\n\\nImplementationsdetaljer\\n\\n– Särskilda överväganden, variationer, fallgropar, etc.\\n\\n[Gamma et al]\\n\\nModel-View-Controller\\n\\nProblem • Vill ha flera gränssnitt med\\n\\nModel\\n\\nsamma logik\\n\\nUppdaterar\\n\\nLösning • Separera data, vy och logik Konsekvenser + Flera vyer av samma data\\n\\nView\\n\\n+ Kan byta ut interaktion\\n\\nKomplicerad synkronisering\\n\\nhttps://martinfowler.com/eaaDev/uiArchs.html\\n\\nhttps://martinfowler.com/eaaDev/uiArchs.html\\n\\nUser\\n\\nÄndrar\\n\\nController\\n\\nUndersök arkitekturmönster\\n\\nGruppuppgift\\n\\n1. Varje person fördjupar sig i ett mönster.\\n\\n2. Förklara för de andra i gruppen och diskutera gemensamt:\\n\\n• Motivera varför det gör det eller inte gör det'), 0.8017335830000001), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c3-af9d8549-6ed3-4dbb-bc9a-d013d20fd41a', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpiahn2xc7\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 2206.0}, page_content='Passar mönstret in på ert system, var i så fall?\\n\\nFörslag på mönster\\n\\nPipe-and-filter\\n\\nKlient-server\\n\\nLayering\\n\\nPeer-to-peer\\n\\nPlug-in\\n\\nModel-View-Controller\\n\\nSe även:\\n\\nPublish-subscribe/Event-driven\\n\\nhttps://en.wikipedia.org/wiki/List_of_software_architecture_styles_and_patterns\\n\\nPfleeger kapitel 5.4 (sidor 262 – 270)\\n\\nIdentifiera kvalitetsattribut\\n\\nUtgå från kravställning. Exempel: Inviwo\\n\\n”Som en visualiseringsexpert vill jag experimentera med olika typer av visualiseringsalgoritmer på min stationära eller bärbara dator”\\n\\n1. Vad är viktigt i ditt system, varför?\\n\\nModifierbarhet - används i väldigt olika typer av forskningsprojekt\\n\\nPrestanda – måste ha tillgång till hårdvara för att utveckla de algoritmer i världsklass\\n\\nAnvändbarhet – fokus på snabbhet snarare än enkelhet\\n\\n2. Vilken inverkan har varje attribut på systemarkitekturen?\\n\\nModifierbarhet – pipeline- och modulbaserat\\n\\nPrestanda – OpenGL/OpenCL integration\\n\\nAnvändbarhet – direkt tillgång till funktionalitet\\n\\nIdentifiera kvalitetsattribut\\n\\nIndividuellt eller grupper om 2-3 personer (ca 10 minuter)\\n\\n1. Vad är viktigt i ditt system, varför? https://en.wikipedia.org/wiki/List_of_system_quality_attributes - Modifierbarhet - Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – … ARKITEKTUR\\n\\nKOMMUNIKATION\\n\\n2. Fundera på:\\n\\nVilken inverkan har varje attribut på systemarkitekturen?\\n\\nSYSTEMARKITEKTUR\\n\\nArkitektur\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)'), 0.799220711), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c6-a36ace01-080e-41e0-aa19-a7d20c4f0c91', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpiahn2xc7\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 4523.0}, page_content='Arkitektur - Banksystemet\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter\\n\\nRepresentationer för kod- eller data\\n\\nNotation:\\n\\nArkitektur - Systemet\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter\\n\\nRepresentationer för kod- eller data\\n\\nARKITEKTUR\\n\\n(komponent- organisering och ihopsättning)\\n\\nKVALITETSATTRIBUT\\n\\nKOMMUNIKATION\\n\\n(vad är typiskt för systemet?, begränsningar)\\n\\nSYSTEM- ARKITEKTUR\\n\\nArkitektur - Banksystemet\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter\\n\\nRepresentationer för kod- eller data\\n\\nARKITEKTUR\\n\\n(komponent- organisering och ihopsättning)\\n\\nKVALITETSATTRIBUT\\n\\nKOMMUNIKATION\\n\\n(vad är typiskt för systemet?, begränsningar)\\n\\nSYSTEM- ARKITEKTUR\\n\\nNotation:\\n\\nÅterkoppling\\n\\nhttps://www.mentimeter.com/\\n\\nVad fungerade bra?\\n\\nVad kan ändras till nästa gång?'), 0.7863014340000001), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c4-f83ba51e-2a9b-406e-bb55-bfb39fbdb55d', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpiahn2xc7\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 2991.0}, page_content='2. Vilken inverkan har varje attribut på systemarkitekturen?\\n\\nModifierbarhet – pipeline- och modulbaserat\\n\\nPrestanda – OpenGL/OpenCL integration\\n\\nAnvändbarhet – direkt tillgång till funktionalitet\\n\\nIdentifiera kvalitetsattribut\\n\\nIndividuellt eller grupper om 2-3 personer (ca 10 minuter)\\n\\n1. Vad är viktigt i ditt system, varför? https://en.wikipedia.org/wiki/List_of_system_quality_attributes - Modifierbarhet - Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – … ARKITEKTUR\\n\\nKOMMUNIKATION\\n\\n2. Fundera på:\\n\\nVilken inverkan har varje attribut på systemarkitekturen?\\n\\nSYSTEMARKITEKTUR\\n\\nArkitektur\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter\\n\\nRepresentationer för kod- eller data\\n\\nNivå 3: Systemkomponenter\\n\\nKomponenter i ett delsystem\\n\\nKVALITETSATTRIBUT\\n\\n(vad är typiskt för systemet?, begränsningar)\\n\\nARKITEKTUR\\n\\n(komponent- organisering och ihopsättning)\\n\\nSYSTEMARKITEKTUR\\n\\nKOMMUNIKATION\\n\\nArkitektur - Systemkontext\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nSystemkontext – Bankexempel\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nTips: https://app.diagrams.net/\\n\\nNotation:\\n\\nArkitektur - Systemet\\n\\nNivå 1 Systemkontext\\n\\nTyper av personer som ska använda systemet\\n\\nAndra system (beroenden)\\n\\nNivå 2: Systemet (containers)\\n\\nBehållare/delsystem/högnivåkomponenter'), 0.7849498985000001), (Document(id='TNM094_-_Exempel_individuell_rapport.pdf-p0-c9-31566388-ea46-4e72-a048-fdc72a906059', metadata={'relative_path': 'Induviduell rapport\\\\TNM094 - Exempel individuell rapport.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmprxjfzg2l\\\\TNM094 - Exempel individuell rapport.pdf', 'start_index': 7355.0}, page_content='2\\n\\n2.3. GRUNDLÄGGANDE SYSTEMARKITEKTUR\\n\\nKAPITEL 2. SYSTEM OCH TEKNISKA LÖSNINGAR\\n\\n2.3 Grundläggande systemarkitektur\\n\\nI stora drag kommer mjukvarusystemet vara uppdelat i en mobilapplikation som slutanvändaren an- vänder, samt en ett trädgårdsinformations-system, som applikationen kommunicerar med. I ﬁgur 2.1 ﬁnns ett kontext-diagram över kopplingen mellan de olika parterna.\\n\\nBeteendet hos användaren men även produkten är osäkert, och därmed och mängden och frekvensen av traﬁk som applikationen kommer att ha. Av andledningen att enkelt kunna skala upp produkten utefter hur utbredd användningen är, och att frigöra behovet av underhåll av egna servrar, så kommer moln-lösningen AWS användas som plattform för mjukvarusystemet [2]. Med undantag för själva mobilapplikationen, som kommer erbjudas via Google Play och App Store som tidigare nämnt. Sy- stemet kommer ha en så kallad serverlös back end, vilket är en passande lösning för en mobil-backend [2]. Andra Moln-baserade lösningar ﬁnns också och för projektets syfte hade också Microsoft Azure varit passande.'), 0.7726019325), (Document(id='mall_individuell_rapport_(1).pdf-p0-c22-5e9642be-2f1a-463c-8ffd-9bbf6c297e7d', metadata={'relative_path': 'Induviduell rapport\\\\mall_individuell_rapport (1).pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpsigyk7nf\\\\mall_individuell_rapport (1).pdf', 'start_index': 17079.0}, page_content='Motivera och beskriv systemets mål och vilka grundläggande krav som sätts för att detta mål ska anses uppfyllt. Här diskuteras även grundläggande systembegränsningar såsom hur många användare som ska kunna nyttja systemet samtidigt, eller hur lång svarstid systemet får ha för att anses fylla målet. Själva kraven kan vara en punktlista.\\n\\n2.1.2 Målplattform\\n\\nMotivera och beskriv målplattformen, hårdvara/mjukvara/operativsystem hos användarna av syste- met, och hur t ex tredje-part-programvara används för att underlätta stödet för eller utvecklingen till målplattformen. Målplattformen motiveras utifrån användarna av projektets resultat. Vad är det för hårdvara/mjukvara/operativsystem som används av de som ska nyttja systemet?\\n\\n2.1.3 Grundläggande systemarkitektur\\n\\nMotivera och beskriv systemets grundläggande arkitektur, både interna och externa komponenter och noder, hur de viktigaste systemdelarna i sig delas upp i moduler med specifika uppgifter, systemets interna modulers programspråk, behov av ramverk som stödjer denna systemarkitektur eller definierar och bygger upp den.\\n\\nNotera: Här ska det finnas en eller flera figurer baserade på C4-modellen från föreläsningarna. Gör åtminstone två nivåer, gärna tre, där delarna i ditt system beskrivs. Beskriv varje komponent som måste finnas i systemet och vad de ska göra. Komponenterna ska sedan reflekteras i tidsplanen, se 2.2.3.\\n\\n2.1.4 Utvecklingsmiljö\\n\\nBesvara följande frågor i 2-3 stycken:'), 0.7710622549999999), (Document(id='lecture-06_ModulOchProgramDesign_uppgifter.pdf-p0-c5-e8ab2f46-344e-4ad0-bfe2-f8f522a87ed1', metadata={'relative_path': 'Fö6\\\\lecture-06_ModulOchProgramDesign_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpmmfaaoub\\\\lecture-06_ModulOchProgramDesign_uppgifter.pdf', 'start_index': 3957.0}, page_content='}\\n\\n}\\n\\n// Kod inuti tidningsbudsklassen... payment = 2.00; // “Jag vill ha 2kr!” Wallet theWallet = myCustomer.getWallet(); if (theWallet.getTotalMoney() > payment) {\\n\\ntheWallet.subtractMoney(payment);\\n\\n} else {\\n\\n// Kom tillbaka vid ett senare tillfälle\\n\\n}\\n\\nExempel: Tidningsbud\\n\\npublic class Customer {\\n\\npublic class Wallet {\\n\\nprivate String firstName; private String lastName; private Wallet myWallet; public String getFirstName() {\\n\\nprivate float value; public float getTotalMoney() {\\n\\nreturn value;\\n\\n}\\n\\nreturn firstName;\\n\\npublic void setTotalMoney(float newValue)\\n\\n} public String getLastName() {\\n\\n{\\n\\n}\\n\\nvalue = newValue;\\n\\nreturn lastName;\\n\\npublic void addMoney(float deposit)\\n\\n}\\n\\n{\\n\\npublic float getPayment(float bill)\\n\\nvalue += deposit;\\n\\n{\\n\\n}\\n\\nif (myWallet != null) {\\n\\npublic void subtractMoney(float debit)\\n\\n{\\n\\nif (myWallet.getTotalMoney() > bill) {\\n\\n}\\n\\nvalue -= debit;\\n\\ntheWallet.subtractMoney(payment); return payment;\\n\\n}\\n\\n}\\n\\n}\\n\\n}\\n\\n}\\n\\n// Kod inuti tidningsbudsklassen... payment = 2.00; // “Jag vill ha 2kr!” paidAmount = myCustomer.getPayment(payment); if (paidAmount == payment) {\\n\\n// Säg tack och ge kvitto\\n\\n} else {\\n\\n// Kom tillbaka vid ett senare tillfälle\\n\\n}\\n\\nAtt brygga en riktigt go’ kopp kaffe\\n\\nDesigna en kaffeautomat som: 1. Kan brygga två olika typer av kaffe (filterkaffe,\\n\\nespresso)\\n\\n2. Göra 1-8 koppar 3. Behöver vatten och bönor 4. Bryggning av filterkaffe består av stegen:\\n\\nDosering, kaffebönsmalning, släpp ut hett vatten. 5. Bryggning av espressokaffe består av stegen:'), 0.7698350844999999), (Document(id='lecture-04_Systemarkitektur.pdf-p0-c6-8ec2298d-2007-47cb-9994-f3bd11d3fd5b', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpcf9pc3m5\\\\lecture-04_Systemarkitektur.pdf', 'start_index': 4294.0}, page_content='Peer-to-Peer\\n\\nPrinciper\\n\\n– alla komponenter kommunicerar direkt\\n\\nEgenskaper\\n\\n– låg fördröjning, ingen flaskhals\\n\\n– svårt att kontrollera och synkronisera\\n\\n– svårt att förändra och avlusa\\n\\nNode\\n\\nNode\\n\\nNode\\n\\nNode\\n\\nNode\\n\\n[Pfleeger]\\n\\nLayering\\n\\nPrinciper\\n\\n– hierarkisk struktur baserad på abstraktion\\n\\n– tillåter att anrop hoppar över ett lager\\n\\nEgenskaper\\n\\n– förenklat gränssnitt och struktur\\n\\n– förenklar återanvändning av moduler\\n\\n– möjligen viss negativ effekt på prestandan\\n\\nApplikation\\n\\nApplikation\\n\\nTransport\\n\\nTransport\\n\\nNätverk\\n\\nNätverk\\n\\nFysiskt lager\\n\\nFysiskt lager\\n\\n[Pfleeger]\\n\\nThree-/Multi-tier System\\n\\nPrinciper\\n\\n– strikt uppdelat ansvar, ”kommunicera genom”\\n\\nEgenskaper\\n\\n– välkända och separerade ansvar och funktioner\\n\\nGUI\\n\\nKlient\\n\\nKlient\\n\\nLogik\\n\\nServer\\n\\nData\\n\\nDatabase\\n\\nKlient\\n\\n[Pfleeger]\\n\\nModel-View-Controller\\n\\nPrinciper\\n\\n– uppdelning av ansvar, riktad kommunikation\\n\\nEgenskaper\\n\\n– renare programkod, enklare att hitta fel\\n\\n– enkelt att lägga till flera vyer av en datamodell\\n\\nViewView View\\n\\nController Controller\\n\\nModel Model\\n\\nKvalitetsattribut\\n\\nHur vet vi om en arkitektur är bra? • Viktiga aspekter hos en design – Hög sammanhållning, låg koppling – Modifierbarhet – Prestanda – Säkerhet – Pålitlighet – Robusthet – Användbarhet – Affärsmål\\n\\n[Pfleeger]\\n\\nSammanhållning och koppling\\n\\nsammahållning (cohesion): hur väl en enhets olika delar passar ihop.'), 0.7689802050000001), (Document(id='lecture-04_Systemarkitektur_uppgifter.pdf-p0-c2-6ce67f4d-3df8-4405-9db6-642042cf9de0', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpiahn2xc7\\\\lecture-04_Systemarkitektur_uppgifter.pdf', 'start_index': 1456.0}, page_content='– Modeller och beskrivningar av en programdesign\\n\\nKonsekvenser\\n\\n– Kända egenskaper och konsekvenser\\n\\nImplementationsdetaljer\\n\\n– Särskilda överväganden, variationer, fallgropar, etc.\\n\\n[Gamma et al]\\n\\nModel-View-Controller\\n\\nProblem • Vill ha flera gränssnitt med\\n\\nModel\\n\\nsamma logik\\n\\nUppdaterar\\n\\nLösning • Separera data, vy och logik Konsekvenser + Flera vyer av samma data\\n\\nView\\n\\n+ Kan byta ut interaktion\\n\\nKomplicerad synkronisering\\n\\nhttps://martinfowler.com/eaaDev/uiArchs.html\\n\\nhttps://martinfowler.com/eaaDev/uiArchs.html\\n\\nUser\\n\\nÄndrar\\n\\nController\\n\\nUndersök arkitekturmönster\\n\\nGruppuppgift\\n\\n1. Varje person fördjupar sig i ett mönster.\\n\\n2. Förklara för de andra i gruppen och diskutera gemensamt:\\n\\n• Motivera varför det gör det eller inte gör det\\n\\nPassar mönstret in på ert system, var i så fall?\\n\\nFörslag på mönster\\n\\nPipe-and-filter\\n\\nKlient-server\\n\\nLayering\\n\\nPeer-to-peer\\n\\nPlug-in\\n\\nModel-View-Controller\\n\\nSe även:\\n\\nPublish-subscribe/Event-driven\\n\\nhttps://en.wikipedia.org/wiki/List_of_software_architecture_styles_and_patterns\\n\\nPfleeger kapitel 5.4 (sidor 262 – 270)\\n\\nIdentifiera kvalitetsattribut\\n\\nUtgå från kravställning. Exempel: Inviwo\\n\\n”Som en visualiseringsexpert vill jag experimentera med olika typer av visualiseringsalgoritmer på min stationära eller bärbara dator”\\n\\n1. Vad är viktigt i ditt system, varför?\\n\\nModifierbarhet - används i väldigt olika typer av forskningsprojekt\\n\\nPrestanda – måste ha tillgång till hårdvara för att utveckla de algoritmer i världsklass'), 0.7629496155), (Document(id='lecture-04_Systemarkitektur.pdf-p0-c1-a3225f3e-d924-44a5-b9fa-67b6f73f1790', metadata={'relative_path': 'Fö4\\\\lecture-04_Systemarkitektur.pdf', 'source': 'C:\\\\Users\\\\bergs\\\\AppData\\\\Local\\\\Temp\\\\tmpcf9pc3m5\\\\lecture-04_Systemarkitektur.pdf', 'start_index': 594.0}, page_content='– körnings-struktur (server, klient, nätverk,\\n\\nshm, etc)\\n\\n– etc.\\n\\n[Pfleeger]\\n\\nKörnings-struktur\\n\\nHur ser systemet ut internt under körning\\n\\n– Flera vyer om det kan se olika ut\\n\\n– Instanser, processer, datastrukturer, anropsvägar\\n\\n[Pfleeger]\\n\\nViktiga element\\n\\nVad finns där?\\n\\nNoder\\n\\n– datorer, servrar, processer, program, etc.\\n\\nGränssnitt\\n\\n– process-anrop, abstraktion, nätverkskommunikation, etc.\\n\\nProgramvaruenheter\\n\\n– oftast moduler och submoduler\\n\\nVad finns inte med?\\n\\n– implementations-specifika algoritmer – variabler, klasser, objekt, funktioner\\n\\n[Pfleeger]\\n\\nKodstruktur\\n\\nVilka moduler har systemet (systemets kodbas)\\n\\n– Hur förhåller sig dessa till varandra\\n\\n– Paket, bibliotek, filer, enheter, komponenter\\n\\n[Pfleeger]\\n\\nNågra viktiga termer\\n\\nprogramvaruenhet: del av ett system som kan relateras till som en enhet, t ex utifrån dess roll. Kan rent praktiskt vara en klass, modul eller någonting annat.\\n\\ngränssnitt: del av en programvaruenhet som syns och används av andra enheter, ibland även för ett specifikt syfte.\\n\\n[Pfleeger]\\n\\nDesignprocess för Agil utveckling\\n\\nSprint-backlog\\n\\nAktuell design\\n\\nOm-modellering\\n\\nAnalys\\n\\nOm-modellering\\n\\nAnalyser nya krav i sprint-backloggen • • • Analys\\n\\nFörändra den nuvarande designen för de nya kraven Rita och diskutera – spara alla möjliga alternativ\\n\\n• •\\n\\nJämför de nya alternativen utifrån olika kvalitetsattribut Välj det bästa alternativet (Dokumentera varför ni valde det vid behov)\\n\\nSystemarkitektur för Agil utveckling'), 0.7626499234999999)]"
Arguments: ()
2025-05-07 10:55:11,024 - INFO - -----------------------------

client_session: <aiohttp.client.ClientSession object at 0x000001456F5AC7D0>
2025-05-07 11:04:01,075 - INFO - Last Question: Hur mycket får jag använda AI i den här kursen?
2025-05-07 11:04:01,075 - INFO - Conversation: [ConversationData(id='a45dd4d9-183c-40f4-8be1-8f94b959ae03', role='user', content='Vad kan du hjälpa till med?'), ConversationData(id='run-c1cc2e79-e05e-49bb-b074-3a25b51ab773', role='assistant', content='Jag kan hjälpa till med frågor kring kursen TNM094, ge information om kursinnehåll, studietips, resurser, samt allmänna frågor relaterade till Linköpings universitet. Om du har specifika frågor, dela gärna med dig av dem!'), ConversationData(id='243ea137-a8bd-4dd8-ba2d-e565fa80fa83', role='user', content='Vad ska ingå i den individuella rapporten?'), ConversationData(id='run-63d0a870-11cc-4102-bd71-0e82eee42947', role='assistant', content='Den individuella rapporten ska innefatta följande delar:\n\n1. **Teknisk utredning**: En välmotiverad analys av ett problem relaterat till projektet och en genomarbetad plan för hur projektet kan genomföras.\n\n2. **Reflektioner**: Opiniösa reflektioner över din egen roll i projektet och hur det har gått, inklusive vad som fungerade väl och vad som kan förbättras. Detta bör innefatta referenser till relevant litteratur.\n\n3. **Listning av bidrag**: En lista över vilka som varit involverade i projektet, både i teamet och externt, samt en beskrivning av deras individuella bidrag.\n\n4. **Språk och formalia**: Rapporten ska vara språkligt godkänd med korrekt stavning, grammatik, flöde och struktur.\n\nTänk på att anpassa rapporten till målgruppen, förutsatt att de har viss förståelse för utvecklingsprinciper och medietekniska ämnen.'), ConversationData(id='66d08af5-4b7a-4e29-a351-97ff4491e490', role='user', content='Hur ska jag lägga upp kodstrukturen för lab2?'), ConversationData(id='run-ef61ffe6-506f-4d82-b580-84eabb73cbe4', role='assistant', content='För lab2 bör du tänka på följande aspekter när du lägger upp kodstrukturen:\n\n1. **Modulär struktur**: Dela upp din kod i moduler som hanterar olika funktionaliteter. Det kan vara bra att ha separata filer för olika klasser och funktioner.\n\n2. **Klassdiagram**: Utgå från det klassdiagram som ni har skapat. Se till att klasserna och deras relationer reflekteras i kodstrukturen.\n\n3. **Följa konventioner**: Använd beskrivande namn för klasser, metoder och variabler. Det gör koden enklare att läsa och förstå.\n\n4. **Versionshantering**: Använd Git för att hantera versioner av din kod. Se till att regelbundet pusha ändringar till repositoryt.\n\n5. **Dokumentation**: Kommentera din kod och dokumentera klasser och metoder noggrant så att det är klart för andra vad syftet och funktionen är.\n\n6. **Testning**: Strukturera koden så att det är enkelt att implementera och köra tester. Separera testfiler från produktionskoden.\n\nGenom att följa dessa riktlinjer kommer du att skapa en kodstruktur som är både lätt att följa och underhålla.'), ConversationData(id='eb12452f-df93-4f05-869f-e9bf98d432e9', role='user', content='Vem är examinator i kursen?'), ConversationData(id='run-01dd5af3-1ad0-49bf-9587-120b686e9d97', role='assistant', content='Examinatorn för kursen TNM094 är Daniel Jönsson. Du kan kommunicera med honom om du har frågor eller funderingar angående kursinnehållet.'), ConversationData(id='e996af5c-803e-4da0-935f-974cd899f4fb', role='user', content='Kan du förklara systemarkitekturen för kaffemaskinen?'), ConversationData(id='run-695a61ce-082f-49e4-8d80-23e20309838c', role='assistant', content='Självklart! Systemarkitekturen för en kaffemaskin kan utformas med hjälp av olika nivåer:\n\n1. **Nivå 1: Systemkontext** \n   - Identifiera användare: slutanvändare (konsumenter), servicetekniker.\n   - Externa system: vattenkälla, elnät och eventuell app för fjärrstyrning.\n\n2. **Nivå 2: Systemet (containers)**\n   - **Användargränssnitt (UI)**: För användarinmatning och val av kaffetyp och antal koppar.\n   - **Kontrollsystem**: Styr logik för bryggning baserat på användarens val.\n   - **Vatten- och kaffebehållare**: Moduler för att lagra vatten och kaffe, samt för att dosera rätt mängd.\n   - **Värmesystem**: Ansvarar för att värma upp vatten till rätt temperatur för bryggning.\n   - **Maskinens styrsystem**: Handhar kommunikation mellan de olika komponenterna och ser till att processen följer rätt steg.\n\n3. **Nivå 3: Systemkomponenter**\n   - **Sensorer**: För att mäta vattennivå och temperature.\n   - **Pump**: För att driva vattnet genom kaffegruget.\n   - **Brew Unit**: Själva enheten där bryggningsprocessen äger rum (inkluderar malning av bönor om det är en integrerad funktion).\n\nDenna arkitektur ger en förståelse för hur systemet är uppdelat, hur dess komponenter interagerar, och hur användarens behov möts genom olika moduler. Det är viktigt att tänka på modulär design för att göra systemet lättare att underhålla och expandera i framtiden.'), ConversationData(id='111f5908-2a46-4bdb-ae77-f124f410bd8d', role='user', content='Hur mycket får jag använda AI i den här kursen?')]
2025-05-07 11:04:01,078 - INFO - Number of Found Documents: 4
2025-05-07 11:04:01,078 - INFO - Found Documents: [(Document(id='lecture-00_Kursinformation.pdf-p0-c0-2bc33288-4b57-4479-a52f-0e30ce489968', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 0.0}, page_content='TNM094 – Medietekniskt kandidatprojekt\n\nKursinformation 2025\n\nDaniel Jönsson\n\nMen först lite om mig\n\nDenna kurs\n\nProjekthantering, processer och rutiner\n\nSkapa system som kunden vill ha, i tid och inom budget • Förstå vidden och betydelsen av systemutveckling\n\nPraxis, erfarenheter och riktlinjer • Fyll din personliga verktygslåda Medietekniskt kandidatarbete\n\nVisa på medietekniskt kunskap och ingenjörsmässighet\n\nKräver stort personligt ansvar!\n\nKommunicera med examinatorn om något känns oklart • Läs instruktioner, lisam-uppdatering och e-brev\n\nVad är Medietekniskt?\n\nNi har läst\n\n25 kurser på 60 hp + 60 hp + 30 hp = 150 hp Varav minst 60 hp inom medietekniska ämnen (Datorgrafik, visualisering, VR-teknik, elektronisk publicering, ljud, bildbehandling, etc.)\n\nDags att ta fram\n\nGömd kunskap och outnyttjade förmågor • Glömd kurslitteratur, länkar och kompendier\n\nForsknings- och utforskningslustan\n\nDenna kurs\n\nTNM094, 18 hp = 9 hp / termin = 60 % fart\n\nUPG1 Uppsats (1,5 hp U,G)\n\nIndividuell rapport över en egen plan för ett tilldelat projekt. LAB1 Laborationer (2 hp U,G) Övningar genomförs i grupper om två alternativt individuellt. PRA1 Projekt (14 hp U,G) Genomförs i grupper om 4–8. • UPG2 Opponering (0,5 hp U,G)\n\nIndividuell, skriftlig opponering baserad på projektrapporten.\n\nDenna kurs\n\nParallell med\n\nTNM119 Introduktion till Arificiell Intelligens, 6 hp = 40 % fart TND004 Datastrukturer, 6 hp = 40 % fart\n\nTNM094 - 60 % av schemat'), 0.7719182075), (Document(id='lecture-00_Kursinformation.pdf-p0-c10-da4a7cd9-3681-4e70-b34f-f449deac944d', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 7611.0}, page_content='Om arbetsbelastning och slackers\n\nVi accepterar inte slackers\n\nAlla ska hjälpas åt att balansera arbetsbelastningen\n\nFölj överenskomna deadlines\n\nSummerad git-historik ska rapporteras i slutrapporten\n\nKontakta kursledningen om ni inte kan komma överens!\n\nAnvändning av generativ AI\n\nTillåten nivå i TNM094\n\nTänk på källhantering\n\nAnvänd inte ChatGPT som källa\n\nTexten ska koppla till projektet\n\nBedömningskriterier (se lisam/kursinformation)\n\nLärandemål skapa och analysera tekniska lösningar för att lösa ett givet problem inom området medieteknik (exempelvis publicering, ljud- och bildteknik, datorgrafik och visualisering).\n\nL1\n\nKriterier för betyg G - Beskriver översiktligt krav som ligger till grund för givet problem.\n\nBeskriver översiktligt en teknisk lösning till givet problem.\n\nBeskriver en plan för att lösa givet problem.\n\nSkapar och implementerar en teknisk lösning på ett väldefinierat problem.\n\nMotiverar och väljer metoder och tekniker för att lösa givet problem.\n\nImplementerar och demonstrerar resultat av valda lösningar.\n\nDrar slutsatser över hur lämpliga valda lösningar var.\n\nsöka och tillgodogöra sig innehållet i relevant facklitteratur för att lösa eller reflektera över lösningen på ett givet problem\n\nL2\n\nKorrekt refererar till minst en relevant vetenskaplig artikel.\n\nKorrekt refererar till flera relevanta vetenskapliga artiklar.\n\nformulera frågeställningar samt avgränsa inom givna tidsramar\n\ni grupp planera, genomföra och redovisa ett arbete\n\nL3\n\nL4'), 0.7673853935), (Document(id='lecture-00_Kursinformation.pdf-p0-c1-23ca1e03-33ee-4e61-bdc2-bb56d2675bde', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 767.0}, page_content='Dags att ta fram\n\nGömd kunskap och outnyttjade förmågor • Glömd kurslitteratur, länkar och kompendier\n\nForsknings- och utforskningslustan\n\nDenna kurs\n\nTNM094, 18 hp = 9 hp / termin = 60 % fart\n\nUPG1 Uppsats (1,5 hp U,G)\n\nIndividuell rapport över en egen plan för ett tilldelat projekt. LAB1 Laborationer (2 hp U,G) Övningar genomförs i grupper om två alternativt individuellt. PRA1 Projekt (14 hp U,G) Genomförs i grupper om 4–8. • UPG2 Opponering (0,5 hp U,G)\n\nIndividuell, skriftlig opponering baserad på projektrapporten.\n\nDenna kurs\n\nParallell med\n\nTNM119 Introduktion till Arificiell Intelligens, 6 hp = 40 % fart TND004 Datastrukturer, 6 hp = 40 % fart\n\nTNM094 - 60 % av schemat\n\n18 hp = 5 timmar och 48 minuter varje dag! Även under ”lov” och tentamens-perioder!\n\nBlockschema VT1\n\nVT1 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM119 TNM094 TNM094 TNM094 TNM119\n\n10-12 TNM094 TNM094 TNM119\n\n13-15 TNM094 TNM094 TNM094 TNM119 TNM094 15-17 TNM094 TNM094 TNM094 TNM119 TNM094\n\nBlockschema VT2\n\nVT2 Måndag Tisdag Onsdag Torsdag Fredag 8-10 TNM094 TNM094 TNM094 TND004 TNM094 TNM094\n\n10-12 TND004 TNM094 TNM094\n\n13-15 TNM094 TND004 TNM094 TNM094 TNM094 15-17 TNM094 TND004 TNM094 TNM094 TND004\n\nVäldigt mycket grupparbete i VT2 Upp till er att komma överens om när ni ska sitta i grupp och när det är individuellt arbete (gruppkontrakt)\n\nKursöversikt\n\nFöreläsningar\n\nProjekthantering\n\n1. 2. Utvecklingsmetodik 3. Projektanalys, krav och planering • Principer för systemutveckling'), 0.7671343685), (Document(id='lecture-00_Kursinformation.pdf-p0-c9-91f7b1e2-46fd-40e2-b70d-e9c7737db0be', metadata={'relative_path': 'Fö1\\lecture-00_Kursinformation.pdf', 'source': 'C:\\Users\\bergs\\AppData\\Local\\Temp\\tmp89s_nsit\\lecture-00_Kursinformation.pdf', 'start_index': 6841.0}, page_content='Diskutera med varandra om uppdraget Kopiera inte text mellan varandra Dina rapporter ska vara skrivna av dig (från tanke till ord) Citat, tabeller, bilder, figurer, etc. ska innehålla referenser Upphovsrätt gäller; följ lagar och förordningar\n\nProjektdokumentation och –rapporter\n\nUpphovsrätt gäller även här; följ lagar och förordningar\n\nPlagiering: vad är ok att återanvända i den här kursen? VIKTIGT!!!\n\nIndividuell rapport -> gemensam projektplan (ok)\n\nGemensam projektplan -> Projektrapport (ok)\n\nIndividuell rapport <- gemensam projektplan (ej ok, om inte DU helt har\n\nskrivit texten)\n\nEtik och regler\n\nProjekt\n\nOm att ta programkod från internet Följ lagar och förordningar Köp licenser eller använd OSS enligt licens\n\nNi ansvarar för kvalitén hos slutprodukten\n\nOm arbetsbelastning och slackers\n\nVi accepterar inte slackers\n\nAlla ska hjälpas åt att balansera arbetsbelastningen\n\nFölj överenskomna deadlines\n\nSummerad git-historik ska rapporteras i slutrapporten\n\nKontakta kursledningen om ni inte kan komma överens!\n\nAnvändning av generativ AI\n\nTillåten nivå i TNM094\n\nTänk på källhantering\n\nAnvänd inte ChatGPT som källa\n\nTexten ska koppla till projektet\n\nBedömningskriterier (se lisam/kursinformation)\n\nLärandemål skapa och analysera tekniska lösningar för att lösa ett givet problem inom området medieteknik (exempelvis publicering, ljud- och bildteknik, datorgrafik och visualisering).\n\nL1\n\nKriterier för betyg G - Beskriver översiktligt krav som ligger till grund för givet problem.'), 0.7615142165)]
2025-05-07 11:04:01,081 - INFO - -----------------------------
